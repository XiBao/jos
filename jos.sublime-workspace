{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Member",
				"MemberFilter"
			],
			[
				"lotter",
				"lotterySetting"
			],
			[
				"acti",
				"activityId"
			],
			[
				"getC",
				"getCampaignInfo"
			],
			[
				"updateCa",
				"updateCampaignInfo"
			],
			[
				"defau",
				"colorBgDefault"
			],
			[
				"pan",
				"panelSwipeData"
			],
			[
				"border",
				"border-radius"
			],
			[
				"neare",
				"nearestPoi"
			],
			[
				"near",
				"nearestPoi"
			],
			[
				"calu",
				"caculation_method"
			],
			[
				"cal",
				"calculationMethod"
			],
			[
				"increment",
				"increment_fee"
			],
			[
				"get",
				"getLocationsWithLevel"
			],
			[
				"selected",
				"selectedAttributes"
			],
			[
				"display",
				"displayAddAttributeDialog"
			],
			[
				"addAttr",
				"addAttrValueId"
			],
			[
				"addAt",
				"addAttrValueId"
			],
			[
				"addA",
				"addValueForm"
			],
			[
				"getCae",
				"getCategoriesByPid"
			],
			[
				"getCa",
				"getCategoriesByPid"
			],
			[
				"descS",
				"descSectionMoveUp"
			],
			[
				"nav",
				"navHeaderTitle"
			],
			[
				"vue",
				"vuetify"
			],
			[
				"countdown",
				"countdown-overlay"
			],
			[
				"title",
				"fontWeightTitle"
			],
			[
				"pro",
				"prototype"
			],
			[
				"Depth",
				"DepthClusterViewMode"
			],
			[
				"seriz",
				"serializeChildren"
			],
			[
				"node",
				"nodeName"
			],
			[
				"selec",
				"selectedLocation"
			],
			[
				"play",
				"playing"
			],
			[
				"backg",
				"background-color"
			],
			[
				"pick",
				"showPickerView"
			],
			[
				"messageInpu",
				"messageInputBottom"
			],
			[
				"current",
				"currentSwiperIndex"
			],
			[
				"bord",
				"border-radius"
			],
			[
				"link",
				"colorLink"
			],
			[
				"tap",
				"tappedSong"
			],
			[
				"auth",
				"authToken"
			],
			[
				"font",
				"fontWeightTitle"
			],
			[
				"foundSele",
				"foundSelectedGroup"
			],
			[
				"openg",
				"openGidActivityId"
			],
			[
				"seri",
				"seriesName"
			],
			[
				"tabb",
				"tabBarSelector"
			],
			[
				"failed",
				"failedPlays"
			],
			[
				"flex",
				"flex-direction"
			],
			[
				"back",
				"background-color"
			],
			[
				"nava",
				"navigateTo"
			],
			[
				"draw",
				"drawImage"
			],
			[
				"message",
				"messages-box"
			],
			[
				"like-",
				"likes-avatar"
			],
			[
				"poi-swiper",
				"poi-swiper-item"
			],
			[
				"wi",
				"windowHeight"
			],
			[
				"no",
				"noMoreData"
			],
			[
				"time",
				"formatTime"
			],
			[
				"style",
				"stylesheet"
			],
			[
				"media",
				"mediaContent"
			],
			[
				"getEl",
				"getElementById"
			],
			[
				"ba",
				"background-image\tproperty"
			],
			[
				"text",
				"text-align\tproperty"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 213 files for \"log\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/AddBeanPlan.go:\n   72  \tresult, err := client.Execute(r.Request, req.Session)\n   73  \tif err != nil {\n   74: \t\tlogger.Error(err)\n   75  \t\treturn 0, err\n   76  \t}\n   ..\n   80  \terr = ljson.Unmarshal(result, &response)\n   81  \tif err != nil {\n   83  \t\treturn 0, err\n   84  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/asc.serviceAndRefund.view.go:\n   96  \tresult, err := client.Execute(r.Request, req.Session)\n   97  \tif err != nil {\n   98: \t\tlogger.Error(err)\n   99  \t\treturn nil, err\n  100  \t}\n  ...\n  105  \terr = ljson.Unmarshal(result, &response)\n  106  \tif err != nil {\n  107: \t\tlogger.Error(err)\n  108  \t\treturn nil, err\n  109  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/client.queryBrandsIdByVenderId.go:\n   35  \tresult, err := client.Execute(r.Request, req.Session)\n   36  \tif err != nil {\n   37: \t\tlogger.Error(err)\n   38  \t\treturn 0, err\n   39  \t}\n   ..\n   44  \terr = ljson.Unmarshal(result, &response)\n   45  \tif err != nil {\n   46: \t\tlogger.Error(err)\n   47  \t\treturn 0, err\n   48  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm.getMemeberDiscount.go:\n   44  \tresult, err := client.Execute(r.Request, req.Session)\n   45  \tif err != nil {\n   46: \t\tlogger.Error(err)\n   47  \t\treturn nil, err\n   48  \t}\n   ..\n   53  \terr = ljson.Unmarshal(result, &response)\n   54  \tif err != nil {\n   55: \t\tlogger.Error(err)\n   56  \t\treturn nil, err\n   57  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm.getShopRuleType.go:\n   36  \tresult, err := client.Execute(r.Request, req.Session)\n   37  \tif err != nil {\n   38: \t\tlogger.Error(err)\n   39  \t\treturn 0, err\n   40  \t}\n   ..\n   45  \terr = ljson.Unmarshal(result, &response)\n   46  \tif err != nil {\n   47: \t\tlogger.Error(err)\n   48  \t\treturn 0, err\n   49  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm.isPointsEnabled.go:\n   31      result, err := client.Execute(r.Request, req.Session)\n   32      if err != nil {\n   33:         logger.Error(err)\n   34          return false, err\n   35      }\n   ..\n   40      err = ljson.Unmarshal(result, &response)\n   41      if err != nil {\n   42:         logger.Error(err)\n   43          return false, err\n   44      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm.SetMemberGrade.go:\n   40  \tresult, err := client.Execute(r.Request, req.Session)\n   41  \tif err != nil {\n   42: \t\tlogger.Error(err)\n   43  \t\treturn false, err\n   44  \t}\n   ..\n   49  \terr = ljson.Unmarshal(result, &response)\n   50  \tif err != nil {\n   51: \t\tlogger.Error(err)\n   52  \t\treturn false, err\n   53  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm.setShopLevelRule.go:\n   37  \tresult, err := client.Execute(r.Request, req.Session)\n   38  \tif err != nil {\n   39: \t\tlogger.Error(err)\n   40  \t\treturn false, err\n   41  \t}\n   ..\n   46  \terr = ljson.Unmarshal(result, &response)\n   47  \tif err != nil {\n   48: \t\tlogger.Error(err)\n   49  \t\treturn false, err\n   50  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/DeleteCustomerOpenInfo.go:\n   38  \tresult, err := client.Execute(r.Request, req.Session)\n   39  \tif err != nil {\n   40: \t\tlogger.Error(err)\n   41  \t\treturn false, err\n   42  \t}\n   ..\n   47  \terr = ljson.Unmarshal(result, &response)\n   48  \tif err != nil {\n   49: \t\tlogger.Error(err)\n   50  \t\treturn false, err\n   51  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.adkckeyword.categorypricesuggest.query.go:\n   56      result, err := client.Execute(r.Request, req.Session)\n   57      if err != nil {\n   58:         logger.Error(err)\n   59          return nil, err\n   60      }\n   ..\n   66  \n   67      if err != nil {\n   68:         logger.Error(err)\n   69          return nil, err\n   70      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.adkckeyword.keyword.delete.go:\n   39      result, err := client.Execute(r.Request, req.Session)\n   40      if err != nil {\n   41:         logger.Error(err)\n   42          return false, err\n   43      }\n   ..\n   47      var response KeywordDeleteResponse\n   48      err = ljson.Unmarshal(result, &response)\n   49:     logger.Infof(\"%#v\",response.Data.Result)\n   50      if err != nil {\n   51:         logger.Error(err)\n   52          return false, err\n   53      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.adkckeyword.keywordpricesuggest.query.go:\n   50      result, err := client.Execute(r.Request, req.Session)\n   51      if err != nil {\n   52:         logger.Error(err)\n   53          return nil, err\n   54      }\n   ..\n   60  \n   61      if err != nil {\n   62:         logger.Error(err)\n   63          return nil, err\n   64      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.adkckeyword.newkeyword.insert.go:\n   44      result, err := client.Execute(r.Request, req.Session)\n   45      if err != nil {\n   46:         logger.Error(err)\n   47          return false, err\n   48      }\n   ..\n   53      err = ljson.Unmarshal(result, &response)\n   54      if err != nil {\n   55:         logger.Error(err)\n   56          return false, err\n   57      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.adkckeyword.recommendkeyword.get.go:\n   57      result, err := client.Execute(r.Request, req.Session)\n   58      if err != nil {\n   59:         logger.Error(err)\n   60          return nil, err\n   61      }\n   ..\n   66      err = ljson.Unmarshal(result, &response)\n   67      if err != nil {\n   68:         logger.Error(err)\n   69          return nil, err\n   70      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.adkckeyword.updateKeyWords.go:\n   50      result, err := client.Execute(r.Request, req.Session)\n   51      if err != nil {\n   52:         logger.Error(err)\n   53          return false, err\n   54      }\n   ..\n   59      err = ljson.Unmarshal(result, &response)\n   60      if err != nil {\n   61:         logger.Error(err)\n   62          return false, err\n   63      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.adkcunit.adgroup.list.go:\n   68      result, err := client.Execute(r.Request, req.Session)\n   69      if err != nil {\n   70:         logger.Error(err)\n   71          return nil, 0, err\n   72      }\n   ..\n   77      err = ljson.Unmarshal(result, &response)\n   78      if err != nil {\n   79:         logger.Error(err)\n   80          return nil, 0, err\n   81      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.adkcunit.status.update.go:\n   42  \n   43      if err != nil {\n   44:         logger.Error(err)\n   45          return false, err\n   46      }\n   ..\n   51      err = ljson.Unmarshal(result, &response)\n   52      if err != nil {\n   53:         logger.Error(err)\n   54          return false, err\n   55      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/Dsp.balance.go:\n   46  \tresult, err := client.Execute(r.Request, req.Session)\n   47  \tif err != nil {\n   48: \t\tlogger.Error(err)\n   49  \t\treturn nil, err\n   50  \t}\n   51      result = RemoveJsonSpace(result)\n   52:     // logger.Info(string(result))\n   53  \n   54  \tvar response DspBalanceResponse\n   55  \terr = ljson.Unmarshal(result, &response)\n   56  \tif err != nil {\n   57: \t\tlogger.Error(err)\n   58  \t\treturn nil, err\n   59  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.kc.ad.queryAdListByParam.go:\n   64      result, err := client.Execute(r.Request, req.Session)\n   65      if err != nil {\n   66:         logger.Error(err)\n   67          return nil, 0, err\n   68      }\n   ..\n   73      err = ljson.Unmarshal(result, &response)\n   74      if err != nil {\n   75:         logger.Error(err)\n   76          return nil, 0, err\n   77      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.kc.ad.updatestatus.go:\n   44      result, err := client.Execute(r.Request, req.Session)\n   45      if err != nil {\n   46:         logger.Error(err)\n   47          return false, err\n   48      }\n   ..\n   53      err = ljson.Unmarshal(result, &response)\n   54      if err != nil {\n   55:         logger.Error(err)\n   56          return false, err\n   57      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.kc.campain.daybudget.update.go:\n   42      result, err := client.Execute(r.Request, req.Session)\n   43      if err != nil {\n   44:         logger.Error(err)\n   45          return false, err\n   46      }\n   ..\n   51      err = ljson.Unmarshal(result, &response)\n   52      if err != nil {\n   53:         logger.Error(err)\n   54          return false, err\n   55      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.kc.campain.delete.go:\n   39      result, err := client.Execute(r.Request, req.Session)\n   40      if err != nil {\n   41:         logger.Error(err)\n   42          return false, err\n   43      }\n   ..\n   48      err = ljson.Unmarshal(result, &response)\n   49      if err != nil {\n   50:         logger.Error(err)\n   51          return false, err\n   52      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.kc.campain.get.go:\n   53      result, err := client.Execute(r.Request, req.Session)\n   54      if err != nil {\n   55:         logger.Error(err)\n   56          return nil, err\n   57      }\n   ..\n   62      err = ljson.Unmarshal(result, &response)\n   63      if err != nil {\n   64:         logger.Error(err)\n   65          return nil, err\n   66      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.kc.campain.list.go:\n   66      result, err := client.Execute(r.Request, req.Session)\n   67      if err != nil {\n   68:         logger.Error(err)\n   69          return nil, 0, err\n   70      }\n   ..\n   75      err = ljson.Unmarshal(result, &response)\n   76      if err != nil {\n   77:         logger.Error(err)\n   78          return nil, 0, err\n   79      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.kc.campain.status.update.go:\n   42      result, err := client.Execute(r.Request, req.Session)\n   43      if err != nil {\n   44:         logger.Error(err)\n   45          return false, err\n   46      }\n   ..\n   51      err = ljson.Unmarshal(result, &response)\n   52      if err != nil {\n   53:         logger.Error(err)\n   54          return false, err\n   55      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.kc.campainShop.add.go:\n   41      result, err := client.Execute(r.Request, req.Session)\n   42      if err != nil {\n   43:         logger.Error(err)\n   44          return false, err\n   45      }\n   ..\n   51      err = ljson.Unmarshal(result, &response)\n   52      if err != nil {\n   53:         logger.Error(err)\n   54          return false, err\n   55      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.report.adgroupkeyword.query.go:\n  232      result, err := client.Execute(r.Request, req.Session)\n  233      if err != nil {\n  234:         logger.Error(err)\n  235          return nil, err\n  236      }\n  ...\n  242  \n  243      if err != nil {\n  244:         logger.Error(err)\n  245          return nil, err\n  246      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/Dsp.report.queryAccountReport.go:\n  104  \tresult, err := client.Execute(r.Request, req.Session)\n  105  \tif err != nil {\n  106: \t\tlogger.Error(err)\n  107  \t\treturn nil, err\n  108  \t}\n  109      result = RemoveJsonSpace(result)\n  110:     // logger.Info(string(result))\n  111  \n  112  \tvar response DspReportQueryAccountReportResponse\n  113  \terr = ljson.Unmarshal(result, &response)\n  114  \tif err != nil {\n  115: \t\tlogger.Error(err)\n  116  \t\treturn nil, err\n  117  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.report.queryCampDailySum.go:\n  127      result, err := client.Execute(r.Request, req.Session)\n  128      if err != nil {\n  129:         logger.Error(err)\n  130          return nil, err\n  131      }\n  ...\n  137      err = ljson.Unmarshal(result, &response)\n  138      if err != nil {\n  139:         logger.Error(err)\n  140          return nil, err\n  141      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.report.queryGroupDailySum.go:\n  122  \n  123      if err != nil {\n  124:         logger.Error(err)\n  125          return nil, 0, err\n  126      }\n  ...\n  132      err = ljson.Unmarshal(result, &response)\n  133      if err != nil {\n  134:         logger.Error(err)\n  135          return nil, 0, err\n  136      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/EnqueryRegistrationDataCount.go:\n   44  \tresult, err := client.Execute(r.Request, req.Session)\n   45  \tif err != nil {\n   46: \t\tlogger.Error(err)\n   47  \t\treturn nil, err\n   48  \t}\n   ..\n   54  \terr = ljson.Unmarshal(result, &response)\n   55  \tif err != nil {\n   56: \t\tlogger.Error(err)\n   57  \t\treturn nil, err\n   58  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/FindCateById.go:\n   37  \tresult, err := client.Execute(r.Request, req.Session)\n   38  \tif err != nil {\n   39: \t\tlogger.Error(err)\n   40  \t\treturn nil, err\n   41  \t}\n   ..\n   46  \terr = ljson.Unmarshal(result, &response)\n   47  \tif err != nil {\n   48: \t\tlogger.Error(err)\n   49  \t\treturn nil, err\n   50  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/FindCateByPid.go:\n   38  \tresult, err := client.Execute(r.Request, req.Session)\n   39  \tif err != nil {\n   40: \t\tlogger.Error(err)\n   41  \t\treturn nil, err\n   42  \t}\n   ..\n   47  \terr = ljson.Unmarshal(result, &response)\n   48  \tif err != nil {\n   49: \t\tlogger.Error(err)\n   50  \t\treturn nil, err\n   51  \t}\n   ..\n   55  \t}\n   56  \n   57: \t//logger.Infof(\"response: %s\", Json(response))\n   58  \treturn response.Data.Categories, nil\n   59  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/FindSkuById.go:\n   37  \tresult, err := client.Execute(r.Request, req.Session)\n   38  \tif err != nil {\n   39: \t\tlogger.Error(err)\n   40  \t\treturn nil, err\n   41  \t}\n   ..\n   46  \terr = ljson.Unmarshal(result, &response)\n   47  \tif err != nil {\n   48: \t\tlogger.Error(err)\n   49  \t\treturn nil, err\n   50  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/FindWareById.go:\n   37  \tresult, err := client.Execute(r.Request, req.Session)\n   38  \tif err != nil {\n   39: \t\tlogger.Error(err)\n   40  \t\treturn nil, err\n   41  \t}\n   ..\n   46  \terr = ljson.Unmarshal(result, &response)\n   47  \tif err != nil {\n   48: \t\tlogger.Error(err)\n   49  \t\treturn nil, err\n   50  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/FollowByPinAndVid.go:\n   41  \tresult, err := client.Execute(r.Request, req.Session)\n   42  \tif err != nil {\n   43: \t\tlogger.Error(err)\n   44  \t\treturn false, err\n   45  \t}\n   ..\n   50  \terr = ljson.Unmarshal(result, &response)\n   51  \tif err != nil {\n   52: \t\tlogger.Error(err)\n   53  \t\treturn false, err\n   54  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/followProductComplexWriteFollow.go:\n   41  \tresult, err := client.Execute(r.Request, req.Session)\n   42  \tif err != nil {\n   43: \t\tlogger.Error(err)\n   44  \t\treturn false, err\n   45  \t}\n   ..\n   50  \terr = ljson.Unmarshal(result, &response)\n   51  \tif err != nil {\n   52: \t\tlogger.Error(err)\n   53  \t\treturn false, err\n   54  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/fw.orderListwithpage.go:\n   89  \tresult, err := client.Execute(r.Request, req.Session)\n   90  \tif err != nil {\n   91: \t\tlogger.Error(err)\n   92  \t\treturn nil, err\n   93  \t}\n   ..\n   98  \terr = ljson.Unmarshal(result, &response)\n   99  \tif err != nil {\n  100: \t\tlogger.Error(err)\n  101  \t\treturn nil, err\n  102  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetAccessToken.go:\n   35  \tresult, err := client.GetAccessToken(req.Code, req.State, req.RedirectUri)\n   36  \tif err != nil {\n   37: \t\tlogger.Error(err)\n   38  \t\treturn nil, err\n   39  \t}\n   40  \tif result == \"\" {\n   41  \t\terr := errors.New(\"no result.\")\n   42: \t\tlogger.Error(err)\n   43  \t\treturn nil, err\n   44  \t}\n   ..\n   46  \terr = ljson.Unmarshal([]byte(result), &response)\n   47  \tif err != nil {\n   48: \t\tlogger.Error(err)\n   49  \t\treturn nil, err\n   50  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetAccessTokenNew.go:\n   32  \tresult, err := client.GetAccessTokenNew(req.Code)\n   33  \tif err != nil {\n   34: \t\tlogger.Error(err)\n   35  \t\treturn nil, err\n   36  \t}\n   37  \tif result == \"\" {\n   38  \t\terr := errors.New(\"No result.\")\n   39: \t\tlogger.Error(err)\n   40  \t\treturn nil, err\n   41  \t}\n   ..\n   43  \terr = ljson.Unmarshal([]byte(result), &response)\n   44  \tif err != nil {\n   45: \t\tlogger.Error(err)\n   46  \t\treturn nil, err\n   47  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetBeanAccountInfo.go:\n   36  \tresult, err := client.Execute(r.Request, req.Session)\n   37  \tif err != nil {\n   38: \t\tlogger.Error(err)\n   39  \t\treturn nil, err\n   40  \t}\n   ..\n   44  \terr = ljson.Unmarshal(result, &response)\n   45  \tif err != nil {\n   46: \t\tlogger.Error(err)\n   47  \t\treturn nil, err\n   48  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetCrmGrades.go:\n   40  \tresult, err := client.Execute(r.Request, req.Session)\n   41  \tif err != nil {\n   42: \t\tlogger.Error(err)\n   43  \t\treturn nil, err\n   44  \t}\n   ..\n   49  \terr = ljson.Unmarshal(result, &response)\n   50  \tif err != nil {\n   51: \t\tlogger.Error(err)\n   52  \t\treturn nil, err\n   53  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetCustomerPoints.go:\n   34  \tresult, err := client.Execute(r.Request, req.Session)\n   35  \tif err != nil {\n   36: \t\tlogger.Error(err)\n   37  \t\treturn 0, err\n   38  \t}\n   ..\n   43  \terr = ljson.Unmarshal(result, &response)\n   44  \tif err != nil {\n   45: \t\tlogger.Error(err)\n   46  \t\treturn 0, err\n   47  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/getEncryptPinNew.go:\n   41  \tresult, err := client.Execute(r.Request, req.Session)\n   42  \tif err != nil {\n   43: \t\tlogger.Error(err)\n   44  \t\treturn ``, err\n   45  \t}\n   ..\n   50  \terr = ljson.Unmarshal(result, &response)\n   51  \tif err != nil {\n   52: \t\tlogger.Error(err)\n   53  \t\treturn ``, err\n   54  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetJmUserBaseInfoByEncryPin.go:\n   36  \tresult, err := client.Execute(r.Request, req.Session)\n   37  \tif err != nil {\n   38: \t\tlogger.Error(err)\n   39  \t\treturn nil, err\n   40  \t}\n   41  \tif len(result) == 0 {\n   42  \t\terr := errors.New(\"no result.\")\n   43: \t\tlogger.Error(err)\n   44  \t\treturn nil, err\n   45  \t}\n   ..\n   47  \terr = ljson.Unmarshal(result, &response)\n   48  \tif err != nil {\n   49: \t\tlogger.Error(err)\n   50  \t\treturn nil, err\n   51  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetMemberInVender.go:\n   38  \tresult, err := client.Execute(r.Request, req.Session)\n   39  \tif err != nil {\n   40: \t\tlogger.Error(err)\n   41  \t\treturn nil, err\n   42  \t}\n   ..\n   47  \terr = ljson.Unmarshal(result, &response)\n   48  \tif err != nil {\n   49: \t\tlogger.Error(err)\n   50  \t\treturn nil, err\n   51  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetOpenLink.go:\n   35  \n   36  \tresult, err := client.Execute(r.Request, req.Session)\n   37:     logger.Info(string(result))\n   38  \tif err != nil {\n   39: \t\tlogger.Error(err)\n   40  \t\treturn \"\", err\n   41  \t}\n   ..\n   45  \terr = ljson.Unmarshal(result, &response)\n   46  \tif err != nil {\n   47: \t\tlogger.Error(err)\n   48  \t\treturn \"\", err\n   49  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetPointsDetail.go:\n   75  \tresult, err := client.Execute(r.Request, req.Session)\n   76  \tif err != nil {\n   77: \t\tlogger.Error(err)\n   78  \t\treturn nil, err\n   79  \t}\n   ..\n   84  \terr = ljson.Unmarshal(result, &response)\n   85  \tif err != nil {\n   86: \t\tlogger.Error(err)\n   87  \t\treturn nil, err\n   88  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetPointsRule.go:\n   35  \tresult, err := client.Execute(r.Request, req.Session)\n   36  \tif err != nil {\n   37: \t\tlogger.Error(err)\n   38  \t\treturn nil, err\n   39  \t}\n   ..\n   45  \terr = ljson.Unmarshal(result, &response)\n   46  \tif err != nil {\n   47: \t\tlogger.Error(err)\n   48  \t\treturn nil, err\n   49  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetShopVenderInfo.go:\n   18  \t})\n   19  \tif err != nil {\n   20: \t\tlogger.Error(err)\n   21  \t\treturn nil, err\n   22  \t}\n   ..\n   29  \t})\n   30  \tif err != nil {\n   31: \t\tlogger.Error(err)\n   32  \t\treturn nil, err\n   33  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetUserBaseInfoByEncryPin.go:\n   36  \tresult, err := client.Execute(r.Request, req.Session)\n   37  \tif err != nil {\n   38: \t\tlogger.Error(err)\n   39  \t\treturn nil, err\n   40  \t}\n   41  \tif len(result) == 0 {\n   42  \t\terr := errors.New(\"no result.\")\n   43: \t\tlogger.Error(err)\n   44  \t\treturn nil, err\n   45  \t}\n   ..\n   47  \terr = ljson.Unmarshal(result, &response)\n   48  \tif err != nil {\n   49: \t\tlogger.Error(err)\n   50  \t\treturn nil, err\n   51  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetUserBaseInfoByPin.go:\n   36  \tresult, err := client.Execute(r.Request, req.Session)\n   37  \tif err != nil {\n   38: \t\tlogger.Error(err)\n   39  \t\treturn nil, err\n   40  \t}\n   41  \tif len(result) == 0 {\n   42  \t\terr := errors.New(\"no result.\")\n   43: \t\tlogger.Error(err)\n   44  \t\treturn nil, err\n   45  \t}\n   ..\n   47  \terr = ljson.Unmarshal(result, &response)\n   48  \tif err != nil {\n   49: \t\tlogger.Error(err)\n   50  \t\treturn nil, err\n   51  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/InteractCenterCreateGiftActivity.go:\n   87  \n   88      result, err := client.Execute(r.Request, req.Session)\n   89:     logger.Info(string(result))\n   90      if err != nil {\n   91:         logger.Error(err)\n   92          return nil, err\n   93      }\n   ..\n   97      err = ljson.Unmarshal(result, &response)\n   98      if err != nil {\n   99:         logger.Error(err)\n  100          return nil, err\n  101      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/InteractCenterFindCollectInfo.go:\n   71  \n   72  \tresult, err := client.Execute(r.Request, req.Session)\n   73:     logger.Info(string(result))\n   74  \tif err != nil {\n   75: \t\tlogger.Error(err)\n   76  \t\treturn nil, err\n   77  \t}\n   ..\n   81  \terr = ljson.Unmarshal(result, &response)\n   82  \tif err != nil {\n   83: \t\tlogger.Error(err)\n   84  \t\treturn nil, err\n   85  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/InteractCenterWriteCollectCoupon.go:\n   57  \n   58  \tresult, err := client.Execute(r.Request, req.Session)\n   59:     logger.Info(string(result))\n   60  \tif err != nil {\n   61: \t\tlogger.Error(err)\n   62  \t\treturn false, err\n   63  \t}\n   ..\n   67  \terr = ljson.Unmarshal(result, &response)\n   68  \tif err != nil {\n   69: \t\tlogger.Error(err)\n   70          return false, err\n   71  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/IsFollowByPinAndVid.go:\n   41  \tresult, err := client.Execute(r.Request, req.Session)\n   42  \tif err != nil {\n   43: \t\tlogger.Error(err)\n   44  \t\treturn false, err\n   45  \t}\n   ..\n   50  \terr = ljson.Unmarshal(result, &response)\n   51  \tif err != nil {\n   52: \t\tlogger.Error(err)\n   53  \t\treturn false, err\n   54  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/isv.uploadDBOperationLog.go:\n   49  \n   50  \tresult, err := client.Execute(r.Request, req.Session)\n   51:     logger.Info(string(result))\n   52  \tif err != nil {\n   53: \t\tlogger.Error(err)\n   54  \t\treturn -1, err\n   55  \t}\n   ..\n   60  \terr = ljson.Unmarshal(result, &response)\n   61  \tif err != nil {\n   62: \t\tlogger.Error(err)\n   63  \t\treturn -1, err\n   64  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/isv.uploadLoginLog.go:\n   49  \n   50  \tresult, err := client.Execute(r.Request, req.Session)\n   51:     logger.Info(string(result))\n   52  \tif err != nil {\n   53: \t\tlogger.Error(err)\n   54  \t\treturn -1, err\n   55  \t}\n   ..\n   60  \terr = ljson.Unmarshal(result, &response)\n   61  \tif err != nil {\n   62: \t\tlogger.Error(err)\n   63  \t\treturn -1, err\n   64  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/isv.uploadOrderLog.go:\n   53  \n   54  \tresult, err := client.Execute(r.Request, req.Session)\n   55:     logger.Info(string(result))\n   56  \tif err != nil {\n   57: \t\tlogger.Error(err)\n   58  \t\treturn -1, err\n   59  \t}\n   ..\n   64  \terr = ljson.Unmarshal(result, &response)\n   65  \tif err != nil {\n   66: \t\tlogger.Error(err)\n   67  \t\treturn -1, err\n   68  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/jos.batchInsertOrUpdateRule.go:\n   51  \tresult, err := client.Execute(r.Request, req.Session)\n   52  \tif err != nil {\n   53: \t\tlogger.Error(err)\n   54  \t\treturn false, err\n   55  \t}\n   ..\n   60  \terr = ljson.Unmarshal(result, &response)\n   61  \tif err != nil {\n   62: \t\tlogger.Error(err)\n   63  \t\treturn false, err\n   64  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/jos.getCouponInfo.go:\n   57  \tresult, err := client.Execute(r.Request, req.Session)\n   58  \tif err != nil {\n   59: \t\tlogger.Error(err)\n   60  \t\treturn nil, err\n   61  \t}\n   ..\n   66  \terr = ljson.Unmarshal(result, &response)\n   67  \tif err != nil {\n   68: \t\tlogger.Error(err)\n   69  \t\treturn nil, err\n   70  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/jos.getPointsExchangeGiftList.go:\n   48  \tresult, err := client.Execute(r.Request, req.Session)\n   49  \tif err != nil {\n   50: \t\tlogger.Error(err)\n   51  \t\treturn nil, err\n   52  \t}\n   ..\n   57  \terr = ljson.Unmarshal(result, &response)\n   58  \tif err != nil {\n   59: \t\tlogger.Error(err)\n   60  \t\treturn nil, err\n   61  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/jos.queryGiftSkuByExchangeGiftId.go:\n   60  \tresult, err := client.Execute(r.Request, req.Session)\n   61  \tif err != nil {\n   62: \t\tlogger.Error(err)\n   63  \t\treturn nil, err\n   64  \t}\n   ..\n   69  \terr = ljson.Unmarshal(result, &response)\n   70  \tif err != nil {\n   71: \t\tlogger.Error(err)\n   72  \t\treturn nil, err\n   73  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/jos.sendPoints.go:\n   55  \tresult, err := client.Execute(r.Request, req.Session)\n   56  \tif err != nil {\n   57: \t\tlogger.Error(err)\n   58  \t\treturn false, err\n   59  \t}\n   ..\n   64  \terr = ljson.Unmarshal(result, &response)\n   65  \tif err != nil {\n   66: \t\tlogger.Error(err)\n   67  \t\treturn false, err\n   68  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/jzone.addCartItemByPin.go:\n   45  \tresult, err := client.Execute(r.Request, req.Session)\n   46  \tif err != nil {\n   47: \t\tlogger.Error(err)\n   48  \t\treturn false, err\n   49  \t}\n   ..\n   54  \terr = ljson.Unmarshal(result, &response)\n   55  \tif err != nil {\n   56: \t\tlogger.Error(err)\n   57  \t\treturn false, err\n   58  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/logger.go:\n    3  import (\n    4  \t\"github.com/XiBao/jos/sdk\"\n    5: \tlog \"github.com/kdar/factorlog\"\n    6  \t\"os\"\n    7  )\n    8  \n    9: var logger *log.FactorLog = setGlobalLogger(\"\")\n   10  \n   11  // SetLogger 初始化设置Logger\n   12: func SetLogger(alogger *log.FactorLog) {\n   13: \tlogger = alogger\n   14: \tsdk.SetLogger(logger)\n   15  }\n   16  \n   17: func setGlobalLogger(logPath string) *log.FactorLog {\n   18  \tsfmt := `%{Color \"red:white\" \"CRITICAL\"}%{Color \"red\" \"ERROR\"}%{Color \"yellow\" \"WARN\"}%{Color \"green\" \"INFO\"}%{Color \"cyan\" \"DEBUG\"}%{Color \"blue\" \"TRACE\"}[%{Date} %{Time}] [%{SEVERITY}:%{ShortFile}:%{Line}] %{Message}%{Color \"reset\"}`\n   19: \tlogger := log.New(os.Stdout, log.NewStdFormatter(sfmt))\n   20: \tif len(logPath) > 0 {\n   21: \t\tlogf, err := os.OpenFile(logPath, os.O_WRONLY|os.O_APPEND|os.O_CREATE, 0640)\n   22  \t\tif err != nil {\n   23: \t\t\treturn logger\n   24  \t\t}\n   25: \t\tlogger = log.New(logf, log.NewStdFormatter(sfmt))\n   26  \t}\n   27: \tlogger.SetSeverities(log.INFO | log.WARN | log.ERROR | log.FATAL | log.CRITICAL)\n   28: \treturn logger\n   29  }\n   30  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/MemberScan.go:\n   78  \tresult, err := client.Execute(r.Request, req.Session)\n   79  \tif err != nil {\n   80: \t\tlogger.Error(err)\n   81  \t\treturn nil, err\n   82  \t}\n   ..\n   87  \terr = ljson.Unmarshal(result, &response)\n   88  \tif err != nil {\n   89: \t\tlogger.Error(err)\n   90  \t\treturn nil, err\n   91  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/MemberSearchNew.go:\n   82  \tresult, err := client.Execute(r.Request, req.Session)\n   83  \tif err != nil {\n   84: \t\tlogger.Error(err)\n   85  \t\treturn nil, err\n   86  \t}\n   ..\n   91  \terr = ljson.Unmarshal(result, &response)\n   92  \tif err != nil {\n   93: \t\tlogger.Error(err)\n   94  \t\treturn nil, err\n   95  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/MobileBigField.go:\n   34  \tresult, err := client.Execute(r.Request, req.Session)\n   35  \tif err != nil {\n   36: \t\tlogger.Error(err)\n   37  \t\treturn \"\", err\n   38  \t}\n   ..\n   42  \terr = ljson.Unmarshal(result, &response)\n   43  \tif err != nil {\n   44: \t\tlogger.Error(err)\n   45  \t\treturn \"\", err\n   46  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/NewWareBaseProductGet.go:\n   42  \tresult, err := client.Execute(r.Request, req.Session)\n   43  \tif err != nil {\n   44: \t\tlogger.Error(err)\n   45  \t\treturn nil, err\n   46  \t}\n   ..\n   51  \terr = ljson.Unmarshal(result, &response)\n   52  \tif err != nil {\n   53: \t\tlogger.Error(err)\n   54  \t\treturn nil, err\n   55  \t}\n   ..\n   59  \t}\n   60  \n   61: \t//logger.Infof(\"reponse: %s\", Json(response))\n   62  \treturn response.Data.Result, nil\n   63  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/NewWareVenderSkusQuery.go:\n   41  \tresult, err := client.Execute(r.Request, req.Session)\n   42  \tif err != nil {\n   43: \t\tlogger.Error(err)\n   44  \t\treturn nil, 0, err\n   45  \t}\n   ..\n   50  \terr = ljson.Unmarshal(result, &response)\n   51  \tif err != nil {\n   52: \t\tlogger.Error(err)\n   53  \t\treturn nil, 0, err\n   54  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/order.interface.go:\n   29  \tPaymentConfirmTime  string           `json:\"paymentConfirmTime,omitempty\" codec:\"paymentConfirmTime,omitempty\"`   // 付款确认时间 如果没有付款时间 默认返回0001-01-01 00:00:00 可选字段，需要在输入参数optional_fields中写入才能返回\n   30  \tWaybill             string           `json:\"waybill,omitempty\" codec:\"waybill,omitempty\"`                         // 运单号(当厂家自送时运单号可为空，不同物流公司的运单号用|分隔，如果同一物流公司有多个运单号，则用英文逗号分隔) 可选字段，需要在输入参数optional_fields中写入才能返回\n   31: \tLogisticsId         string           `json:\"logisticsId,omitempty\" codec:\"logisticsId,omitempty\"`                 // 物流公司ID 可选字段，需要在输入参数optional_fields中写入才能返回\n   32  \tVatInfo             *VatInfo         `json:\"vatInfo,omitempty\" codec:\"vatInfo,omitempty\"`                         // 增值税发票 可选字段，需要在输入参数optional_fields中写入才能返回\n   33  \tModified            string           `json:\"modified,omitempty\" codec:\"modified,omitempty\"`                       // 订单更新时间\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/PopOrderEnGet.go:\n   44  \tresult, err := client.Execute(r.Request, req.Session)\n   45  \tif err != nil {\n   46: \t\tlogger.Error(err)\n   47  \t\treturn nil, err\n   48  \t}\n   ..\n   54  \terr = ljson.Unmarshal(result, &response)\n   55  \tif err != nil {\n   56: \t\tlogger.Error(err)\n   57  \t\treturn nil, err\n   58  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/PopOrderEnSearch.go:\n   59  \tresult, err := client.Execute(r.Request, req.Session)\n   60  \tif err != nil {\n   61: \t\tlogger.Error(err)\n   62  \t\treturn nil, 0, err\n   63  \t}\n   ..\n   65  \terr = ljson.Unmarshal(result, &response)\n   66  \tif err != nil {\n   67: \t\tlogger.Error(err)\n   68  \t\treturn nil, 0, err\n   69  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/QueryForCountByVid.go:\n   37  \n   38      result, err := client.Execute(r.Request, req.Session)\n   39:     logger.Info(string(result))\n   40      if err != nil {\n   41:         logger.Error(err)\n   42          return 0, err\n   43      }\n   44      if len(result) == 0 {\n   45          err := errors.New(\"no result.\")\n   46:         logger.Error(err)\n   47          return 0, err\n   48      }\n   ..\n   51      err = ljson.Unmarshal(result, &response)\n   52      if err != nil {\n   53:         logger.Error(err)\n   54          return 0, err\n   55      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SearchSkuList.go:\n   80  \tresult, err := client.Execute(r.Request, req.Session)\n   81  \tif err != nil {\n   82: \t\tlogger.Error(err)\n   83  \t\treturn nil, err\n   84  \t}\n   ..\n   90  \terr = ljson.Unmarshal(result, &response)\n   91  \tif err != nil {\n   92: \t\tlogger.Error(err)\n   93  \t\treturn nil, err\n   94  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SearchWare4Valid.go:\n  107  \tresult, err := client.Execute(r.Request, req.Session)\n  108  \tif err != nil {\n  109: \t\tlogger.Error(err)\n  110  \t\treturn nil, err\n  111  \t}\n  ...\n  117  \terr = ljson.Unmarshal(result, &response)\n  118  \tif err != nil {\n  119: \t\tlogger.Error(err)\n  120  \t\treturn nil, err\n  121  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionAppendPromoUsers.go:\n   58  \n   59  \tresult, err := client.Execute(r.Request, req.Session)\n   60:     logger.Info(string(result))\n   61  \tif err != nil {\n   62: \t\tlogger.Error(err)\n   63  \t\treturn nil, err\n   64  \t}\n   65  \tif len(result) == 0 {\n   66  \t\terr := errors.New(\"no result.\")\n   67: \t\tlogger.Error(err)\n   68  \t\treturn nil, err\n   69  \t}\n   ..\n   72  \terr = ljson.Unmarshal(result, &response)\n   73  \tif err != nil {\n   74: \t\tlogger.Error(err)\n   75  \t\treturn nil, err\n   76  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionCount.go:\n   90  \tresult, err := client.Execute(r.Request, req.Session)\n   91  \tif err != nil {\n   92: \t\tlogger.Error(err)\n   93  \t\treturn 0, err\n   94  \t}\n   95  \tif len(result) == 0 {\n   96  \t\terr := errors.New(\"no result.\")\n   97: \t\tlogger.Error(err)\n   98  \t\treturn 0, err\n   99  \t}\n  ...\n  102  \terr = ljson.Unmarshal(result, &response)\n  103  \tif err != nil {\n  104: \t\tlogger.Error(err)\n  105  \t\treturn 0, err\n  106  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionCreate.go:\n   21      Bound                   uint8  `json:\"bound\" codec:\"bound\"` // 促销范围（1、部分商品参加）\n   22      Member                  uint   `json:\"member\" codec:\"member\"` // 京东会员级别(注册会员：50 VIP：110 企业会员：90)\n   23:     Slogan                  string `json:\"slogan,omitempty\" codec:\"slogan,omitempty\"` // 促销广告词，不能超过20个字符\n   24      Comment                 string `json:\"comment,omitempty\" codec:\"comment,omitempty\"` // 活动备注\n   25      Platform                uint8  `json:\"platform\" codec:\"platform\"` // 平台类型（1、全平台 2、APP专享 3、微信专享 5、手Q专享）\n   ..\n  103          r.SetRequestId(req.RequestId)\n  104      }\n  105:     if len(req.Slogan) > 0 {\n  106:         r.SetSlogan(req.Slogan)\n  107      }\n  108      if len(req.Comment) > 0 {\n  ...\n  150  \n  151  \tresult, err := client.Execute(r.Request, req.Session)\n  152:     logger.Info(string(result))\n  153  \tif err != nil {\n  154: \t\tlogger.Error(err)\n  155  \t\treturn 0, err\n  156  \t}\n  157  \tif len(result) == 0 {\n  158  \t\terr := errors.New(\"no result.\")\n  159: \t\tlogger.Error(err)\n  160  \t\treturn 0, err\n  161  \t}\n  ...\n  164  \terr = ljson.Unmarshal(result, &response)\n  165  \tif err != nil {\n  166: \t\tlogger.Error(err)\n  167  \t\treturn 0, err\n  168  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionFullCreate.go:\n   18  \tBeginTime             string `json:\"begin_time\"`               //\t促销开始时间。格式：yyyy-MM-dd HH:mm:ss\n   19  \tEndTime               string `json:\"end_time\"`                 //\t促销结束时间。格式：yyyy-MM-dd HH:mm:ss\n   20: \tSlogan                string `json:\"slogan\"`                   //\t促销宣传语。最大长度70个字符\n   21  \tComment               string `json:\"comment\"`                  //\t促销备注信息。最大长度100个字符\n   22  \tLink                  string `json:\"link\"`                     //\t活动链接\n   ..\n   83  \t}\n   84  \n   85: \tif len(req.Slogan) > 0 {\n   86: \t\tr.SetSlogan(req.Slogan)\n   87  \t}\n   88  \n   ..\n  166  \n  167  \tresult, err := client.Execute(r.Request, req.Session)\n  168: \tlogger.Info(string(result))\n  169  \tif err != nil {\n  170: \t\tlogger.Error(err)\n  171  \t\treturn 0, err\n  172  \t}\n  173  \tif len(result) == 0 {\n  174  \t\terr := errors.New(\"no result.\")\n  175: \t\tlogger.Error(err)\n  176  \t\treturn 0, err\n  177  \t}\n  ...\n  180  \terr = ljson.Unmarshal(result, &response)\n  181  \tif err != nil {\n  182: \t\tlogger.Error(err)\n  183  \t\treturn 0, err\n  184  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionList.go:\n   64  \tresult, err := client.Execute(r.Request, req.Session)\n   65  \tif err != nil {\n   66: \t\tlogger.Error(err)\n   67  \t\treturn nil, err\n   68  \t}\n   69  \tif len(result) == 0 {\n   70  \t\terr := errors.New(\"no result.\")\n   71: \t\tlogger.Error(err)\n   72  \t\treturn nil, err\n   73  \t}\n   ..\n   76  \terr = ljson.Unmarshal(result, &response)\n   77  \tif err != nil {\n   78: \t\tlogger.Error(err)\n   79  \t\treturn nil, err\n   80  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionRemovePromoUsers.go:\n   58  \n   59  \tresult, err := client.Execute(r.Request, req.Session)\n   60:     logger.Info(string(result))\n   61  \tif err != nil {\n   62: \t\tlogger.Error(err)\n   63  \t\treturn nil, err\n   64  \t}\n   65  \tif len(result) == 0 {\n   66  \t\terr := errors.New(\"no result.\")\n   67: \t\tlogger.Error(err)\n   68  \t\treturn nil, err\n   69  \t}\n   ..\n   72  \terr = ljson.Unmarshal(result, &response)\n   73  \tif err != nil {\n   74: \t\tlogger.Error(err)\n   75  \t\treturn nil, err\n   76  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionSkuList.go:\n   61  \n   62  \tresult, err := client.Execute(r.Request, req.Session)\n   63:     //logger.Info(string(result))\n   64  \tif err != nil {\n   65: \t\tlogger.Error(err)\n   66  \t\treturn nil, err\n   67  \t}\n   68  \tif len(result) == 0 {\n   69  \t\terr := errors.New(\"no result.\")\n   70: \t\tlogger.Error(err)\n   71  \t\treturn nil, err\n   72  \t}\n   ..\n   75  \terr = ljson.Unmarshal(result, &response)\n   76  \tif err != nil {\n   77: \t\tlogger.Error(err)\n   78  \t\treturn nil, err\n   79  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionUserList.go:\n   50  \tresult, err := client.Execute(r.Request, req.Session)\n   51  \tif err != nil {\n   52: \t\tlogger.Error(err)\n   53  \t\treturn nil, err\n   54  \t}\n   55  \tif len(result) == 0 {\n   56  \t\terr := errors.New(\"no result.\")\n   57: \t\tlogger.Error(err)\n   58  \t\treturn nil, err\n   59  \t}\n   ..\n   62  \terr = ljson.Unmarshal(result, &response)\n   63  \tif err != nil {\n   64: \t\tlogger.Error(err)\n   65  \t\treturn nil, err\n   66  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerVenderInfoGet.go:\n   32  \tresult, err := client.Execute(r.Request, req.Session)\n   33  \tif err != nil {\n   34: \t\tlogger.Error(err)\n   35  \t\treturn nil, err\n   36  \t}\n   37  \tif len(result) == 0 {\n   38  \t\terr := errors.New(\"no result.\")\n   39: \t\tlogger.Error(err)\n   40  \t\treturn nil, err\n   41  \t}\n   ..\n   44  \terr = ljson.Unmarshal(result, &response)\n   45  \tif err != nil {\n   46: \t\tlogger.Error(err)\n   47  \t\treturn nil, err\n   48  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SendBean.go:\n   64  \tresult, err := client.Execute(r.Request, req.Session)\n   65  \tif err != nil {\n   66: \t\tlogger.Error(err)\n   67  \t\treturn nil, err\n   68  \t}\n   ..\n   72  \terr = ljson.Unmarshal(result, &response)\n   73  \tif err != nil {\n   74: \t\tlogger.Error(err)\n   75  \t\treturn nil, err\n   76  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SendPoints.go:\n   62  \tresult, err := client.Execute(r.Request, req.Session)\n   63  \tif err != nil {\n   64: \t\tlogger.Error(err)\n   65  \t\treturn 0, err\n   66  \t}\n   ..\n   71  \terr = ljson.Unmarshal(result, &response)\n   72  \tif err != nil {\n   73: \t\tlogger.Error(err)\n   74  \t\treturn 0, errors.New(err.Error()+fmt.Sprintf(\"result :%s\",result))\n   75  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/shop.interface.go:\n   37  \tBound                 uint8  `json:\"bound\" codec:\"bound\"`                         // 促销范围。1：部分商品参加 2：全部商品参加 3：部分商品部参加 4：全场促销\n   38  \tMember                uint   `json:\"member\" codec:\"member\"`                       // 参加促销的会员级别\n   39: \tSlogan                string `json:\"slogan,omitempty\" codec:\"slogan,omitempty\"`   // 促销宣传语\n   40  \tComment               string `json:\"comment,omitempty\" codec:\"comment,omitempty\"` // 促销备注信息\n   41  \tPromoStatus           uint8  `json:\"promo_status\" codec:\"promo_status\"`           // 促销状态。-1:促销被创建但还没commit,0:无效,1:驳回,2:未审核,3:人工审,4:已审核,5:已生效,6:已暂停,7:强制暂停\n   ..\n   80  \tShopName         string `json:\"shop_name,omitempty\" codec:\"shop_name,omitempty\"`\n   81  \tOpenTime         int64  `json:\"open_time,omitempty\" codec:\"open_time,omitempty\"`\n   82: \tLogoUrl          string `json:\"logo_url,omitempty\" codec:\"logo_url,omitempty\"`\n   83  \tBrief            string `json:\"brief,omitempty\" codec:\"brief,omitempty\"`\n   84  \tCategoryMain     int    `json:\"category_main,omitempty\" codec:\"category_main,omitempty\"`\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/TokenToPin.go:\n   41  \tresult, err := client.Execute(r.Request, req.Session)\n   42  \tif err != nil {\n   43: \t\tlogger.Error(err)\n   44  \t\treturn \"\", err\n   45  \t}\n   ..\n   50  \terr = ljson.Unmarshal(result, &response)\n   51  \tif err != nil {\n   52: \t\tlogger.Error(err)\n   53  \t\treturn \"\", err\n   54  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/UnionQueryOrderList.go:\n   41  \tresult, err := client.Execute(r.Request, req.Session)\n   42  \tif err != nil {\n   43: \t\tlogger.Error(err)\n   44  \t\treturn nil, err\n   45  \t}\n   ..\n   50  \terr = ljson.Unmarshal(result, &response)\n   51  \tif err != nil {\n   52: \t\tlogger.Error(err)\n   53  \t\treturn nil, err\n   54  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/Vender.common.query.go:\n   70  \t}\n   71  \tresult, err := client.Execute(r.Request, req.Session)\n   72:     //logger.Info(string(result))\n   73  \tif err != nil {\n   74: \t\tlogger.Error(err)\n   75  \t\treturn nil, err\n   76  \t}\n   ..\n   82  \terr = ljson.Unmarshal([]byte(result), &response)\n   83  \tif err != nil {\n   84: \t\tlogger.Error(err)\n   85  \t\treturn nil, err\n   86  \t}\n   ..\n   98  \terr = ljson.Unmarshal([]byte(response.Data.Response.Result), &res)\n   99  \tif err != nil {\n  100: \t\tlogger.Error(err)\n  101  \t\treturn nil, err\n  102  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/vender.getCustomerBasicInfo.go:\n   58      result, err := client.Execute(r.Request, req.Session)\n   59      if err != nil {\n   60:         logger.Error(err)\n   61          return nil, err\n   62      }\n   ..\n   67      err = ljson.Unmarshal(result, &response)\n   68      if err != nil {\n   69:         logger.Error(err)\n   70          return nil, err\n   71      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/vender.getMemberLevel.go:\n   59  \tresult, err := client.Execute(r.Request, req.Session)\n   60  \tif err != nil {\n   61: \t\tlogger.Error(err)\n   62  \t\treturn nil, err\n   63  \t}\n   ..\n   68  \terr = ljson.Unmarshal(result, &response)\n   69  \tif err != nil {\n   70: \t\tlogger.Error(err)\n   71  \t\treturn nil, err\n   72  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/vender.getVenderLevelRule.go:\n   46  \tresult, err := client.Execute(r.Request, req.Session)\n   47  \tif err != nil {\n   48: \t\tlogger.Error(err)\n   49  \t\treturn nil, err\n   50  \t}\n   ..\n   55  \terr = ljson.Unmarshal(result, &response)\n   56  \tif err != nil {\n   57: \t\tlogger.Error(err)\n   58  \t\treturn nil, err\n   59  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/vender.GetVenderStatus.go:\n   37  \tresult, err := client.Execute(r.Request, req.Session)\n   38  \tif err != nil {\n   39: \t\tlogger.Error(err)\n   40  \t\treturn 0, err\n   41  \t}\n   ..\n   46  \terr = ljson.Unmarshal(result, &response)\n   47  \tif err != nil {\n   48: \t\tlogger.Error(err)\n   49  \t\treturn 0, err\n   50  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/VenderShopQuery.go:\n   31  \tresult, err := client.Execute(r.Request, req.Session)\n   32  \tif err != nil {\n   33: \t\tlogger.Error(err)\n   34  \t\treturn nil, err\n   35  \t}\n   36  \tif len(result) == 0 {\n   37  \t\terr := errors.New(\"no result.\")\n   38: \t\tlogger.Error(err)\n   39  \t\treturn nil, err\n   40  \t}\n   ..\n   42  \terr = ljson.Unmarshal(result, &response)\n   43  \tif err != nil {\n   44: \t\tlogger.Error(err)\n   45  \t\treturn nil, err\n   46  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/VenderSyncBind.go:\n   83      result, err := client.Execute(r.Request, req.Session)\n   84      if err != nil {\n   85:         logger.Error(err)\n   86          return false, err\n   87      }\n   88      if len(result) == 0 {\n   89          err := errors.New(\"no result.\")\n   90:         logger.Error(err)\n   91          return false, err\n   92      }\n   ..\n   94      err = ljson.Unmarshal(result, &response)\n   95      if err != nil {\n   96:         logger.Error(err)\n   97          return false, err\n   98      }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware.interface.go:\n   36  \tIntroductionUseFlag  string      `json:\"introductionUseFlag,omitempty\" codec:\"introductionUseFlag,omitempty\"`   // 商品描述使用标识 ,0：使用默认的商品描述,1：使用装吧商详\n   37  \tAfterSales           string      `json:\"afterSales,omitempty\" codec:\"afterSales,omitempty\"`                     // \t售后服务\n   38: \tLogo                 string      `json:\"logo,omitempty\" codec:\"logo,omitempty\"`                                 // \t商品主图\n   39  \tMarketPrice          float64     `json:\"marketPrice,omitempty\" codec:\"marketPrice,omitempty\"`                   // \t市场价\n   40  \tCostPrice            float64     `json:\"costPrice,omitempty\" codec:\"costPrice,omitempty\"`                       // \t成本价\n   ..\n   80  \tCategoryId           uint64      `json:\"categoryId,omitempty\" codec:\"categoryId,omitempty\"`                     // 类目id\n   81  \tImgTag               int         `json:\"imgTag,omitempty\" codec:\"imgTag,omitempty\"`                             // 图片标签\n   82: \tLogo                 string      `json:\"logo,omitempty\" codec:\"logo,omitempty\"`                                 // sku颜色的主图\n   83  \tSkuName              string      `json:\"skuName,omitempty\" codec:\"skuName,omitempty\"`                           // sku名称\n   84  \tStockNum             int         `json:\"stockNum,omitempty\" codec:\"stockNum,omitempty\"`                         // 总库存数\n   ..\n  115  \tSizeValue   string `json:\"size_value,omitempty\" codec:\"size_value,omitempty\"`     // 尺码对应的值\n  116  \n  117: \tLogo string `json:\"logo,omitempty\" codec:\"logo,omitempty\"` // sku颜色的主图\n  118  }\n  119  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/WarePriceGet.go:\n   45  \tresult, err := client.Execute(r.Request, req.Session)\n   46  \tif err != nil {\n   47: \t\tlogger.Error(err)\n   48  \t\treturn nil, err\n   49  \t}\n   ..\n   54  \terr = ljson.Unmarshal(result, &response)\n   55  \tif err != nil {\n   56: \t\tlogger.Error(err)\n   57  \t\treturn nil, err\n   58  \t}\n   ..\n   66  \tpriceChange.Price, err = strconv.ParseFloat(response.Data.PriceChanges[0].Price, 64)\n   67  \tif err != nil {\n   68: \t\tlogger.Error(err)\n   69  \t\treturn nil, err\n   70  \t}\n   71  \tpriceChange.MarketPrice, err = strconv.ParseFloat(response.Data.PriceChanges[0].MarketPrice, 64)\n   72  \tif err != nil {\n   73: \t\tlogger.Error(err)\n   74  \t\treturn nil, err\n   75  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/WareSkusGet.go:\n   37  \tresult, err := client.Execute(r.Request, req.Session)\n   38  \tif err != nil {\n   39: \t\tlogger.Error(err)\n   40  \t\treturn nil, err\n   41  \t}\n   ..\n   47  \terr = ljson.Unmarshal(result, &response)\n   48  \tif err != nil {\n   49: \t\tlogger.Error(err)\n   50  \t\treturn nil, err\n   51  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/WriteCustomerInfo.go:\n   41  \tresult, err := client.Execute(r.Request, req.Session)\n   42  \tif err != nil {\n   43: \t\tlogger.Error(err)\n   44  \t\treturn false, err\n   45  \t}\n   ..\n   50  \terr = ljson.Unmarshal(result, &response)\n   51  \tif err != nil {\n   52: \t\tlogger.Error(err)\n   53  \t\treturn false, err\n   54  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/jos_test:\n    <binary>\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go:\n   12  \t\"time\"\n   13  \n   14: \tlog \"github.com/kdar/factorlog\"\n   15  \n   16  \t\"github.com/XiBao/jos/api\"\n   ..\n   59  \n   60  var (\n   61: \tlogFlag       = flag.String(\"log\", \"\", \"set log path\")\n   62  \twith_method   = flag.String(\"method\", \"\", \"set test method\")\n   63  \twith_methods  = flag.String(\"methods\", \"\", \"set test methods\")\n   ..\n   70  \twith_apikey   = flag.Int(\"apikey\", 4, \"set test session\")\n   71  \n   72: \tlogger *log.FactorLog\n   73  \tApiKey *api.ApiKey\n   74  )\n   ..\n   83  \tflag.Parse()\n   84  \n   85: \tlogger = SetGlobalLogger(*logFlag)\n   86  \n   87  \tswitch *with_apikey {\n   ..\n   92  \t\t}\n   93  \tdefault:\n   94: \t\tlogger.Errorf(\"Unknown apikey flag: %d\", *with_apikey)\n   95  \t\treturn\n   96  \t}\n   97  \n   98  \tsession := *with_session\n   99: \tlogger.Infof(\"session=%v\", session)\n  100  \n  101  \tmethods := []string{}\n  ...\n  108  \n  109  \tif len(methods) == 0 {\n  110: \t\tlogger.Warn(\"No methods.\")\n  111  \t\treturn\n  112  \t}\n  ...\n  115  }\n  116  \n  117: func SetGlobalLogger(logPath string) *log.FactorLog {\n  118  \tsfmt := `%{Color \"red:white\" \"CRITICAL\"}%{Color \"red\" \"ERROR\"}%{Color \"yellow\" \"WARN\"}%{Color \"green\" \"INFO\"}%{Color \"cyan\" \"DEBUG\"}%{Color \"blue\" \"TRACE\"}[%{Date} %{Time}] [%{SEVERITY}:%{ShortFile}:%{Line}] %{Message}%{Color \"reset\"}`\n  119: \tlogger := log.New(os.Stdout, log.NewStdFormatter(sfmt))\n  120: \tif len(logPath) > 0 {\n  121: \t\tlogf, err := os.OpenFile(logPath, os.O_WRONLY|os.O_APPEND|os.O_CREATE, 0640)\n  122  \t\tif err != nil {\n  123: \t\t\treturn logger\n  124  \t\t}\n  125: \t\tlogger = log.New(logf, log.NewStdFormatter(sfmt))\n  126  \t}\n  127: \tlogger.SetSeverities(log.INFO | log.WARN | log.ERROR | log.FATAL | log.CRITICAL)\n  128: \treturn logger\n  129  }\n  130  \n  ...\n  145  \t\t\tret, err := get_shop_vender_info(session)\n  146  \t\t\tif err != nil {\n  147: \t\t\t\tlogger.Error(err)\n  148  \t\t\t\treturn\n  149  \t\t\t}\n  150: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  151  \n  152  \t\tcase POP_ORDER_EN_SEARCH:\n  153  \t\t\t/*ret, err := pop_order_en_search(session)\n  154  \t\t\tif err != nil {\n  155: \t\t\t\tlogger.Error(err)\n  156  \t\t\t\treturn\n  157  \t\t\t}\n  158: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))*/\n  159  \n  160  \t\tcase POP_ORDER_EN_GET:\n  161  \t\t\tret, err := pop_order_en_get(session, uint64(*with_order_id))\n  162  \t\t\tif err != nil {\n  163: \t\t\t\tlogger.Error(err)\n  164  \t\t\t\treturn\n  165  \t\t\t}\n  166: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  167  \n  168  \t\tcase FIND_SKU_BY_ID:\n  169  \t\t\tret, err := find_sku_by_id(session, uint64(*with_sku_id))\n  170  \t\t\tif err != nil {\n  171: \t\t\t\tlogger.Error(err)\n  172  \t\t\t\treturn\n  173  \t\t\t}\n  174: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  175  \n  176  \t\tcase TOKEN_TO_PIN:\n  177  \t\t\tret, err := token_to_pin(*with_token)\n  178  \t\t\tif err != nil {\n  179: \t\t\t\tlogger.Error(err)\n  180  \t\t\t\treturn\n  181  \t\t\t}\n  182: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  183  \n  184  \t\tcase SEARCH_WARE4_VALID:\n  185  \t\t\tret, err := search_ware4_valid(session, *with_token)\n  186  \t\t\tif err != nil {\n  187: \t\t\t\tlogger.Error(err)\n  188  \t\t\t\treturn\n  189  \t\t\t}\n  190: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  191  \n  192  \t\tcase WARE_SKUS_GET:\n  193  \t\t\tret, err := ware_skus_get(session, *with_token)\n  194  \t\t\tif err != nil {\n  195: \t\t\t\tlogger.Error(err)\n  196  \t\t\t\treturn\n  197  \t\t\t}\n  198: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  199  \n  200  \t\tcase FIND_WARE_BY_ID:\n  201  \t\t\tret, err := find_ware_by_id(session, uint64(*with_ware_id))\n  202  \t\t\tif err != nil {\n  203: \t\t\t\tlogger.Error(err)\n  204  \t\t\t\treturn\n  205  \t\t\t}\n  206: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  207  \n  208  \t\tcase SEARCH_SKU_LIST:\n  209  \t\t\tret, err := search_sku_list(session)\n  210  \t\t\tif err != nil {\n  211: \t\t\t\tlogger.Error(err)\n  212  \t\t\t\treturn\n  213  \t\t\t}\n  214: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  215  \n  216  \t\tcase VENDER_COMMON_QUERY:\n  217  \t\t\tret, err := vender_common_query(session)\n  218  \t\t\tif err != nil {\n  219: \t\t\t\tlogger.Error(err)\n  220  \t\t\t\treturn\n  221  \t\t\t}\n  222: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  223  \n  224  \t\tcase FW_ORDER_LIST_WITH_PAGE:\n  225  \t\t\tret, err := fw_order_list_with_page(session)\n  226  \t\t\tif err != nil {\n  227: \t\t\t\tlogger.Error(err)\n  228  \t\t\t\treturn\n  229  \t\t\t}\n  230: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  231  \n  232  \t\tcase UNION_QUERY_ORDER_LIST:\n  233  \t\t\tret, err := union_query_order_list(session)\n  234  \t\t\tif err != nil {\n  235: \t\t\t\tlogger.Error(err)\n  236  \t\t\t\treturn\n  237  \t\t\t}\n  238: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  239  \n  240  \t\tcase GET_USER_BASE_INFO_BY_PIN:\n  241  \t\t\tret, err := get_user_base_info_by_pin(session)\n  242  \t\t\tif err != nil {\n  243: \t\t\t\tlogger.Error(err)\n  244  \t\t\t\treturn\n  245  \t\t\t}\n  246: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  247  \n  248  \t\tcase GET_USER_BASE_INFO_BY_ENCRY_PIN:\n  249  \t\t\tret, err := get_user_base_info_by_encry_pin(session)\n  250  \t\t\tif err != nil {\n  251: \t\t\t\tlogger.Error(err)\n  252  \t\t\t\treturn\n  253  \t\t\t}\n  254: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  255  \n  256  \t\tcase FIND_CATE_BY_PID:\n  257  \t\t\tret, err := find_cate_by_pid(session)\n  258  \t\t\tif err != nil {\n  259: \t\t\t\tlogger.Error(err)\n  260  \t\t\t\treturn\n  261  \t\t\t}\n  262: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  263  \n  264  \t\tcase IS_FOLLOW_BY_PIN_AND_VID:\n  265  \t\t\tret, err := is_follow_by_pin_and_vid(session)\n  266  \t\t\tif err != nil {\n  267: \t\t\t\tlogger.Error(err)\n  268  \t\t\t\treturn\n  269  \t\t\t}\n  270: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  271  \n  272  \t\tcase FOLLOW_BY_PIN_AND_VID:\n  273  \t\t\tret, err := follow_by_pin_and_vid(session)\n  274  \t\t\tif err != nil {\n  275: \t\t\t\tlogger.Error(err)\n  276  \t\t\t\treturn\n  277  \t\t\t}\n  278: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  279  \n  280  \t\tcase GET_CUSTOER_POINTS:\n  281  \t\t\tret, err := get_customer_points(session)\n  282  \t\t\tif err != nil {\n  283: \t\t\t\tlogger.Error(err)\n  284  \t\t\t\treturn\n  285  \t\t\t}\n  286: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  287  \n  288  \t\tcase GET_POINTS_DETAIL:\n  289  \t\t\tret, err := get_points_detail(session)\n  290  \t\t\tif err != nil {\n  291: \t\t\t\tlogger.Error(err)\n  292  \t\t\t\treturn\n  293  \t\t\t}\n  294: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  295  \n  296  \t\tcase SEND_POINTS:\n  297  \t\t\tret, err := send_points(session)\n  298  \t\t\tif err != nil {\n  299: \t\t\t\tlogger.Error(err)\n  300  \t\t\t\treturn\n  301  \t\t\t}\n  302: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  303  \n  304  \t\tcase GET_CRM_GRADES:\n  305  \t\t\tret, err := get_crm_grades(session)\n  306  \t\t\tif err != nil {\n  307: \t\t\t\tlogger.Error(err)\n  308  \t\t\t\treturn\n  309  \t\t\t}\n  310: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  311  \n  312  \t\tcase GET_MEMBER_IN_VENER:\n  313  \t\t\tret, err := get_member_in_vender(session)\n  314  \t\t\tif err != nil {\n  315: \t\t\t\tlogger.Error(err)\n  316  \t\t\t\treturn\n  317  \t\t\t}\n  318: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  319  \n  320  \t\tcase MEMBER_SCAN:\n  321  \t\t\tret, err := member_scan(session)\n  322  \t\t\tif err != nil {\n  323: \t\t\t\tlogger.Error(err)\n  324  \t\t\t\treturn\n  325  \t\t\t}\n  326: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  327  \n  328  \t\tcase MEMBER_SEARCH_NEW:\n  329  \t\t\tret, err := member_search_new(session)\n  330  \t\t\tif err != nil {\n  331: \t\t\t\tlogger.Error(err)\n  332  \t\t\t\treturn\n  333  \t\t\t}\n  334: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  335  \n  336  \t\tcase NEW_WARE_PRODUCTS_BASE_GET:\n  337  \t\t\tret, err := new_ware_products_base_get(session)\n  338  \t\t\tif err != nil {\n  339: \t\t\t\tlogger.Error(err)\n  340  \t\t\t\treturn\n  341  \t\t\t}\n  342: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  343  \n  344  \t\tcase DELETE_CUSTOMER_OPEN_INFO:\n  345  \t\t\tret, err := delete_customer_open_info(session)\n  346  \t\t\tif err != nil {\n  347: \t\t\t\tlogger.Error(err)\n  348  \t\t\t\treturn\n  349  \t\t\t}\n  350: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  351  \n  352  \t\tcase WRITE_CUSTOMER_INFO:\n  353  \t\t\tret, err := write_customer_info(session)\n  354  \t\t\tif err != nil {\n  355: \t\t\t\tlogger.Error(err)\n  356  \t\t\t\treturn\n  357  \t\t\t}\n  358: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  359  \n  360  \t\tcase ENQUERY_REGISTRATION_DATA_COUNT:\n  361  \t\t\tret, err := enquery_registration_data_count(session)\n  362  \t\t\tif err != nil {\n  363: \t\t\t\tlogger.Error(err)\n  364  \t\t\t\treturn\n  365  \t\t\t}\n  366: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  367  \n  368          case SEND_BEAN:\n  369              /*ret, err := send_bean(session)\n  370              if err != nil {\n  371:                 logger.Error(err)\n  372                  return\n  373              }\n  374:             logger.Infof(\"ret = %s\", Json(ret))*/\n  375  \n  376  \t\tdefault:\n  377: \t\t\tlogger.Errorf(\"Unknown method: %v\", method)\n  378  \t\t\tcontinue\n  379  \t\t}\n  ...\n  436  \t\tEndDate:        \"2018-10-22 23:59:59\",\n  437  \t\tOrderState:     []string{`WAIT_SELLER_STOCK_OUT,WAIT_GOODS_RECEIVE_CONFIRM,WAIT_SELLER_DELIVERY,FINISHED_L,TRADE_CANCELED,LOCKED,POP_ORDER_PAUSE`},\n  438: \t\tOptionalFields: strings.Split(`orderId,venderId,orderType,payType,orderTotalPrice,orderSellerPrice,orderPayment,freightPrice,sellerDiscount,orderState,orderStateRemark,deliveryType,invoiceEasyInfo,invoiceInfo,invoiceCode,orderRemark,orderStartTime,orderEndTime,consigneeInfo,itemInfoList,couponDetailList,venderRemark,balanceUsed,pin,returnOrder,paymentConfirmTime,waybill,logisticsId,vatInfo,modified,directParentOrderId,parentOrderId,customs,customsModel,orderSource,storeOrder,idSopShipmenttype,scDT,serviceFee,taxFee,tuiHuoWuYou,orderSign,storeId`, \",\"),\n  439  \t\tPage:           1,\n  440  \t\tPageSize:       1,\n  ...\n  454  \t\t},\n  455  \t\tOrderState:     []string{`WAIT_SELLER_STOCK_OUT,WAIT_GOODS_RECEIVE_CONFIRM,WAIT_SELLER_DELIVERY,FINISHED_L,TRADE_CANCELED,LOCKED,POP_ORDER_PAUSE`},\n  456: \t\tOptionalFields: strings.Split(`orderId,venderId,orderType,payType,orderTotalPrice,orderSellerPrice,orderPayment,freightPrice,sellerDiscount,orderState,orderStateRemark,deliveryType,invoiceEasyInfo,invoiceInfo,invoiceCode,orderRemark,orderStartTime,orderEndTime,consigneeInfo,itemInfoList,couponDetailList,venderRemark,balanceUsed,pin,returnOrder,paymentConfirmTime,waybill,logisticsId,vatInfo,modified,directParentOrderId,parentOrderId,customs,customsModel,orderSource,storeOrder,idSopShipmenttype,scDT,serviceFee,taxFee,tuiHuoWuYou,orderSign,storeId`, \",\"),\n  457  \t\tOrderId:        orderId,\n  458  \t}\n  ...\n  468  \t\t},\n  469  \t\tSkuId:  skuId,\n  470: \t\tFields: `wareId,skuId,status,jdPrice,outerId,barCode,categoryId,imgTag,logo,skuName,stockNum,wareTitle,fixedDeliveryTime,relativeDeliveryTime,parentId,modified,created`,\n  471  \t}\n  472  \treturn api.FindSkuById(req)\n  ...\n  496  \t\tPageNo:          0,\n  497  \t\tPageSize:        15,\n  498: \t\tField:           \"wareId,title,categoryId,brandId,templateId,transportId,wareStatus,outerId,itemNum,barCode,wareLocation,modified,created,offlineTime,onlineTime,colType,delivery,adWords,wrap,packListing,weight,width,height,length,props,features,images,shopCategorys,mobileDesc,introduction,zhuangBaIntroduction,zhuangBaId,introductionUseFlag,afterSales,logo,marketPrice,costPrice,jdPrice,brandName,stockNum,categorySecId,shopId,promiseId,multiCategoryId,multiCateProps,sellPoint,wareTax,afterSaleDesc,zhuangBaMobileDesc,mobileZhuangBaId,mobileDescUseFlag,fitCaseHtmlPc,fitCaseHtmlApp,specialServices,parentId,wareGroupId,businessType,designConcept,isArchival,templateIds\",\n  499  \t\t//Field: strings.Split(\"wareId,title\", \",\"),\n  500  \t}\n  ...\n  524  \t\t},\n  525  \t\tWareId: wareId,\n  526: \t\tFields: \"wareId,title,categoryId,brandId,templateId,transportId,wareStatus,outerId,itemNum,barCode,wareLocation,modified,created,offlineTime,onlineTime,colType,delivery,adWords,wrap,packListing,weight,width,height,length,props,features,images,shopCategorys,mobileDesc,introduction,zhuangBaIntroduction,zhuangBaId,introductionUseFlag,afterSales,logo,marketPrice,costPrice,jdPrice,brandName,stockNum,categorySecId,shopId,promiseId,multiCategoryId,multiCateProps,sellPoint,wareTax,afterSaleDesc,zhuangBaMobileDesc,mobileZhuangBaId,mobileDescUseFlag,fitCaseHtmlPc,fitCaseHtmlApp,specialServices,parentId,wareGroupId,businessType,designConcept,isArchival,templateIds\",\n  527  \t\t//Fields: \"images,brandId\",\n  528  \t}\n  ...\n  540  \t\tPageNo:   1,\n  541  \t\tPageSize: 10,\n  542: \t\tField:    `wareId,skuId,status,features,jdPrice,outerId,barCode,categoryId,imgTag,logo,skuName,stockNum,wareTitle,fixedDeliveryTime,relativeDeliveryTime,parentId,modified,created`,\n  543  \t}\n  544  \n  ...\n  817  \t\t})\n  818  \t\tif err != nil {\n  819: \t\t\tlogger.Error(err)\n  820  \t\t\treturn nil, err\n  821  \t\t}\n  822: \t\t//logger.Infof(\"total: %d\", total)\n  823  \t\tif len(skuIdList) == 0 {\n  824  \t\t\tbreak\n  ...\n  834  \t\t\t})\n  835  \t\t\tif err != nil {\n  836: \t\t\t\tlogger.Error(err)\n  837  \t\t\t\treturn nil, err\n  838  \t\t\t}\n  ...\n  847  \t\t\t})\n  848  \t\t\tif err != nil {\n  849: \t\t\t\tlogger.Error(err)\n  850  \t\t\t\treturn nil, err\n  851  \t\t\t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/client.go:\n   34  \n   35  func GetOauthURL(appKey, rURI, state, scope string) string {\n   36:     return fmt.Sprintf(\"https://open-oauth.jd.com/oauth2/to_login?app_key=%s&response_type=code&redirect_uri=%s&state=%s&scope=%s\", appKey, url.QueryEscape(rURI), state, scope)\n   37  }\n   38  \n   ..\n   49  \tresponse, err := http.DefaultClient.Get(gatewayUrl)\n   50  \tif err != nil {\n   51: \t\tlogger.Error(err)\n   52  \t\treturn \"\", err\n   53  \t}\n   ..\n   55  \tbody, err := ioutil.ReadAll(response.Body)\n   56  \tif err != nil {\n   57: \t\tlogger.Error(err)\n   58  \t\treturn \"\", err\n   59  \t}\n   60  \tres := string(body)\n   61:     // logger.Infof(\"AccessTokenNew: %#v\", res)\n   62  \treturn res, nil\n   63  }\n   ..\n   73  \n   74  \tgatewayUrl := fmt.Sprintf(`%s?%s`, `https://oauth.jd.com/oauth/token`, values.Encode())\n   75:     logger.Infof(\"GatewayUrl: %s\", gatewayUrl)\n   76  \tresponse, err := http.DefaultClient.Get(gatewayUrl)\n   77  \tif err != nil {\n   78: \t\tlogger.Error(err)\n   79  \t\treturn \"\", err\n   80  \t}\n   ..\n   82  \tbody, err := ioutil.ReadAll(response.Body)\n   83  \tif err != nil {\n   84: \t\tlogger.Error(err)\n   85  \t\treturn \"\", err\n   86  \t}\n   87  \tres := string(body)\n   88:     logger.Infof(\"AccessTokenRes: %#v\", res)\n   89  \treturn res, nil\n   90  }\n   ..\n  108  \tsysParams[\"sign\"] = c.GenerateSign(rawSign)\n  109  \tif c.Debug {\n  110: \t\tlogger.Infof(\"params: %v\", Json(sysParams))\n  111  \t}\n  112  \tvalues := url.Values{}\n  ...\n  120  \tgatewayUrl := fmt.Sprintf(`%s?%s`, gwURL, values.Encode())\n  121  \tif c.Debug {\n  122: \t\tlogger.Infof(\"gatewayUrl: %v\", gatewayUrl)\n  123  \t}\n  124  \tvar (\n  ...\n  130  \t\tresponse, e = http.DefaultClient.Get(gatewayUrl)\n  131  \t\tif e != nil {\n  132: \t\t\tlogger.Error(e)\n  133  \t\t\tif tryCnt <= 0 {\n  134  \t\t\t\treturn nil, Error{Code: 0, Msg: \"HTTP Response Error\"}\n  ...\n  143  \tres, e := ioutil.ReadAll(response.Body)\n  144  \tif e != nil {\n  145: \t\tlogger.Error(e)\n  146  \t\treturn nil, Error{Code: 0, Msg: fmt.Sprintf(\"ReadAll on response.Body: %v\", e)}\n  147  \t}\n  148  \tif c.Debug {\n  149: \t\tlogger.Infof(\"res: %v\", string(res))\n  150  \t}\n  151  \treturn res, nil\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/const.go:\n    4  \tAPI_VERSION = \"2.0\"\n    5  \tGATEWAY_URL = \"https://api.jd.com/routerjson\"\n    6: \tLOG_GATEWAY_URL = \"https://api-log.jd.com/routerjson\"\n    7  )\n    8  \n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/logger.go:\n    2  \n    3  import (\n    4: \tlog \"github.com/kdar/factorlog\"\n    5  \t\"os\"\n    6  )\n    7  \n    8: var logger *log.FactorLog = setGlobalLogger(\"\")\n    9  \n   10  // SetLogger 初始化设置Logger\n   11: func SetLogger(alogger *log.FactorLog) {\n   12: \tlogger = alogger\n   13  }\n   14  \n   15: func setGlobalLogger(logPath string) *log.FactorLog {\n   16  \tsfmt := `%{Color \"red:white\" \"CRITICAL\"}%{Color \"red\" \"ERROR\"}%{Color \"yellow\" \"WARN\"}%{Color \"green\" \"INFO\"}%{Color \"cyan\" \"DEBUG\"}%{Color \"blue\" \"TRACE\"}[%{Date} %{Time}] [%{SEVERITY}:%{ShortFile}:%{Line}] %{Message}%{Color \"reset\"}`\n   17: \tlogger := log.New(os.Stdout, log.NewStdFormatter(sfmt))\n   18: \tif len(logPath) > 0 {\n   19: \t\tlogf, err := os.OpenFile(logPath, os.O_WRONLY|os.O_APPEND|os.O_CREATE, 0640)\n   20  \t\tif err != nil {\n   21: \t\t\treturn logger\n   22  \t\t}\n   23: \t\tlogger = log.New(logf, log.NewStdFormatter(sfmt))\n   24  \t}\n   25: \tlogger.SetSeverities(log.INFO | log.WARN | log.ERROR | log.FATAL | log.CRITICAL)\n   26: \treturn logger\n   27  }\n   28  \n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/SellerPromotionCreate.go:\n  114  }\n  115  \n  116: func (req *SellerPromotionCreateRequest) SetSlogan(slogan string) {\n  117: \treq.Request.Params[\"slogan\"] = slogan\n  118  }\n  119  \n  120: func (req *SellerPromotionCreateRequest) GetSlogan() string {\n  121: \tslogan, found := req.Request.Params[\"slogan\"]\n  122  \tif found {\n  123: \t\treturn slogan.(string)\n  124  \t}\n  125  \treturn \"\"\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/SellerPromotionFullCreate.go:\n   96  \n   97  \n   98: func (req *SellerPromotionFullCreateRequest) SetSlogan(Slogan string) {\n   99: \treq.Request.Params[\"slogan\"] = Slogan\n  100  }\n  101  \n  102: func (req *SellerPromotionFullCreateRequest) GetSlogan() string {\n  103: \tSlogan, found := req.Request.Params[\"slogan\"]\n  104  \tif found {\n  105: \t\treturn Slogan.(string)\n  106  \t}\n  107  \treturn \"\"\n\n634 matches across 109 files\n\n\nSearching 213 files for \"NewDeleteCustomerOpenInfoRequest\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/DeleteCustomerOpenInfo.go:\n   34  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   35  \tclient.Debug = req.Debug\n   36: \tr := request.NewDeleteCustomerOpenInfoRequest()\n   37  \n   38  \tresult, err := client.Execute(r.Request, req.Session)\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/crm/deleteCustomerOpenInfo.go:\n   10  \n   11  // create new request\n   12: func NewDeleteCustomerOpenInfoRequest() (req *DeleteCustomerOpenInfoRequest) {\n   13  \trequest := sdk.Request{MethodName: \"jingdong.crm.deleteCustomerOpenInfo\", Params: make(map[string]interface{})}\n   14  \treq = &DeleteCustomerOpenInfoRequest{\n\n2 matches across 2 files\n\n\nSearching 213 files for \"CustomerInfoEs\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/customer.interface.go:\n    1  package api\n    2  \n    3: type CustomerInfoEs struct {\n    4  \tVenderId           uint64 `json:\"venderId,omitempty\" codec:\"venderId,omitempty\"`                     // 商家Id\n    5  \tShopId             uint64 `json:\"shopId,omitempty\" codec:\"shopId,omitempty\"`                         // 店铺Id\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/getMemberInVender.go:\n   25  \n   26  type GetMemberInVenderSubData struct {\n   27: \tCustomerInfoEs *CustomerInfoEs `json:\"customerInfoEs,omitempty\" codec:\"customerInfoEs,omitempty\"`\n   28  }\n   29  \n   30: func GetMemberInVender(req *GetMemberInVenderRequest) (*CustomerInfoEs, error) {\n   31  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   32  \tclient.Debug = req.Debug\n   ..\n   55  \t}\n   56  \n   57: \treturn response.Data.Result.CustomerInfoEs, nil\n   58  }\n   59  \n\n5 matches across 2 files\n\n\nSearching 213 files for \"CrmMember\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/customer.interface.go:\n   30  }\n   31  \n   32: type CrmMember struct {\n   33  \tCustomerPin      string  `json:\"customer_pin,omitempty\" codec:\"customer_pin,omitempty\"`             // 用户在京东的会员账号\n   34  \tGrade            string  `json:\"grade,omitempty\" codec:\"grade,omitempty\"`                           // 会员等级， 1:一星会员，2:二星会员 3:三星会员 4:四星会员 5:五星会员\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/memberScan.go:\n   36  type MemberScanResult struct {\n   37  \tTotalResult int          `json:\"total_result,omitempty\" codec:\"total_result,omitempty\"`\n   38: \tCrmMembers  []*CrmMember `json:\"crm_members,omitempty\" codec:\"crm_members,omitempty\"`\n   39  \tScrollId    string       `json:\"scroll_id,omitempty\" codec:\"scroll_id,omitempty\"`\n   40  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/memberSearchNew.go:\n   36  type MemberSearchNewResult struct {\n   37  \tTotalResult int          `json:\"total_result,omitempty\" codec:\"total_result,omitempty\"`\n   38: \tCrmMembers  []*CrmMember `json:\"crm_members,omitempty\" codec:\"crm_members,omitempty\"`\n   39  }\n   40  \n\n5 matches across 3 files\n\n\nSearching 213 files for \"NewAddBeanPlanRequest\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/AddBeanPlan.go:\n   45  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   46  \tclient.Debug = req.Debug\n   47: \tr := request.NewAddBeanPlanRequest()\n   48  \tr.SetServiceMoneyBudget(req.ServiceMoneyBudget)\n   49  \tr.SetAccountCode(req.AccountCode)\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/plan/addBeanPlan.go:\n   10  \n   11  // create new request\n   12: func NewAddBeanPlanRequest() (req *AddBeanPlanRequest) {\n   13  \trequest := sdk.Request{MethodName: \"jingdong.pop.plan.addBeanPlan\", Params: make(map[string]interface{}, 17)}\n   14  \treq = &AddBeanPlanRequest{\n\n2 matches across 2 files\n\n\nSearching 213 files for \"BeanAccountInfo\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/bean.interface.go:\n    1  package api\n    2  \n    3: type BeanAccountInfo struct {\n    4  \tAccountId    uint64  `json:\"accountId,omitempty\" codec:\"accountId,omitempty\"`\n    5  \tStatus       uint8   `json:\"status,omitempty\" codec:\"status,omitempty\"`              // 账户状态\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetBeanAccountInfo.go:\n    8  )\n    9  \n   10: type GetBeanAccountInfoRequest struct {\n   11  \tBaseRequest\n   12  \n   ..\n   15  }\n   16  \n   17: type GetBeanAccountInfoResponse struct {\n   18  \tErrorResp *ErrorResponnse `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19: \tData      *GetBeanAccountInfoData `json:\"jingdong_pop_account_getAccountInfo_responce,omitempty\" codec:\"jingdong_pop_account_getAccountInfo_responce,omitempty\"`\n   20  }\n   21  \n   22: type GetBeanAccountInfoData struct {\n   23  \tCode      string `json:\"code,omitempty\" codec:\"code,omitempty\"`\n   24  \tErrorDesc string `json:\"error_description,omitempty\" codec:\"error_description,omitempty\"`\n   25  \n   26: \tResult *BeanAccountInfo `json:\"beanAccount,omitempty\" codec:\"beanAccount,omitempty\"`\n   27  }\n   28  \n   29: func GetBeanAccountInfo(req *GetBeanAccountInfoRequest) (*BeanAccountInfo, error) {\n   30  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   31  \tclient.Debug = req.Debug\n   32: \tr := request.NewGetBeanAccountInfoRequest()\n   33  \tr.SetAccountType(req.AccountType)\n   34      r.SetAccountCode(req.AccountCode)\n   ..\n   41      result = RemoveJsonSpace(result)\n   42  \n   43: \tvar response GetBeanAccountInfoResponse\n   44  \terr = ljson.Unmarshal(result, &response)\n   45  \tif err != nil {\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/GetBeanAccountInfo.go:\n    5  )\n    6  \n    7: type GetBeanAccountInfoRequest struct {\n    8  \tRequest *sdk.Request\n    9  }\n   10  \n   11  // create new request\n   12: func NewGetBeanAccountInfoRequest() (req *GetBeanAccountInfoRequest) {\n   13  \trequest := sdk.Request{MethodName: \"jingdong.pop.account.getAccountInfo\", Params: make(map[string]interface{})}\n   14: \treq = &GetBeanAccountInfoRequest{\n   15  \t\tRequest: &request,\n   16  \t}\n   ..\n   18  }\n   19  \n   20: func (req *GetBeanAccountInfoRequest) SetAccountType(accountType uint8) {\n   21  \treq.Request.Params[\"accountType\"] = accountType\n   22  }\n   23  \n   24: func (req *GetBeanAccountInfoRequest) GetAccountType() uint8 {\n   25      accountType, found := req.Request.Params[\"accountType\"]\n   26  \tif found {\n   ..\n   30  }\n   31  \n   32: func (req *GetBeanAccountInfoRequest) SetAccountCode(accountCode string) {\n   33  \treq.Request.Params[\"accountCode\"] = accountCode\n   34  }\n   35  \n   36: func (req *GetBeanAccountInfoRequest) GetAccountCode() string {\n   37      accountCode, found := req.Request.Params[\"accountCode\"]\n   38  \tif found {\n\n19 matches across 3 files\n\n\nSearching 213 files for \"NewServiceAndRefundViewRequest\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/asc.serviceAndRefund.view.go:\n   67  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   68  \tclient.Debug = req.Debug\n   69: \tr := request.NewServiceAndRefundViewRequest()\n   70  \n   71  \tif req.OrderId > 0 {\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/asc/asc.serviceAndRefund.view.go:\n    8  \n    9  // create new request\n   10: func NewServiceAndRefundViewRequest() (req *ServiceAndRefundViewRequest) {\n   11  \trequest := sdk.Request{MethodName: \"jingdong.asc.serviceAndRefund.view\", Params: make(map[string]interface{}, 8)}\n   12  \treq = &ServiceAndRefundViewRequest{\n\n2 matches across 2 files\n\n\nSearching 213 files for \"Category\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/category.interface.go:\n    1  package api\n    2  \n    3: type Category struct {\n    4  \tFid      uint64     `json:\"fid,omitempty\" codec:\"fid,omitempty\"`           // \t类目父ID\n    5  \tId       uint64     `json:\"id,omitempty\" codec:\"id,omitempty\"`             // 类目id\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.adkckeyword.categorypricesuggest.query.go:\n   11  )\n   12  \n   13: type CategorypricesuggestQueryRequest struct {\n   14      BaseRequest\n   15      Key        uint64 `json:\"key,omitempty\" codec:\"key,omitempty\"`                 // 三级类目ID\n   ..\n   17  }\n   18  \n   19: type CategorypricesuggestQueryResponse struct {\n   20      ErrorResp *ErrorResponnse                `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   21:     Data      *CategorypricesuggestQueryData `json:\"jingdong_dsp_adkckeyword_categorypricesuggest_query_responce,omitempty\" codec:\"jingdong_dsp_adkckeyword_categorypricesuggest_query_responce,omitempty\"`\n   22  }\n   23  \n   24: type CategorypricesuggestQueryData struct {\n   25:     Result CategorypricesuggestQueryResult `json:\"getPriceForeCast_result,omitempty\" codec:\"getPriceForeCast_result,omitempty\"`\n   26  }\n   27  \n   28: type CategorypricesuggestQueryResult struct {\n   29      Success    bool                            `json:\"success,omitempty\" codec:\"success,omitempty\"`\n   30      ResultCode string                          `json:\"resultCode,omitempty\" codec:\"resultCode,omitempty\"`\n   31      ErrorMsg   string                          `json:\"errorMsg,omitempty\" codec:\"errorMsg,omitempty\"`\n   32:     Value      *CategorypricesuggestQueryValue `json:\"value,omitempty\" codec:\"value,omitempty\"`\n   33  }\n   34: type CategorypricesuggestQueryValue struct {\n   35      HourHigh   []*DspDayForeCast `json:\"hourHigh,omitempty\" codec:\"hourHigh,omitempty\"`\n   36      DayLow     []*DspDayForeCast `json:\"dayLow,omitempty\" codec:\"dayLow,omitempty\"`\n   ..\n   48  \n   49  // 查询.快车.三级类目出价建议\n   50: func CategorypricesuggestQuery(req *CategorypricesuggestQueryRequest) (*CategorypricesuggestQueryValue, error) {\n   51      client := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   52      client.Debug = req.Debug\n   53:     r := request.NewCategorypricesuggestQueryRequest()\n   54      r.SetKey(req.Key)\n   55      r.SetMobileType(req.MobileType)\n   ..\n   62          return nil, fmt.Errorf(\"no result info\")\n   63      }\n   64:     var response CategorypricesuggestQueryResponse\n   65      err = ljson.Unmarshal(result, &response)\n   66  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.report.adgroupkeyword.query.go:\n   20      GroupId             uint64 `json:\"group_id,omitempty\" codec:\"group_id,omitempty\"`                           // 单元ID\n   21      IsOrderOrClick      bool   `json:\"is_order_or_click,omitempty\" codec:\"is_order_or_click,omitempty\"`         // 下单点击口径(true:下单口径;flase:点击口径)\n   22:     OrderStatusCategory int    `json:\"order_status_category,omitempty\" codec:\"order_status_category,omitempty\"` // GMV订单类型(空:全部;1:成交订单)\n   23      Platform            string `json:\"platform,omitempty\" codec:\"platform,omitempty\"`                           // 推广设备(全部:all;PC:pc;无线:mobile)\n   24      ValType             string `json:\"val_type,omitempty\" codec:\"val_type,omitempty\"`                           // 购买类型exact精确匹配,term短语匹配,segment切词匹配\n   ..\n  226          r.SetVal(req.Val)\n  227      }\n  228:     if req.OrderStatusCategory > 0 {\n  229:         r.SetOrderStatusCategory(req.OrderStatusCategory)\n  230      }\n  231  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/Dsp.report.queryAccountReport.go:\n   19  \tClickOrOrderDay     uint8  `json:\"clickOrOrderDay\"`                 // 口径(0:当天，1:1天，3:3天，7:7天，15:15天)\n   20  \tClickOrOrderCaliber uint8  `json:\"clickOrOrderCaliber\"`             // 点击口径/下单口径(0-点击口径，1-下单口径)\n   21: \tOrderStatusCategory uint8  `json:\"orderStatusCategory,omitempty\"`   // 全部订单/成交订单(null:全部订单，1: 成交订单)\n   22  \tPageIndex           uint16 `json:\"pageIndex\"`                       // 当前页码\n   23  \tPageSize            uint8  `json:\"pageSize\"`                        // 每页数量(最大值100)\n   ..\n   98      r.SetPageSize(req.PageSize)\n   99      r.SetPageIndex(req.PageIndex)\n  100:     if req.OrderStatusCategory > 0 {\n  101:         r.SetOrderStatusCategory(req.OrderStatusCategory)\n  102      }\n  103  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.report.queryCampDailySum.go:\n   20      IsOrderOrClick      bool   `json:\"is_order_or_click,omitempty\" codec:\"is_order_or_click,omitempty\"`         //下单点击口径(true:下单口径;flase:点击口径)\n   21      IsTodayOr15Days     bool   `json:\"is_today_or_15_days,omitempty\" codec:\"is_today_or_15_days,omitempty\"`     //是当天15天口径(true:15天;flase:当天)\n   22:     OrderStatusCategory int    `json:\"order_status_category,omitempty\" codec:\"order_status_category,omitempty\"` //GMV订单类型(空:全部;1:成交订单)\n   23      Platform            string `json:\"platform,omitempty\" codec:\"platform,omitempty\"`                           //推广设备(全部:all;PC:pc;无线:mobile)\n   24      PageIndex           int    `json:\"page_index,omitempty\" codec:\"page_index,omitempty\"`                       //当前页码\n   ..\n   95      CampaignVisitorCnt  uint64    `json:\"campaign_visitor_cnt,omitempty\" codec:\"campaign_visitor_cnt,omitempty\"` //访问数\n   96      AdType              int       `json:\"ad_type,omitempty\" codec:\"ad_type,omitempty\"`\n   97:     OrderStatusCategory string    `json:\"order_status_category,omitempty\" codec:\"order_status_category,omitempty\"` //\n   98      GoodsAttentionCnt   uint64    `json:\"goods_attention_cnt,omitempty\" codec:\"goods_attention_cnt,omitempty\"`     //商品关注数\n   99  }\n  ...\n  114      r.SetIsOrderOrClick(req.IsOrderOrClick)\n  115      r.SetIsTodayOr15Days(req.IsTodayOr15Days)\n  116:     if req.OrderStatusCategory > 0 {\n  117:         r.SetOrderStatusCategory(req.OrderStatusCategory)\n  118      }\n  119      if req.Platform == \"\" {\n  ...\n  227              case \"PlatformGmv\":\n  228                  rpt.PlatformGmv, _ = strconv.ParseFloat(v, 64)\n  229:             case \"orderStatusCategory\":\n  230:                 rpt.OrderStatusCategory = v\n  231              case \"CampaignStatus\":\n  232                  val, err := strconv.ParseInt(v, 10, 64)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp.report.queryGroupDailySum.go:\n   22      IsOrderOrClick      bool   `json:\"is_order_or_click,omitempty\" codec:\"is_order_or_click,omitempty\"`         // 下单点击口径(true:下单口径;flase:点击口径)\n   23      IsTodayOr15Days     bool   `json:\"is_today_or_15_days,omitempty\" codec:\"is_today_or_15_days,omitempty\"`     // 是当天15天口径(true:15天;flase:当天)\n   24:     OrderStatusCategory int    `json:\"order_status_category,omitempty\" codec:\"order_status_category,omitempty\"` // GMV订单类型(空:全部;1:成交订单)\n   25      Platform            string `json:\"platform,omitempty\" codec:\"platform,omitempty\"`                           // 推广设备(全部:all;PC:pc;无线:mobile)\n   26      PageIndex           int    `json:\"page_index,omitempty\" codec:\"page_index,omitempty\"`                       // 当前页码\n   ..\n   87      ShopAttentionCnt                  uint64    `json:\"shop_attention_cnt,omitempty\" codec:\"shop_attention_cnt,omitempty\"`\n   88      NewCustomersCnt                   uint64    `json:\"new_customers_cnt,omitempty\" codec:\"new_customers_cnt,omitempty\"`\n   89:     OrderStatusCategory               string    `json:\"order_status_category,omitempty\" codec:\"order_status_category,omitempty\"`\n   90      GoodsAttentionCnt                 uint64    `json:\"goods_attention_cnt,omitempty\" codec:\"goods_attention_cnt,omitempty\"`\n   91      GroupVisitorCntForInternalSummary uint64    `json:\"group_visitor_cnt_for_internal_summary,omitempty\" codec:\"group_visitor_cnt_for_internal_summary,omitempty\"`\n   ..\n  108      r.SetIsOrderOrClick(req.IsOrderOrClick)\n  109      r.SetIsTodayOr15Days(req.IsTodayOr15Days)\n  110:     if req.OrderStatusCategory > 0 {\n  111:         r.SetOrderStatusCategory(req.OrderStatusCategory)\n  112      }\n  113      if req.Platform == \"\" {\n  ...\n  227              case \"r0_PlatformGmv\":\n  228                  rpt.PlatformGmv, _ = strconv.ParseFloat(v, 64)\n  229:             case \"orderStatusCategory\":\n  230:                 rpt.OrderStatusCategory = v\n  231              case \"CampaignName\":\n  232                  rpt.CampaignName = v\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/FindCateById.go:\n   22  type FindCateByIdData struct {\n   23  \tCode     string    `json:\"code,omitempty\" codec:\"code,omitempty\"`\n   24: \tCategory *Category `json:\"category,omitempty\" codec:\"category,omitempty\"`\n   25  }\n   26  \n   27  // 获取单个SKU\n   28: func FindCateById(req *FindCateByIdRequest) (*Category, error) {\n   29  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   30  \tclient.Debug = req.Debug\n   ..\n   54  \t}\n   55  \n   56: \treturn response.Data.Category, nil\n   57  }\n   58  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/FindCateByPid.go:\n   23  type FindCateByPidData struct {\n   24  \tCode       string      `json:\"code,omitempty\" codec:\"code,omitempty\"`\n   25: \tCategories []*Category `json:\"categories,omitempty\" codec:\"categories,omitempty\"`\n   26  }\n   27  \n   28  // 获取单个SKU\n   29: func FindCateByPid(req *FindCateByPidRequest) ([]*Category, error) {\n   30  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   31  \tclient.Debug = req.Debug\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/product.interface.go:\n   33  \tSaleUnit          string `json:\"saleUnit,omitempty\" codec:\"saleUnit,omitempty\"`                   // \t销售单位\n   34  \tPackSpecification string `json:\"packSpecification,omitempty\" codec:\"packSpecification,omitempty\"` // \t包装规格\n   35: \tCategory          string `json:\"category,omitempty\" codec:\"category,omitempty\"`                   // \t分类信息\n   36: \tShopCategorys     string `json:\"shopCategorys,omitempty\" codec:\"shopCategorys,omitempty\"`         // 店内分类\n   37  \tPhone             string `json:\"phone,omitempty\" codec:\"phone,omitempty\"`                         // 售后电话\n   38  \tSite              string `json:\"site,omitempty\" codec:\"site,omitempty\"`                           // 官网\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SearchWare4Valid.go:\n   15  \tSearchKey            string   `json:\"searchKey,omitempty\" codec:\"searchKey,omitempty\"`                       // 商品搜索关键词,需要配合搜索域实现\n   16  \tSearchField          []string `json:\"searchField,omitempty\" codec:\"searchField,omitempty\"`                   // 商品搜索域的范围,默认是商品名称.目前值范围[title]\n   17: \tCategoryId           uint64   `json:\"categoryId,omitempty\" codec:\"categoryId,omitempty\"`                     // 商品叶子类目\n   18: \tShopCategoryIdLevel1 uint64   `json:\"shopCategoryIdLevel1,omitempty\" codec:\"shopCategoryIdLevel1,omitempty\"` // 一级店内分类id\n   19: \tShopCategoryIdLevel2 uint64   `json:\"shopCategoryIdLevel2,omitempty\" codec:\"shopCategoryIdLevel2,omitempty\"` // 二级店内分类id\n   20  \tTemplateId           uint64   `json:\"templateId,omitempty\" codec:\"templateId,omitempty\"`                     // 关联板式ID\n   21  \tPromiseId            uint64   `json:\"promiseId,omitempty\" codec:\"promiseId,omitempty\"`                       // 时效模板ID\n   ..\n   46  \tClaim                int      `json:\"claim,omitempty\" codec:\"claim,omitempty\"`                               // 是否认领\n   47  \tGroupId              uint64   `json:\"groupId,omitempty\" codec:\"groupId,omitempty\"`                           // 分组ID\n   48: \tMultiCategoryId      uint64   `json:\"multiCategoryId,omitempty\" codec:\"multiCategoryId,omitempty\"`           // 四级类目ID\n   49  \tWarePropKey          string   `json:\"warePropKey,omitempty\" codec:\"warePropKey,omitempty\"`                   // 商品的类目属性搜索key\n   50  \tWarePropValue        string   `json:\"warePropValue,omitempty\" codec:\"warePropValue,omitempty\"`               // 商品的类目属性搜索value\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/shop.interface.go:\n   82  \tLogoUrl          string `json:\"logo_url,omitempty\" codec:\"logo_url,omitempty\"`\n   83  \tBrief            string `json:\"brief,omitempty\" codec:\"brief,omitempty\"`\n   84: \tCategoryMain     int    `json:\"category_main,omitempty\" codec:\"category_main,omitempty\"`\n   85: \tCategoryMainName string `json:\"category_main_name,omitempty\" codec:\"category_main_name,omitempty\"`\n   86  \n   87  \tColType     uint8  `json:\"col_type\" codec:\"col_type\"` // 商家类型: 0：SOP 1：FBP 2：LBP 5：SOPL\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware.interface.go:\n    4  \tWareId               uint64      `json:\"wareId,omitempty\" codec:\"wareId,omitempty\"`                             // 商品id\n    5  \tTitle                string      `json:\"title,omitempty\" codec:\"title,omitempty\"`                               // 商品名称\n    6: \tCategoryId           uint64      `json:\"categoryId,omitempty\" codec:\"categoryId,omitempty\"`                     // 类目ID\n    7  \tBrandId              uint64      `json:\"brandId,omitempty\" codec:\"brandId,omitempty\"`                           // \t品牌ID\n    8  \tTemplateId           uint64      `json:\"templateId,omitempty\" codec:\"templateId,omitempty\"`                     // 关联板式id\n    .\n   29  \tFeatures             []*Feature  `json:\"features,omitempty\" codec:\"features,omitempty\"`                         // 特殊属性集合\n   30  \tImages               []*Image    `json:\"images,omitempty\" codec:\"images,omitempty\"`                             // 商品图片\n   31: \tShopCategorys        []int       `json:\"shopCategorys,omitempty\" codec:\"shopCategorys,omitempty\"`               // 店内分类\n   32  \tMobileDesc           string      `json:\"mobileDesc,omitempty\" codec:\"mobileDesc,omitempty\"`                     // 移动端详情\n   33  \tIntroduction         string      `json:\"introduction,omitempty\" codec:\"introduction,omitempty\"`                 // \tPC端详情\n   ..\n   42  \tBrandName            string      `json:\"brandName,omitempty\" codec:\"brandName,omitempty\"`                       // \t品牌名称\n   43  \tStockNum             int         `json:\"stockNum,omitempty\" codec:\"stockNum,omitempty\"`                         // 总库存数\n   44: \tCategorySecId        int         `json:\"categorySecId,omitempty\" codec:\"categorySecId,omitempty\"`               // 二级叶子类目\n   45  \tShopId               int         `json:\"shopId,omitempty\" codec:\"shopId,omitempty\"`                             // 商家对应的shopID，只读属性\n   46  \tPromiseId            int         `json:\"promiseId,omitempty\" codec:\"promiseId,omitempty\"`                       // 时效模板ID\n   47: \tMultiCategoryId      int         `json:\"multiCategoryId,omitempty\" codec:\"multiCategoryId,omitempty\"`           // 四级类目ID\n   48  \tMultiCateProps       []*SaleAttr `json:\"multiCateProps,omitempty\" codec:\"multiCateProps,omitempty\"`             // 四级类目属性列表\n   49  \tSellPoint            string      `json:\"sellPoint,omitempty\" codec:\"sellPoint,omitempty\"`                       // 卖点\n   ..\n   78  \tOuterId              string      `json:\"outerId,omitempty\" codec:\"outerId,omitempty\"`                           // 外部ID\n   79  \tBarCode              string      `json:\"barCode,omitempty\" codec:\"barCode,omitempty\"`                           // sku条形码\n   80: \tCategoryId           uint64      `json:\"categoryId,omitempty\" codec:\"categoryId,omitempty\"`                     // 类目id\n   81  \tImgTag               int         `json:\"imgTag,omitempty\" codec:\"imgTag,omitempty\"`                             // 图片标签\n   82  \tLogo                 string      `json:\"logo,omitempty\" codec:\"logo,omitempty\"`                                 // sku颜色的主图\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/jos_test:\n    <binary>\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go:\n  496  \t\tPageNo:          0,\n  497  \t\tPageSize:        15,\n  498: \t\tField:           \"wareId,title,categoryId,brandId,templateId,transportId,wareStatus,outerId,itemNum,barCode,wareLocation,modified,created,offlineTime,onlineTime,colType,delivery,adWords,wrap,packListing,weight,width,height,length,props,features,images,shopCategorys,mobileDesc,introduction,zhuangBaIntroduction,zhuangBaId,introductionUseFlag,afterSales,logo,marketPrice,costPrice,jdPrice,brandName,stockNum,categorySecId,shopId,promiseId,multiCategoryId,multiCateProps,sellPoint,wareTax,afterSaleDesc,zhuangBaMobileDesc,mobileZhuangBaId,mobileDescUseFlag,fitCaseHtmlPc,fitCaseHtmlApp,specialServices,parentId,wareGroupId,businessType,designConcept,isArchival,templateIds\",\n  499  \t\t//Field: strings.Split(\"wareId,title\", \",\"),\n  500  \t}\n  ...\n  524  \t\t},\n  525  \t\tWareId: wareId,\n  526: \t\tFields: \"wareId,title,categoryId,brandId,templateId,transportId,wareStatus,outerId,itemNum,barCode,wareLocation,modified,created,offlineTime,onlineTime,colType,delivery,adWords,wrap,packListing,weight,width,height,length,props,features,images,shopCategorys,mobileDesc,introduction,zhuangBaIntroduction,zhuangBaId,introductionUseFlag,afterSales,logo,marketPrice,costPrice,jdPrice,brandName,stockNum,categorySecId,shopId,promiseId,multiCategoryId,multiCateProps,sellPoint,wareTax,afterSaleDesc,zhuangBaMobileDesc,mobileZhuangBaId,mobileDescUseFlag,fitCaseHtmlPc,fitCaseHtmlApp,specialServices,parentId,wareGroupId,businessType,designConcept,isArchival,templateIds\",\n  527  \t\t//Fields: \"images,brandId\",\n  528  \t}\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/dsp.adkckeyword.categorypricesuggest.query.go:\n    3  import \"github.com/XiBao/jos/sdk\"\n    4  \n    5: type CategorypricesuggestQueryRequest struct {\n    6      Request *sdk.Request\n    7  }\n    .\n    9  \n   10  \n   11: func NewCategorypricesuggestQueryRequest() (req *CategorypricesuggestQueryRequest) {\n   12      request := sdk.Request{MethodName: \"jingdong.dsp.adkckeyword.categorypricesuggest.query\", Params: make(map[string]interface{})}\n   13:     req = &CategorypricesuggestQueryRequest{\n   14          Request: &request,\n   15      }\n   ..\n   20  \n   21  \n   22: func (req *CategorypricesuggestQueryRequest) SetKey(key uint64) {\n   23      req.Request.Params[\"key\"] = key\n   24  }\n   25  \n   26: func (req *CategorypricesuggestQueryRequest) GetKey() uint64 {\n   27      key, found := req.Request.Params[\"key\"]\n   28      if found {\n   ..\n   32  }\n   33  \n   34: func (req *CategorypricesuggestQueryRequest) SetMobileType(mobileType uint8) {\n   35      req.Request.Params[\"mobileType\"] = mobileType\n   36  }\n   37  \n   38: func (req *CategorypricesuggestQueryRequest) GetMobileType() uint8 {\n   39      mobileType, found := req.Request.Params[\"mobileType\"]\n   40      if found {\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/dsp.report.adgroupkeyword.query.go:\n  111  }\n  112  \n  113: func (req *AdgroupkeywordQueryRequest) SetOrderStatusCategory(orderStatusCategory int) {\n  114:     req.Request.Params[\"orderStatusCategory\"] = orderStatusCategory\n  115  }\n  116  \n  117: func (req *AdgroupkeywordQueryRequest) GetOrderStatusCategory() int {\n  118:     orderStatusCategory, found := req.Request.Params[\"orderStatusCategory\"]\n  119      if found {\n  120:         return orderStatusCategory.(int)\n  121      }\n  122      return 0\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/Dsp.report.queryAccountReport.go:\n   90  }\n   91  \n   92: func (req *DspReportQueryAccountReportRequest) SetOrderStatusCategory(orderStatusCategory uint8) {\n   93: \treq.Request.Params[\"orderStatusCategory\"] = orderStatusCategory\n   94  }\n   95  \n   96: func (req *DspReportQueryAccountReportRequest) GetOrderStatusCategory() uint8 {\n   97: \torderStatusCategory, found := req.Request.Params[\"orderStatusCategory\"]\n   98  \tif found {\n   99: \t\treturn orderStatusCategory.(uint8)\n  100  \t}\n  101  \treturn 0\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/dsp.report.queryCampDailySum.go:\n   87  }\n   88  \n   89: func (req *QueryCampDailySumRequest) SetOrderStatusCategory(orderStatusCategory int) {\n   90:     req.Request.Params[\"orderStatusCategory\"] = orderStatusCategory\n   91  }\n   92  \n   93: func (req *QueryCampDailySumRequest) GetOrderStatusCategory() int {\n   94:     orderStatusCategory, found := req.Request.Params[\"orderStatusCategory\"]\n   95      if found {\n   96:         return orderStatusCategory.(int)\n   97      }\n   98      return 0\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/dsp.report.queryGroupDailySum.go:\n   87  }\n   88  \n   89: func (req *QueryGroupDailySumRequest) SetOrderStatusCategory(orderStatusCategory int) {\n   90: \treq.Request.Params[\"orderStatusCategory\"] = orderStatusCategory\n   91  }\n   92  \n   93: func (req *QueryGroupDailySumRequest) GetOrderStatusCategory() int {\n   94: \torderStatusCategory, found := req.Request.Params[\"orderStatusCategory\"]\n   95  \tif found {\n   96: \t\treturn orderStatusCategory.(int)\n   97  \t}\n   98  \treturn 0\n\n116 matches across 19 files\n\n\nSearching 213 files for \"NewQueryBrandsIdByVenderIdRequest\" (case sensitive)\nSearching 213 files for \"NewQueryBrandsIdByVenderIdRequest\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/client.queryBrandsIdByVenderId.go:\n   31  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   32  \tclient.Debug = req.Debug\n   33: \tr := request.NewQueryBrandsIdByVenderIdRequest()\n   34  \n   35  \tresult, err := client.Execute(r.Request, req.Session)\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/client.queryBrandsIdByVenderId.go:\n    8  \n    9  // create new request\n   10: func NewQueryBrandsIdByVenderIdRequest() (req *QueryBrandsIdByVenderIdRequest) {\n   11  \trequest := sdk.Request{MethodName: \"jingdong.pop.brand.client.queryBrandsIdByVenderId\", Params: make(map[string]interface{})}\n   12  \treq = &QueryBrandsIdByVenderIdRequest{\n\n2 matches across 2 files\n\n\nSearching 213 files for \"NewDspBalanceRequest\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/Dsp.balance.go:\n   42  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   43  \tclient.Debug = req.Debug\n   44: \tr := request.NewDspBalanceRequest()\n   45  \n   46  \tresult, err := client.Execute(r.Request, req.Session)\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/dsp/Dsp.balance.go:\n   10  \n   11  // create new request\n   12: func NewDspBalanceRequest() (req *DspBalanceRequest) {\n   13  \trequest := sdk.Request{MethodName: \"jingdong.dsp.balance.get\", Params: make(map[string]interface{})}\n   14  \treq = &DspBalanceRequest{\n\n2 matches across 2 files\n\n\nSearching 213 files for \"RemoveJsonSpace\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetOpenLink.go:\n   40  \t\treturn \"\", err\n   41  \t}\n   42:     result = RemoveJsonSpace(result)\n   43  \n   44  \tvar response GetOpenLinkResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/InteractCenterCreateGiftActivity.go:\n   92          return nil, err\n   93      }\n   94:     result = RemoveJsonSpace(result)\n   95  \n   96      var response CreateGiftActivityResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/InteractCenterFindCollectInfo.go:\n   76  \t\treturn nil, err\n   77  \t}\n   78:     result = RemoveJsonSpace(result)\n   79  \n   80  \tvar response FindCollectInfoResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/InteractCenterWriteCollectCoupon.go:\n   62  \t\treturn false, err\n   63  \t}\n   64:     result = RemoveJsonSpace(result)\n   65  \n   66  \tvar response WriteCollectCouponResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/MobileBigField.go:\n   37  \t\treturn \"\", err\n   38  \t}\n   39:     result = RemoveJsonSpace(result)\n   40  \n   41  \tvar response MobileBigFieldResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SendBean.go:\n   67  \t\treturn nil, err\n   68  \t}\n   69:     result = RemoveJsonSpace(result)\n   70  \n   71  \tvar response SendBeanResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/util.go:\n   14  }\n   15  \n   16: func RemoveJsonSpace(data []byte) []byte {\n   17      rs := bytes.Replace(data, []byte(\"\\n\"), []byte(\"\"), -1)\n   18      rs = bytes.Replace(rs, []byte(\"\\t\"), []byte(\"\"), -1)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/account/getAccountInfo.go:\n   39  \t\treturn nil, err\n   40  \t}\n   41: \tresult = RemoveJsonSpace(result)\n   42  \n   43  \tvar response GetAccountInfoResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/balanceGet.go:\n   46  \t\treturn nil, err\n   47  \t}\n   48: \tresult = RemoveJsonSpace(result)\n   49  \n   50  \tvar response DspBalanceResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/Dsp.report.queryAccountReport.go:\n  107  \t\treturn nil, err\n  108  \t}\n  109:     result = RemoveJsonSpace(result)\n  110      // logger.Info(string(result))\n  111  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/plan/addBeanPlan.go:\n   75  \t\treturn 0, err\n   76  \t}\n   77: \tresult = RemoveJsonSpace(result)\n   78  \n   79  \tvar response AddBeanPlanResponse\n\n11 matches across 11 files\n\n\nSearching 213 files for \"Json\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/FindCateByPid.go:\n   55  \t}\n   56  \n   57: \t//logger.Infof(\"response: %s\", Json(response))\n   58  \treturn response.Data.Categories, nil\n   59  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetOpenLink.go:\n   40  \t\treturn \"\", err\n   41  \t}\n   42:     result = RemoveJsonSpace(result)\n   43  \n   44  \tvar response GetOpenLinkResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/InteractCenterCreateGiftActivity.go:\n   92          return nil, err\n   93      }\n   94:     result = RemoveJsonSpace(result)\n   95  \n   96      var response CreateGiftActivityResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/InteractCenterFindCollectInfo.go:\n   76  \t\treturn nil, err\n   77  \t}\n   78:     result = RemoveJsonSpace(result)\n   79  \n   80  \tvar response FindCollectInfoResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/InteractCenterWriteCollectCoupon.go:\n   62  \t\treturn false, err\n   63  \t}\n   64:     result = RemoveJsonSpace(result)\n   65  \n   66  \tvar response WriteCollectCouponResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/MobileBigField.go:\n   37  \t\treturn \"\", err\n   38  \t}\n   39:     result = RemoveJsonSpace(result)\n   40  \n   41  \tvar response MobileBigFieldResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/NewWareBaseProductGet.go:\n   59  \t}\n   60  \n   61: \t//logger.Infof(\"reponse: %s\", Json(response))\n   62  \treturn response.Data.Result, nil\n   63  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SendBean.go:\n   67  \t\treturn nil, err\n   68  \t}\n   69:     result = RemoveJsonSpace(result)\n   70  \n   71  \tvar response SendBeanResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/VenderSyncBind.go:\n   19      PhoneNo       string `json:\"phoneNo,omitempty\" codec:\"phoneNo,omitempty\"`             // 手机号\n   20      CustomerLevel uint8  `json:\"customerLevel,omitempty\" codec:\"customerLevel,omitempty\"` // 会员等级（1-一等级；2-二等级；3-三等级；4-四等级；5-五等级）\n   21:     Extend        string `json:\"extend,omitempty\" codec:\"extend,omitempty\"`               // 扩展字段，Json数据；存储姓名、称谓、邮箱、密码等非必须字段\n   22      CustomerType  uint8  `json:\"customerType,omitempty\" codec:\"customerType,omitempty\"`   // 会员类型（1-注册已完成；2-绑定；3-注册未完成；4-待激活；5-审核中；6-待购卡)\n   23      Province      string `json:\"province,omitempty\" codec:\"province,omitempty\"`           // 省份\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/account/getAccountInfo.go:\n   40  \t\treturn nil, err\n   41  \t}\n   42: \tresult = util.RemoveJsonSpace(result)\n   43  \n   44  \tvar response GetAccountInfoResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/asc/serviceAndRefundView.go:\n   18  \tPageNumber       uint64 `json:\"pageNumber,omitempty\" codec:\"pageNumber,omitempty\"`             //页码(从1开始)\n   19  \tPageSize         uint8  `json:\"pageSize,omitempty\" codec:\"pageSize,omitempty\"`                 //每页大小（1-50，默认10）\n   20: \tExtJsonStr       string `json:\"extJsonStr,omitempty\" codec:\"extJsonStr,omitempty\"`             //扩展条件（JSON格式）\n   21  }\n   22  \n   ..\n   91  \t\tr.SetPageSize(req.PageSize)\n   92  \t}\n   93: \tif len(req.ExtJsonStr) > 0 {\n   94: \t\tr.SetExtJsonStr(req.ExtJsonStr)\n   95  \t}\n   96  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/balanceGet.go:\n   47  \t\treturn nil, err\n   48  \t}\n   49: \tresult = util.RemoveJsonSpace(result)\n   50  \n   51  \tvar response DspBalanceResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/Dsp.report.queryAccountReport.go:\n  107  \t\treturn nil, err\n  108  \t}\n  109:     result = RemoveJsonSpace(result)\n  110      // logger.Info(string(result))\n  111  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/plan/addBeanPlan.go:\n   75  \t\treturn 0, err\n   76  \t}\n   77: \tresult = RemoveJsonSpace(result)\n   78  \n   79  \tvar response AddBeanPlanResponse\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/util/util.go:\n    6  )\n    7  \n    8: func Json(obj interface{}) string {\n    9  \tvar buf bytes.Buffer\n   10  \tenc := json.NewEncoder(&buf)\n   ..\n   14  }\n   15  \n   16: func RemoveJsonSpace(data []byte) []byte {\n   17  \trs := bytes.Replace(data, []byte(\"\\n\"), []byte(\"\"), -1)\n   18  \trs = bytes.Replace(rs, []byte(\"\\t\"), []byte(\"\"), -1)\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/jos_test:\n    <binary>\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go:\n  129  }\n  130  \n  131: func Json(obj interface{}) string {\n  132  \tvar buf bytes.Buffer\n  133  \tenc := json.NewEncoder(&buf)\n  ...\n  148  \t\t\t\treturn\n  149  \t\t\t}\n  150: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  151  \n  152  \t\tcase POP_ORDER_EN_SEARCH:\n  ...\n  156  \t\t\t\treturn\n  157  \t\t\t}\n  158: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))*/\n  159  \n  160  \t\tcase POP_ORDER_EN_GET:\n  ...\n  164  \t\t\t\treturn\n  165  \t\t\t}\n  166: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  167  \n  168  \t\tcase FIND_SKU_BY_ID:\n  ...\n  172  \t\t\t\treturn\n  173  \t\t\t}\n  174: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  175  \n  176  \t\tcase TOKEN_TO_PIN:\n  ...\n  180  \t\t\t\treturn\n  181  \t\t\t}\n  182: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  183  \n  184  \t\tcase SEARCH_WARE4_VALID:\n  ...\n  188  \t\t\t\treturn\n  189  \t\t\t}\n  190: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  191  \n  192  \t\tcase WARE_SKUS_GET:\n  ...\n  196  \t\t\t\treturn\n  197  \t\t\t}\n  198: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  199  \n  200  \t\tcase FIND_WARE_BY_ID:\n  ...\n  204  \t\t\t\treturn\n  205  \t\t\t}\n  206: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  207  \n  208  \t\tcase SEARCH_SKU_LIST:\n  ...\n  212  \t\t\t\treturn\n  213  \t\t\t}\n  214: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  215  \n  216  \t\tcase VENDER_COMMON_QUERY:\n  ...\n  220  \t\t\t\treturn\n  221  \t\t\t}\n  222: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  223  \n  224  \t\tcase FW_ORDER_LIST_WITH_PAGE:\n  ...\n  228  \t\t\t\treturn\n  229  \t\t\t}\n  230: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  231  \n  232  \t\tcase UNION_QUERY_ORDER_LIST:\n  ...\n  236  \t\t\t\treturn\n  237  \t\t\t}\n  238: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  239  \n  240  \t\tcase GET_USER_BASE_INFO_BY_PIN:\n  ...\n  244  \t\t\t\treturn\n  245  \t\t\t}\n  246: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  247  \n  248  \t\tcase GET_USER_BASE_INFO_BY_ENCRY_PIN:\n  ...\n  252  \t\t\t\treturn\n  253  \t\t\t}\n  254: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  255  \n  256  \t\tcase FIND_CATE_BY_PID:\n  ...\n  260  \t\t\t\treturn\n  261  \t\t\t}\n  262: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  263  \n  264  \t\tcase IS_FOLLOW_BY_PIN_AND_VID:\n  ...\n  268  \t\t\t\treturn\n  269  \t\t\t}\n  270: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  271  \n  272  \t\tcase FOLLOW_BY_PIN_AND_VID:\n  ...\n  276  \t\t\t\treturn\n  277  \t\t\t}\n  278: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  279  \n  280  \t\tcase GET_CUSTOER_POINTS:\n  ...\n  284  \t\t\t\treturn\n  285  \t\t\t}\n  286: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  287  \n  288  \t\tcase GET_POINTS_DETAIL:\n  ...\n  292  \t\t\t\treturn\n  293  \t\t\t}\n  294: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  295  \n  296  \t\tcase SEND_POINTS:\n  ...\n  300  \t\t\t\treturn\n  301  \t\t\t}\n  302: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  303  \n  304  \t\tcase GET_CRM_GRADES:\n  ...\n  308  \t\t\t\treturn\n  309  \t\t\t}\n  310: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  311  \n  312  \t\tcase GET_MEMBER_IN_VENER:\n  ...\n  316  \t\t\t\treturn\n  317  \t\t\t}\n  318: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  319  \n  320  \t\tcase MEMBER_SCAN:\n  ...\n  324  \t\t\t\treturn\n  325  \t\t\t}\n  326: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  327  \n  328  \t\tcase MEMBER_SEARCH_NEW:\n  ...\n  332  \t\t\t\treturn\n  333  \t\t\t}\n  334: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  335  \n  336  \t\tcase NEW_WARE_PRODUCTS_BASE_GET:\n  ...\n  340  \t\t\t\treturn\n  341  \t\t\t}\n  342: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  343  \n  344  \t\tcase DELETE_CUSTOMER_OPEN_INFO:\n  ...\n  348  \t\t\t\treturn\n  349  \t\t\t}\n  350: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  351  \n  352  \t\tcase WRITE_CUSTOMER_INFO:\n  ...\n  356  \t\t\t\treturn\n  357  \t\t\t}\n  358: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  359  \n  360  \t\tcase ENQUERY_REGISTRATION_DATA_COUNT:\n  ...\n  364  \t\t\t\treturn\n  365  \t\t\t}\n  366: \t\t\tlogger.Infof(\"ret = %s\", Json(ret))\n  367  \n  368          case SEND_BEAN:\n  ...\n  372                  return\n  373              }\n  374:             logger.Infof(\"ret = %s\", Json(ret))*/\n  375  \n  376  \t\tdefault:\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/client.go:\n   92  func (c *Client) Execute(req *Request, token string) (result []byte, err error) {\n   93  \tsysParams := make(map[string]string, 7)\n   94: \tif paramJson, e := json.Marshal(req.Params); e != nil {\n   95  \t\treturn nil, e\n   96  \t} else {\n   97: \t\tsysParams[\"360buy_param_json\"] = string(paramJson)\n   98  \t}\n   99  \tsysParams[\"method\"] = req.MethodName\n  ...\n  108  \tsysParams[\"sign\"] = c.GenerateSign(rawSign)\n  109  \tif c.Debug {\n  110: \t\tlogger.Infof(\"params: %v\", Json(sysParams))\n  111  \t}\n  112  \tvalues := url.Values{}\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/util.go:\n    6  )\n    7  \n    8: func Json(obj interface{}) string {\n    9  \tvar buf bytes.Buffer\n   10  \tenc := json.NewEncoder(&buf)\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/asc/serviceAndRefundView.go:\n  100  }\n  101  \n  102: func (req *ServiceAndRefundViewRequest) SetExtJsonStr(extJsonStr string) {\n  103: \treq.Request.Params[\"extJsonStr\"] = extJsonStr\n  104  }\n  105  \n  106: func (req *ServiceAndRefundViewRequest) GetExtJsonStr() string {\n  107: \textJsonStr, found := req.Request.Params[\"extJsonStr\"]\n  108  \tif found {\n  109: \t\treturn extJsonStr.(string)\n  110  \t}\n  111  \treturn \"\"\n\n67 matches across 20 files\n\n\nSearching 213 files for \"DspCampaignQuery\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/list.go:\n   38  \n   39  type ListValue struct {\n   40:     Datas     []*DspCampaignQuery `json:\"datas,omitempty\" codec:\"datas,omitempty\"`\n   41      Paginator *Paginator          `json:\"paginator,omitempty\" codec:\"paginator,omitempty\"`\n   42  }\n   43  \n   44: type DspCampaignQuery struct {\n   45      Id                 uint64  `json:\"id,omitempty\" codec:\"id,omitempty\"`                                 //计划ID\n   46      Name               string  `json:\"name,omitempty\" codec:\"name,omitempty\"`                             //计划名称\n   ..\n   56  \n   57  // 快车.计划信息（批量获取）\n   58: func CampainList(req *CampainListRequest) ([]*DspCampaignQuery, int, error) {\n   59  \n   60      client := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n\n3 matches in 1 file\n\n\nSearching 213 files for \"JosKeyword\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/report/adgroupkeywordQuery.go:\n   45  \n   46  type AdgroupkeywordQueryValue struct {\n   47: \tDatas []*JosKeywordTmp `json:\"datas,omitempty\" codec:\"datas,omitempty\"`\n   48  }\n   49  \n   50: type JosKeywordTmp struct {\n   51  \tId                      uint64  `json:\"id,omitempty\" codec:\"id,omitempty\"`\n   52  \tKeyword                 string  `json:\"Keyword,omitempty\" codec:\"Keyword,omitempty\"`\n   ..\n   90  }\n   91  \n   92: type JosKeyword struct {\n   93  \tId                      uint64    `json:\"id,omitempty\" codec:\"id,omitempty\"`\n   94  \tKeyword                 string    `json:\"keyword,omitempty\" codec:\"keyword,omitempty\"`\n   ..\n  133  }\n  134  \n  135: func (k *JosKeywordTmp) ToJosKeyword() *JosKeyword {\n  136: \tkw := &JosKeyword{\n  137  \t\tId:             k.Id,\n  138  \t\tKeyword:        k.Keyword,\n  ...\n  203  \n  204  // 获取关键词报表\n  205: func AdgroupkeywordQuery(req *AdgroupkeywordQueryRequest) ([]*JosKeyword, error) {\n  206  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n  207  \tclient.Debug = req.Debug\n  ...\n  248  \t}\n  249  \n  250: \tvar record []*JosKeyword\n  251  \tfor _, v := range response.Data.Result.Value.Datas {\n  252: \t\trecord = append(record, v.ToJosKeyword())\n  253  \t}\n  254  \n\n10 matches in 1 file\n\n\nSearching 213 files for \"NewEnqueryRegistrationDataCount\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/EnqueryRegistrationDataCount.go:\n   36  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   37  \tclient.Debug = req.Debug\n   38: \tr := request.NewEnqueryRegistrationDataCount()\n   39  \tr.SetSkuId(req.SkuId)\n   40  \tr.SetOrderId(req.OrderId)\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/EnqueryRegistrationDataCount.go:\n   10  \n   11  // create new request\n   12: func NewEnqueryRegistrationDataCount() (req *EnqueryRegistrationDataCountRequest) {\n   13  \trequest := sdk.Request{MethodName: \"jingdong.acty.enqueryRegistrationDataCount\", Params: make(map[string]interface{})}\n   14  \treq = &EnqueryRegistrationDataCountRequest{\n\n2 matches across 2 files\n\n\nSearching 213 files for \"type Sku struct\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware.interface.go:\n   68  }\n   69  \n   70: type Sku struct {\n   71  \tWareId               uint64      `json:\"wareId,omitempty\" codec:\"wareId,omitempty\"`       // 商品ID\n   72  \tSkuId                uint64      `json:\"skuId,omitempty\" codec:\"skuId,omitempty\"`         // skuId\n\n1 match in 1 file\n\n\nSearching 213 files for \"NewOrderListwithpageRequest\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/fw.orderListwithpage.go:\n   65  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   66  \tclient.Debug = req.Debug\n   67: \tr := request.NewOrderListwithpageRequest()\n   68  \n   69  \tif req.CurrentPage > 0 {\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/fw.orderListwithpage.go:\n    8  \n    9  // create new request\n   10: func NewOrderListwithpageRequest() (req *OrderListwithpageRequest) {\n   11  \trequest := sdk.Request{MethodName: \"jingdong.pop.fw.order.listwithpage\", Params: make(map[string]interface{})}\n   12  \treq = &OrderListwithpageRequest{\n\n2 matches across 2 files\n\n\nSearching 213 files for \"NewGetOpenLinkRequest\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetOpenLink.go:\n   30  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   31  \tclient.Debug = req.Debug\n   32: \tr := request.NewGetOpenLinkRequest()\n   33  \tr.SetJump(req.Jump)\n   34  \tr.SetRUrl(req.RUrl)\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/GetOpenLink.go:\n   10  \n   11  // create new request\n   12: func NewGetOpenLinkRequest() (req *GetOpenLinkRequest) {\n   13  \trequest := sdk.Request{MethodName: \"jingdong.wxsq.mjgj.link.GetOpenLink\", Params: make(map[string]interface{})}\n   14  \treq = &GetOpenLinkRequest{\n\n2 matches across 2 files\n\n\nSearching 213 files for \"ProductsBase\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/product.interface.go:\n    1  package api\n    2  \n    3: type ProductsBase struct {\n    4  \tSkuId             uint64 `json:\"skuId,omitempty\" codec:\"skuId,omitempty\"`                         // sku编号\n    5  \tName              string `json:\"name,omitempty\" codec:\"name,omitempty\"`                           // 商品名称\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware/baseProductGet.go:\n   24  type WareBaseProductGetData struct {\n   25  \tCode   string          `json:\"code,omitempty\" codec:\"code,omitempty\"`\n   26: \tResult []*ProductsBase `json:\"listproductbase_result,omitempty\" codec:\"listproductbase_result,omitempty\"`\n   27  }\n   28  \n   29  // 获取单个SKU\n   30: func WareBaseProductGet(req *WareBaseProductGetRequest) ([]*ProductsBase, error) {\n   31  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   32  \tclient.Debug = req.Debug\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go:\n   53  \tWRITE_CUSTOMER_INFO       = \"WriteCustomerInfo\"\n   54  \n   55: \tNEW_WARE_PRODUCTS_BASE_GET = \"NewWareProductsBaseGet\"\n   56  \n   57      SEND_BEAN = \"SendBean\"\n   ..\n  805  func new_ware_products_base_get(session string) (interface{}, error) {\n  806  \tsession = \"557a7ceac8604851baaf50e21564020fytdj\"\n  807: \tproducts := []*api.ProductsBase{}\n  808  \tvar idx int\n  809  \tfor {\n\n5 matches across 3 files\n\n\nSearching 213 files for \"OrderInfo\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/order.interface.go:\n    1  package api\n    2  \n    3: type OrderInfo struct {\n    4  \tOrderId             string           `json:\"orderId,omitempty\" codec:\"orderId,omitempty\"`                         // 订单id\n    5  \tVenderId            string           `json:\"venderId,omitempty\" codec:\"venderId,omitempty\"`                       // 商家id\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/isv/uploadOrderLog.go:\n   26  type UploadOrderLogResponse struct {\n   27  \tErrorResp *ErrorResponnse       `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   28: \tData      *UploadOrderLogResult `json:\"jingdong_isv_uploadOrderInfoLog_responce,omitempty\" codec:\"jingdong_isv_uploadOrderInfoLog_responce,omitempty\"`\n   29  }\n   30  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/order/popOrderEnGet.go:\n   29  \n   30  type OrderDetailInfo struct {\n   31: \tOrderInfo *OrderInfo `json:\"orderInfo,omitempty\" codec:\"orderInfo,omitempty\"`\n   32  \tApiResult *ApiResult `json:\"apiResult,omitempty\" codec:\"apiResult,omitempty\"`\n   33  }\n   34  \n   35  // 输入单个订单id，得到所有相关订单信息\n   36: func PopOrderEnGet(req *PopOrderEnGetRequest) (*OrderInfo, error) {\n   37  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   38  \tclient.Debug = req.Debug\n   ..\n   62  \t}\n   63  \n   64: \treturn response.Data.OrderDetailInfo.OrderInfo, nil\n   65  }\n   66  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/order/popOrderEnSearch.go:\n   30  \tCode string `json:\"code,omitempty\" codec:\"code,omitempty\"`\n   31  \n   32: \tSearchOrderInfo *SearchOrderInfo `json:\"searchorderinfo_result,omitempty\" codec:\"searchorderinfo_result,omitempty\"`\n   33  }\n   34  \n   35: type SearchOrderInfo struct {\n   36: \tOrderInfoList []*OrderInfo `json:\"orderInfoList,omitempty\" codec:\"orderInfoList,omitempty\"`\n   37  \tOrderTotal    int          `json:\"orderTotal,omitempty\" codec:\"orderTotal,omitempty\"`\n   38  \tApiResult     *ApiResult   `json:\"apiResult,omitempty\" codec:\"apiResult,omitempty\"`\n   ..\n   40  \n   41  // 根据条件检索订单信息 （仅适用于SOP、LBP，SOPL类型，FBP类型请调取FBP订单检索 ）\n   42: func PopOrderEnSearch(req *PopOrderEnSearchRequest) ([]*OrderInfo, int, error) {\n   43  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   44  \tclient.Debug = req.Debug\n   ..\n   71  \t\treturn nil, 0, response.ErrorResp\n   72  \t}\n   73: \tif !response.Data.SearchOrderInfo.ApiResult.Success {\n   74: \t\treturn nil, 0, response.Data.SearchOrderInfo.ApiResult\n   75  \t}\n   76  \n   77: \treturn response.Data.SearchOrderInfo.OrderInfoList, response.Data.SearchOrderInfo.OrderTotal, nil\n   78  }\n   79  \n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/jos_test:\n    <binary>\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go:\n  426  \n  427  /*\n  428: func pop_order_en_search(session string) ([]*api.OrderInfo, error) {\n  429  \treq := &api.PopOrderEnSearchRequest{\n  430  \t\tBaseRequest: api.BaseRequest{\n  ...\n  446  */\n  447  \n  448: func pop_order_en_get(session string, orderId uint64) (*api.OrderInfo, error) {\n  449  \treq := &api.PopOrderEnGetRequest{\n  450  \t\tBaseRequest: api.BaseRequest{\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/isv/uploadOrderLog.go:\n   11  // create new request\n   12  func NewIsvUploadOrderLogRequest() (req *IsvUploadOrderLogRequest) {\n   13: \trequest := sdk.Request{MethodName: \"jingdong.isv.uploadOrderInfoLog\", Params: make(map[string]interface{}, 11)}\n   14  \treq = &IsvUploadOrderLogRequest{\n   15  \t\tRequest: &request,\n\n27 matches across 7 files\n\n\nSearching 213 files for \"ApiResult\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/interface.go:\n   30  }\n   31  \n   32: type ApiResult struct {\n   33  \tSuccess        bool   `json:\"success,omitempty\" codec:\"success,omitempty\"`\n   34  \tEnglishErrCode string `json:\"englishErrCode,omitempty\" codec:\"englishErrCode,omitempty\"`\n   ..\n   37  }\n   38  \n   39: func (e ApiResult) Error() string {\n   40  \treturn fmt.Sprintf(\"Success:%v, EnglishErrCode:%v, ChineseErrCode:%v, NumberCode:%v\", e.Success, e.EnglishErrCode, e.ChineseErrCode, e.NumberCode)\n   41  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/order/popOrderEnGet.go:\n   30  type OrderDetailInfo struct {\n   31  \tOrderInfo *OrderInfo `json:\"orderInfo,omitempty\" codec:\"orderInfo,omitempty\"`\n   32: \tApiResult *ApiResult `json:\"apiResult,omitempty\" codec:\"apiResult,omitempty\"`\n   33  }\n   34  \n   ..\n   58  \t\treturn nil, response.ErrorResp\n   59  \t}\n   60: \tif !response.Data.OrderDetailInfo.ApiResult.Success {\n   61: \t\treturn nil, response.Data.OrderDetailInfo.ApiResult\n   62  \t}\n   63  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/order/popOrderEnSearch.go:\n   36  \tOrderInfoList []*OrderInfo `json:\"orderInfoList,omitempty\" codec:\"orderInfoList,omitempty\"`\n   37  \tOrderTotal    int          `json:\"orderTotal,omitempty\" codec:\"orderTotal,omitempty\"`\n   38: \tApiResult     *ApiResult   `json:\"apiResult,omitempty\" codec:\"apiResult,omitempty\"`\n   39  }\n   40  \n   ..\n   71  \t\treturn nil, 0, response.ErrorResp\n   72  \t}\n   73: \tif !response.Data.SearchOrderInfo.ApiResult.Success {\n   74: \t\treturn nil, 0, response.Data.SearchOrderInfo.ApiResult\n   75  \t}\n   76  \n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/jos_test:\n    <binary>\n\n21 matches across 4 files\n\n\nSearching 213 files for \"ErrorResponnse\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/interface.go:\n   20  }\n   21  \n   22: type ErrorResponnse struct {\n   23  \tCode   string `json:\"code,omitempty\" codec:\"code,omitempty\"`\n   24  \tZhDesc string `json:\"zh_desc,omitempty\" codec:\"zh_desc,omitempty\"`\n   ..\n   26  }\n   27  \n   28: func (e ErrorResponnse) Error() string {\n   29  \treturn fmt.Sprintf(\"Code:%v, ZhDesc:%v, EnDesc:%v\", e.Code, e.ZhDesc, e.EnDesc)\n   30  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/QueryForCountByVid.go:\n   14  \n   15  type QueryForCountByVidResponse struct {\n   16:     ErrorResp *ErrorResponnse         `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17      Data      *QueryForCountByVidData `json:\"jingdong_follow_vender_read_queryForCountByVid_responce,omitempty\" codec:\"jingdong_follow_vender_read_queryForCountByVid_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SearchSkuList.go:\n   32  \n   33  type SearchSkuListResponse struct {\n   34: \tErrorResp *ErrorResponnse           `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   35  \tData      *SearchSkuListSubResponse `json:\"jingdong_sku_read_searchSkuList_responce,omitempty\" codec:\"jingdong_sku_read_searchSkuList_responce,omitempty\"`\n   36  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SearchWare4Valid.go:\n   53  \n   54  type SearchWare4ValidResponse struct {\n   55: \tErrorResp *ErrorResponnse              `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   56  \tData      *SearchWare4ValidSubResponse `json:\"jingdong_ware_read_searchWare4Valid_responce,omitempty\" codec:\"jingdong_ware_read_searchWare4Valid_responce,omitempty\"`\n   57  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionAppendPromoUsers.go:\n   23  \n   24  type SellerPromotionAppendPromoUsersResponse struct {\n   25: \tErrorResp *ErrorResponnse                 `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   26  \tData      *JingdongSellerPromotionAppendPromoUsersResponce  `json:\"jingdong_seller_promotion_appendPromoUsers_responce,omitempty\" codec:\"jingdong_seller_promotion_appendPromoUsers_responce,omitempty\"`\n   27  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionCount.go:\n   25  \n   26  type SellerPromotionCountResponse struct {\n   27: \tErrorResp *ErrorResponnse                               `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   28  \tData      *JingdongSellerPromotionCountResponseResponce `json:\"jingdong_seller_promotion_v2_count_responce,omitempty\" codec:\"jingdong_seller_promotion_v2_count_responce,omitempty\"`\n   29  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionCreate.go:\n   56  \n   57  type SellerPromotionCreateResponse struct {\n   58: \tErrorResp *ErrorResponnse                 `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   59  \tData      *JingdongSellerPromotionCreateResponce  `json:\"jingdong_seller_promotion_create_responce,omitempty\" codec:\"jingdong_seller_promotion_create_responce,omitempty\"`\n   60  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionFullCreate.go:\n   44  \n   45  type SellerPromotionFullCreateResponse struct {\n   46: \tErrorResp *ErrorResponnse                        `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   47  \tData      *JingdongSellerPromotionCreateResponce `json:\"jingdong_seller_promotion_create_responce,omitempty\" codec:\"jingdong_seller_promotion_create_responce,omitempty\"`\n   48  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionList.go:\n   20  }\n   21  type SellerPromotionListResponse struct {\n   22: \tErrorResp *ErrorResponnse                `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   23  \tData      *SellerPromotionV2ListResponce `json:\"jingdong_seller_promotion_v2_list_responce,omitempty\" codec:\"jingdong_seller_promotion_v2_list_responce,omitempty\"`\n   24  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionRemovePromoUsers.go:\n   23  \n   24  type SellerPromotionRemovePromoUsersResponse struct {\n   25: \tErrorResp *ErrorResponnse                 `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   26  \tData      *JingdongSellerPromotionRemovePromoUsersResponce  `json:\"jingdong_seller_promotion_removePromoUsers_responce,omitempty\" codec:\"jingdong_seller_promotion_removePromoUsers_responce,omitempty\"`\n   27  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionSkuList.go:\n   19  }\n   20  type SellerPromotionSkuListResponse struct {\n   21: \tErrorResp *ErrorResponnse                 `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   22  \tData      *SellerPromotionV2SkuListResponce  `json:\"jingdong_seller_promotion_v2_sku_list_responce,omitempty\" codec:\"jingdong_seller_promotion_v2_sku_list_responce,omitempty\"`\n   23  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerPromotionUserList.go:\n   18  }\n   19  type SellerPromotionUserListResponse struct {\n   20: \tErrorResp *ErrorResponnse               `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   21  \tData      *JingdongPopMarketRetrievePromotionGetPromoUserListResponce       `json:\"jingdong_pop_market_retrieve_promotion_getPromoUserList_responce,omitempty\" codec:\"jingdong_pop_market_retrieve_promotion_getPromoUserList_responce,omitempty\"`\n   22  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SellerVenderInfoGet.go:\n   14  }\n   15  type SellerVenderInfoGetResponse struct {\n   16: \tErrorResp *ErrorResponnse                 `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *SellerVenderInfoGetSubResponse `json:\"jingdong_seller_vender_info_get_responce,omitempty\" codec:\"jingdong_seller_vender_info_get_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/SendBean.go:\n   24  \n   25  type SendBeanResponse struct {\n   26: \tErrorResp *ErrorResponnse `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   27  \tData      *SendBeanData `json:\"jingdong_pop_bean_sendBean_responce,omitempty\" codec:\"jingdong_pop_bean_sendBean_responce,omitempty\"`\n   28  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/TokenToPin.go:\n   16  \n   17  type TokenToPinResponse struct {\n   18: \tErrorResp *ErrorResponnse `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *TokenToPinData `json:\"jingdong_jos_token_source_to_pin_responce,omitempty\" codec:\"jingdong_jos_token_source_to_pin_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/UnionQueryOrderList.go:\n   20  \n   21  type UnionQueryOrderListResponse struct {\n   22: \tErrorResp *ErrorResponnse          `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   23  \tData      *UnionQueryOrderListData `json:\"jingdong_sku_read_findSkuById_responce,omitempty\" codec:\"jingdong_sku_read_findSkuById_responce,omitempty\"`\n   24  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/Vender.common.query.go:\n   18  \n   19  type VenderCommonQueryResponse struct {\n   20: \tErrorResp *ErrorResponnse             `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   21  \tData      *VenderCommonQuerySubResponse `json:\"jingdong_data_vender_common_query_responce,omitempty\" codec:\"jingdong_data_vender_common_query_responce,omitempty\"`\n   22  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/vender.getCustomerBasicInfo.go:\n   16  \n   17  type GetCustomerBasicInfoResponse struct {\n   18:     ErrorResp *ErrorResponnse           `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19      Data      *GetCustomerBasicInfoData `json:\"jingdong_pop_vender_getCustomerBasicInfo_responce,omitempty\" codec:\"jingdong_pop_vender_getCustomerBasicInfo_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/vender.getMemberLevel.go:\n   15  \n   16  type GetMemberLevelResponse struct {\n   17: \tErrorResp *ErrorResponnse     `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   18  \tData      *GetMemberLevelData `json:\"jingdong_pop_vender_getMemberLevel_responce,omitempty\" codec:\"jingdong_pop_vender_getMemberLevel_responce,omitempty\"`\n   19  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/vender.getVenderLevelRule.go:\n   14  \n   15  type GetVenderLevelRuleResponse struct {\n   16: \tErrorResp *ErrorResponnse            `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *GetVenderLevelRuleData `json:\"jingdong_pop_vender_getVenderLevelRule_responce,omitempty\" codec:\"jingdong_pop_vender_getVenderLevelRule_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/vender.GetVenderStatus.go:\n   14  \n   15  type GetVenderStatusResponse struct {\n   16: \tErrorResp *ErrorResponnse      `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *GetVenderStatusData `json:\"jingdong_pop_vender_getVenderStatus_responce,omitempty\" codec:\"jingdong_pop_vender_getVenderStatus_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/VenderShopQuery.go:\n   13  \n   14  type VenderShopQueryResponse struct {\n   15: \tErrorResp *ErrorResponnse             `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   16  \tData      *VenderShopQuerySubResponse `json:\"jingdong_vender_shop_query_responce,omitempty\" codec:\"jingdong_vender_shop_query_responce,omitempty\"`\n   17  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/VenderSyncBind.go:\n   28  \n   29  type VenderSyncBindResponse struct {\n   30:     ErrorResp *ErrorResponnse     `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   31      Data      *VenderSyncBindData `json:\"jingdong_pop_vender_syncBind_responce,omitempty\" codec:\"jingdong_pop_vender_syncBind_responce,omitempty\"`\n   32  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/WarePriceGet.go:\n   16  \n   17  type WarePriceGetResponse struct {\n   18: \tErrorResp *ErrorResponnse   `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *PriceChangesData `json:\"jingdong_ware_price_get_responce,omitempty\" codec:\"jingdong_ware_price_get_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/WareSkusGet.go:\n   17  \n   18  type WareSkusGetResponse struct {\n   19: \tErrorResp *ErrorResponnse         `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   20  \tData      *WareSkusGetSubResponse `json:\"ware_skus_get_response,omitempty\" codec:\"ware_skus_get_response,omitempty\"`\n   21  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/account/getAccountInfo.go:\n   18  \n   19  type GetAccountInfoResponse struct {\n   20: \tErrorResp *ErrorResponnse     `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   21  \tData      *GetAccountInfoData `json:\"jingdong_pop_account_getAccountInfo_responce,omitempty\" codec:\"jingdong_pop_account_getAccountInfo_responce,omitempty\"`\n   22  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/asc/serviceAndRefundView.go:\n   22  \n   23  type ServiceAndRefundViewResponse struct {\n   24: \tErrorResp *ErrorResponnse           `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   25  \tData      *ServiceAndRefundViewData `json:\"jingdong_asc_serviceAndRefund_view_responce,omitempty\" codec:\"jingdong_asc_serviceAndRefund_view_responce,omitempty\"`\n   26  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/brand/client/queryBrandsIdByVenderId.go:\n   14  \n   15  type QueryBrandsIdByVenderIdResponse struct {\n   16: \tErrorResp *ErrorResponnse              `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *QueryBrandsIdByVenderIdData `json:\"jingdong_pop_brand_client_queryBrandsIdByVenderId_response,omitempty\" codec:\"jingdong_pop_brand_client_queryBrandsIdByVenderId_response,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/category/findCateById.go:\n   17  \n   18  type FindCateByIdResponse struct {\n   19: \tErrorResp *ErrorResponnse   `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   20  \tData      *FindCateByIdData `json:\"jingdong_category_read_findById_response,omitempty\" codec:\"jingdong_category_read_findById_response,omitempty\"`\n   21  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/category/findCateByPid.go:\n   18  \n   19  type FindCateByPidResponse struct {\n   20: \tErrorResp *ErrorResponnse    `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   21  \tData      *FindCateByPidData `json:\"jingdong_category_read_findByPId_responce,omitempty\" codec:\"jingdong_category_read_findByPId_responce,omitempty\"`\n   22  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/deleteCustomerOpenInfo.go:\n   14  \n   15  type DeleteCustomerOpenInfoResponse struct {\n   16: \tErrorResp *ErrorResponnse             `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *DeleteCustomerOpenInfoData `json:\"jingdong_crm_deleteCustomerOpenInfo_responce,omitempty\" codec:\"jingdong_crm_deleteCustomerOpenInfo_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/getCustomerPoints.go:\n   16  \n   17  type GetCustomerPointsResponse struct {\n   18: \tErrorResp *ErrorResponnse        `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *GetCustomerPointsData `json:\"jingdong_pop_crm_getCustomerPoints_responce\",omitempty\" codec:\"jingdong_pop_crm_getCustomerPoints_responce\",omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/getGrades.go:\n   14  \n   15  type GetGradesResponse struct {\n   16: \tErrorResp *ErrorResponnse `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *GetGradesData  `json:\"jingdong_crm_grade_get_responce,omitempty\" codec:\"jingdong_crm_grade_get_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/getMemberInVender.go:\n   15  \n   16  type GetMemberInVenderResponse struct {\n   17: \tErrorResp *ErrorResponnse        `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   18  \tData      *GetMemberInVenderData `json:\"jingdong_pop_crm_getMemberInVender_responce\",omitempty\" codec:\"jingdong_pop_crm_getMemberInVender_responce\",omitempty\"`\n   19  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/getMemeberDiscount.go:\n   14  \n   15  type GetMemeberDiscountResponse struct {\n   16: \tErrorResp *ErrorResponnse         `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *GetMemeberDiscountData `json:\"jingdong_pop_crm_getMemeberDiscount_responce,omitempty\" codec:\"jingdong_pop_crm_getMemeberDiscount_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/getPointsDetail.go:\n   24  \n   25  type GetPointsDetailResponse struct {\n   26: \tErrorResp *ErrorResponnse      `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   27  \tData      *GetPointsDetailData `json:\"jingdong_pop_crm_getPointsDetail_responce\",omitempty\" codec:\"jingdong_pop_crm_getPointsDetail_responce\",omitempty\"`\n   28  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/getShopRuleType.go:\n   14  \n   15  type GetShopRuleTypeResponse struct {\n   16: \tErrorResp *ErrorResponnse      `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *GetShopRuleTypeData `json:\"jingdong_pop_crm_getShopRuleType_responce,omitempty\" codec:\"jingdong_pop_crm_getShopRuleType_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/isPointsEnabled.go:\n   14  \n   15  type IsPointsEnabledResponse struct {\n   16: \tErrorResp *ErrorResponnse      `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *IsPointsEnabledData `json:\"jingdong_pop_crm_isPointsEnabled_responce,omitempty\" codec:\"jingdong_pop_crm_isPointsEnabled_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/memberScan.go:\n   25  \n   26  type MemberScanResponse struct {\n   27: \tErrorResp *ErrorResponnse `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   28  \tData      *MemberScanData `json:\"jingdong_crm_member_scan_responce\",omitempty\" codec:\"jingdong_crm_member_scan_responce\",omitempty\"`\n   29  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/memberSearchNew.go:\n   25  \n   26  type MemberSearchNewResponse struct {\n   27: \tErrorResp *ErrorResponnse      `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   28  \tData      *MemberSearchNewData `json:\"jingdong_crm_member_searchNew_responce\",omitempty\" codec:\"jingdong_crm_member_searchNew_responce\",omitempty\"`\n   29  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/sendPoints.go:\n   35  \n   36  type SendPointsResponse struct {\n   37: \tErrorResp *ErrorResponnse `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   38  \tData      *SendPointsData `json:\"jingdong_pop_crm_sendPoints_responce\",omitempty\" codec:\"jingdong_pop_crm_sendPoints_responce\",omitempty\"`\n   39  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/setMemberGrade.go:\n   16  \n   17  type SetMemberGradeResponse struct {\n   18: \tErrorResp *ErrorResponnse     `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *SetMemberGradeData `json:\"jingdong_pop_crm_setMemberGrade_responce,omitempty\" codec:\"jingdong_pop_crm_setMemberGrade_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/setShopLevelRule.go:\n   15  \n   16  type SetShopLevelRuleResponse struct {\n   17: \tErrorResp *ErrorResponnse       `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   18  \tData      *SetShopLevelRuleData `json:\"jingdong_pop_crm_setShopLevelRule_responce,omitempty\" codec:\"jingdong_pop_crm_setShopLevelRule_responce,omitempty\"`\n   19  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/crm/writeCustomerInfo.go:\n   16  \n   17  type WriteCustomerInfoResponse struct {\n   18: \tErrorResp *ErrorResponnse        `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *WriteCustomerInfoData `json:\"jingdong_crm_writeCustomerInfo_responce,omitempty\" codec:\"jingdong_crm_writeCustomerInfo_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/balanceGet.go:\n   15  \n   16  type BalanceGetResponse struct {\n   17: \tErrorResp *ErrorResponnse `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   18  \tData      *BalanceData    `json:\"jingdong_dsp_balance_get_responce,omitempty\" codec:\"jingdong_dsp_balance_get_responce,omitempty\"`\n   19  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/categorypricesuggestQuery.go:\n   16  \n   17  type CategorypricesuggestQueryResponse struct {\n   18: \tErrorResp *ErrorResponnse                `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *CategorypricesuggestQueryData `json:\"jingdong_dsp_adkckeyword_categorypricesuggest_query_responce,omitempty\" codec:\"jingdong_dsp_adkckeyword_categorypricesuggest_query_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/keywordDelete.go:\n   16  \n   17  type KeywordDeleteResponse struct {\n   18: \tErrorResp *ErrorResponnse          `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *RecommendkeywordGetData `json:\"jingdong_dsp_adkckeyword_keyword_delete_responce,omitempty\" codec:\"jingdong_dsp_adkckeyword_keyword_delete_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/keywordpricesuggestQuery.go:\n   16  \n   17  type KeywordpricesuggestQueryResponse struct {\n   18: \tErrorResp *ErrorResponnse               `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *KeywordpricesuggestQueryData `json:\"jingdong_dsp_adkckeyword_keywordpricesuggest_query_responce,omitempty\" codec:\"jingdong_dsp_adkckeyword_keywordpricesuggest_query_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/newkeywordInsert.go:\n   18  \n   19  type KeywordInsertResponse struct {\n   20: \tErrorResp *ErrorResponnse          `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   21  \tData      *RecommendkeywordGetData `json:\"jingdong_dsp_adkckeyword_newkeyword_insert_responce,omitempty\" codec:\"jingdong_dsp_adkckeyword_newkeyword_insert_responce,omitempty\"`\n   22  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/recommendkeywordGet.go:\n   19  \n   20  type RecommendkeywordGetResponse struct {\n   21: \tErrorResp *ErrorResponnse          `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   22  \tData      *RecommendkeywordGetData `json:\"jingdong_dsp_adkckeyword_recommendkeyword_get_responce,omitempty\" codec:\"jingdong_dsp_adkckeyword_recommendkeyword_get_responce,omitempty\"`\n   23  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/updateKeyWords.go:\n   19  \n   20  type UpdateKeyWordsResponse struct {\n   21: \tErrorResp *ErrorResponnse     `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   22  \tData      *UpdateKeyWordsData `json:\"jingdong_dsp_adkckeyword_updateKeyWords_responce,omitempty\" codec:\"jingdong_dsp_adkckeyword_updateKeyWords_responce,omitempty\"`\n   23  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkcunit/adgroupList.go:\n   17  \n   18  type AdkcunitAdgroupListResponse struct {\n   19: \tErrorResp *ErrorResponnse          `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   20  \tData      *AdkcunitAdgroupListData `json:\"jingdong_dsp_adkcunit_adgroup_list_responce,omitempty\" codec:\"jingdong_dsp_adkcunit_adgroup_list_responce,omitempty\"`\n   21  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkcunit/statusUpdate.go:\n   16  \n   17  type AdkcunitStatusUpdateResponse struct {\n   18: \tErrorResp *ErrorResponnse           `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *AdkcunitStatusUpdateData `json:\"jingdong_dsp_adkcunit_status_update_responce,omitempty\" codec:\"jingdong_dsp_adkcunit_status_update_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/ad/queryAdListByParam.go:\n   17  \n   18  type AdQueryAdListByParamResponse struct {\n   19: \tErrorResp *ErrorResponnse           `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   20  \tData      *AdQueryAdListByParamData `json:\"jingdong_dsp_kc_ad_queryAdListByParam_responce,omitempty\" codec:\"jingdong_dsp_kc_ad_queryAdListByParam_responce,omitempty\"`\n   21  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/ad/updatestatus.go:\n   16  \n   17  type AdUpdateStatusResponse struct {\n   18: \tErrorResp *ErrorResponnse     `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *AdUpdateStatusData `json:\"jingdong_dsp_kc_ad_updatestatus_response,omitempty\" codec:\"jingdong_dsp_kc_ad_updatestatus_response,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/add.go:\n   16  \n   17  type AddResponse struct {\n   18: \tErrorResp *ErrorResponnse `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *AddData        `json:\"jingdong_dsp_kc_campainShop_add_responce,omitempty\" codec:\"jingdong_dsp_kc_campainShop_add_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/daybudgetUpdate.go:\n   16  \n   17  type DaybudgetUpdateResponse struct {\n   18: \tErrorResp *ErrorResponnse      `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *DaybudgetUpdateData `json:\"jingdong_dsp_kc_campain_daybudget_update_responce,omitempty\" codec:\"jingdong_dsp_kc_campain_daybudget_update_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/delete.go:\n   15  \n   16  type DeleteResponse struct {\n   17: \tErrorResp *ErrorResponnse `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   18  \tData      *DeleteData     `json:\"jingdong_dsp_kc_campain_delete_responce,omitempty\" codec:\"jingdong_dsp_kc_campain_delete_responce,omitempty\"`\n   19  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/get.go:\n   15  \n   16  type GetResponse struct {\n   17: \tErrorResp *ErrorResponnse `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   18  \tData      *GetData        `json:\"jingdong_dsp_kc_campain_get_responce,omitempty\" codec:\"jingdong_dsp_kc_campain_get_responce,omitempty\"`\n   19  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/list.go:\n   16  \n   17  type ListResponse struct {\n   18: \tErrorResp *ErrorResponnse `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *ListData       `json:\"jingdong_dsp_kc_campain_list_responce,omitempty\" codec:\"jingdong_dsp_kc_campain_list_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/statusUpdate.go:\n   16  \n   17  type StatusUpdateResponse struct {\n   18: \tErrorResp *ErrorResponnse   `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *StatusUpdateData `json:\"jingdong_dsp_kc_campain_status_update_responce,omitempty\" codec:\"jingdong_dsp_kc_campain_status_update_response,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/report/adgroupkeywordQuery.go:\n   28  \n   29  type AdgroupkeywordQueryResponse struct {\n   30: \tErrorResp *ErrorResponnse          `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   31  \tData      *AdgroupkeywordQueryData `json:\"jingdong_dsp_report_adgroupkeyword_query_responce,omitempty\" codec:\"jingdong_dsp_report_adgroupkeyword_query_responce,omitempty\"`\n   32  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/report/queryAccountReport.go:\n   25  \n   26  type QueryAccountReportResponse struct {\n   27: \tErrorResp *ErrorResponnse         `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   28  \tData      *QueryAccountReportData `json:\"jingdong_dsp_report_queryAccountReport_responce,omitempty\" codec:\"jingdong_dsp_report_queryAccountReport_responce,omitempty\"`\n   29  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/report/queryCampDailySum.go:\n   27  \n   28  type QueryCampDailySumResponse struct {\n   29: \tErrorResp *ErrorResponnse        `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   30  \tData      *QueryCampDailySumData `json:\"jingdong_dsp_report_queryCampDailySum_responce,omitempty\" codec:\"jingdong_dsp_report_queryCampDailySum_responce,omitempty\"`\n   31  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/report/queryGroupDailySum.go:\n   27  \n   28  type QueryGroupDailySumResponse struct {\n   29: \tErrorResp *ErrorResponnse         `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   30  \tData      *QueryGroupDailySumData `json:\"jingdong_dsp_report_queryGroupDailySum_responce,omitempty\" codec:\"jingdong_dsp_report_queryGroupDailySum_responce,omitempty\"`\n   31  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/follow/followByPinAndVid.go:\n   17  \n   18  type FollowByPinAndVidResponse struct {\n   19: \tErrorResp *ErrorResponnse        `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   20  \tData      *FollowByPinAndVidData `json:\"jingdong_follow_vender_write_followByPinAndVid_responce,omitempty\" codec:\"jingdong_follow_vender_write_followByPinAndVid_responce,omitempty\"`\n   21  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/follow/followProductComplexWriteFollow.go:\n   16  \n   17  type FollowProductResponse struct {\n   18: \tErrorResp *ErrorResponnse    `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *FollowProductData `json:\"jingdong_follow_product_complex_write_follow_responce,omitempty\" codec:\"jingdong_follow_product_complex_write_follow_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/follow/IsFollowByPinAndVid.go:\n   16  \n   17  type IsFollowByPinAndVidResponse struct {\n   18: \tErrorResp *ErrorResponnse          `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *IsFollowByPinAndVidData `json:\"jingdong_follow_vender_read_isFollowByPinAndVid_responce,omitempty\" codec:\"jingdong_follow_vender_read_isFollowByPinAndVid_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/fw/orderListwithpage.go:\n   18  \n   19  type OrderListWithPageResponse struct {\n   20: \tErrorResp *ErrorResponnse        `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   21  \tData      *OrderListWithPageData `json:\"jingdong_pop_fw_order_listwithpage_responce,omitempty\" codec:\"jingdong_pop_fw_order_listwithpage_responce,omitempty\"`\n   22  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/interact/center/createGiftActivity.go:\n   34  \n   35  type CreateGiftActivityResponse struct {\n   36: \tErrorResp *ErrorResponnse         `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   37  \tData      *CreateGiftActivityData `json:\"jingdong_interact_center_api_service_write_createGiftActivity_responce,omitempty\" codec:\"jingdong_interact_center_api_service_write_createGiftActivity_responce,omitempty\"`\n   38  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/interact/center/findCollectInfo.go:\n   26  \n   27  type FindCollectInfoResponse struct {\n   28: \tErrorResp *ErrorResponnse      `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   29  \tData      *FindCollectInfoData `json:\"jingdong_interact_center_api_service_read_findCollectInfo_responce,omitempty\" codec:\"jingdong_interact_center_api_service_read_findCollectInfo_responce,omitempty\"`\n   30  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/interact/center/writeCollectCoupon.go:\n   26  \n   27  type WriteCollectCouponResponse struct {\n   28: \tErrorResp *ErrorResponnse         `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   29  \tData      *WriteCollectCouponData `json:\"jingdong_interact_center_api_service_write_collectCoupon_responce,omitempty\" codec:\"jingdong_interact_center_api_service_write_collectCoupon_responce,omitempty\"`\n   30  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/isv/uploadDBOperationLog.go:\n   23  \n   24  type UploadDBOperationLogResponse struct {\n   25: \tErrorResp *ErrorResponnse                `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   26  \tData      *IsvUploadDBOperationLogResult `json:\"jingdong_isv_uploadDBOperationLog_responce,omitempty\" codec:\"jingdong_isv_uploadDBOperationLog_responce,omitempty\"`\n   27  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/isv/uploadLoginLog.go:\n   23  \n   24  type UploadLoginLogResponse struct {\n   25: \tErrorResp *ErrorResponnse       `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   26  \tData      *UploadLoginLogResult `json:\"jingdong_isv_uploadLoginLog_responce,omitempty\" codec:\"jingdong_isv_uploadLoginLog_responce,omitempty\"`\n   27  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/isv/uploadOrderLog.go:\n   25  \n   26  type UploadOrderLogResponse struct {\n   27: \tErrorResp *ErrorResponnse       `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   28  \tData      *UploadOrderLogResult `json:\"jingdong_isv_uploadOrderInfoLog_responce,omitempty\" codec:\"jingdong_isv_uploadOrderInfoLog_responce,omitempty\"`\n   29  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/jm/getEncryptPinNew.go:\n   16  \n   17  type GetEncryptPinNewResponse struct {\n   18: \tErrorResp *ErrorResponnse       `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *GetEncryptPinNewData `json:\"jingdong_pop_jm_center_user_getEncryptPinNew_responce\",omitempty\" codec:\"jingdong_pop_jm_center_user_getEncryptPinNew_responce\",omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/jm/getJmUserBaseInfoByEncryPin.go:\n   17  \n   18  type GetJmUserBaseInfoByEncryPinResponse struct {\n   19: \tErrorResp *ErrorResponnse                         `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   20  \tData      *GetJmUserBaseInfoByEncryPinSubResponse `json:\"jingdong_pop_jm_getUserBaseInfoByPin_responce,omitempty\" codec:\"jingdong_pop_jm_getUserBaseInfoByPin_responce,omitempty\"`\n   21  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/jm/getUserBaseInfoByPin.go:\n   17  \n   18  type GetUserBaseInfoByPinResponse struct {\n   19: \tErrorResp *ErrorResponnse                  `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   20  \tData      *GetUserBaseInfoByPinSubResponse `json:\"jingdong_vender_shop_query_responce,omitempty\" codec:\"jingdong_vender_shop_query_responce,omitempty\"`\n   21  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/jzone/addCartItemByPin.go:\n   17  \n   18  type AddCartItemByPinResponse struct {\n   19: \tErrorResp *ErrorResponnse       `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   20  \tData      *AddCartItemByPinData `json:\"jingdong_jzone_addCartItemByPin_responce,omitempty\" codec:\"jingdong_jzone_addCartItemByPin_responce,omitempty\"`\n   21  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/order/popOrderEnGet.go:\n   19  \n   20  type PopOrderEnGetResponse struct {\n   21: \tErrorResp *ErrorResponnse    `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   22  \tData      *PopOrderEnGetData `json:\"jingdong_pop_order_enGet_responce,omitempty\" codec:\"jingdong_pop_order_enGet_responce,omitempty\"`\n   23  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/order/popOrderEnSearch.go:\n   23  \n   24  type PopOrderEnSearchResponse struct {\n   25: \tErrorResp *ErrorResponnse       `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   26  \tData      *PopOrderEnSearchData `json:\"jingdong_pop_order_enSearch_responce,omitempty\" codec:\"jingdong_pop_order_enSearch_responce,omitempty\"`\n   27  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/plan/addBeanPlan.go:\n   33  \n   34  type AddBeanPlanResponse struct {\n   35: \tErrorResp *ErrorResponnse  `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   36  \tData      *AddBeanPlanData `json:\"jingdong_pop_plan_addBeanPlan_responce,omitempty\" codec:\"jingdong_pop_plan_addBeanPlan_responce,omitempty\"`\n   37  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/points/batchInsertOrUpdateRule.go:\n   17  \n   18  type BatchInsertOrUpdateRuleResponse struct {\n   19: \tErrorResp *ErrorResponnse              `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   20  \tData      *BatchInsertOrUpdateRuleData `json:\"jingdong_points_jos_batchInsertOrUpdateRule_responce,omitempty\" codec:\"jingdong_points_jos_batchInsertOrUpdateRule_responce,omitempty\"`\n   21  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/points/getCouponInfo.go:\n   14  \n   15  type GetCouponInfoResponse struct {\n   16: \tErrorResp *ErrorResponnse    `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *GetCouponInfoData `json:\"jingdong_points_jos_getCouponInfo_responce,omitempty\" codec:\"jingdong_points_jos_getCouponInfo_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/points/getPointsExchangeGiftList.go:\n   14  \n   15  type GetPointsExchangeGiftListResponse struct {\n   16: \tErrorResp *ErrorResponnse                `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *GetPointsExchangeGiftListData `json:\"jingdong_points_jos_getPointsExchangeGiftList_responce,omitempty\" codec:\"jingdong_points_jos_getPointsExchangeGiftList_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/points/getPointsRule.go:\n   14  \n   15  type GetPointsRuleResponse struct {\n   16: \tErrorResp *ErrorResponnse    `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   17  \tData      *GetPointsRuleData `json:\"jingdong_points_jos_getPointsRule_responce,omitempty\" codec:\"jingdong_points_jos_getPointsRule_responce,omitempty\"`\n   18  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/points/queryGiftSkuByExchangeGiftId.go:\n   15  \n   16  type QueryGiftSkuByExchangeGiftIdResponse struct {\n   17: \tErrorResp *ErrorResponnse                   `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   18  \tData      *QueryGiftSkuByExchangeGiftIdData `json:\"jingdong_points_jos_queryGiftSkuByExchangeGiftId_responce,omitempty\" codec:\"jingdong_points_jos_queryGiftSkuByExchangeGiftId_responce,omitempty\"`\n   19  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/points/sendPoints.go:\n   19  \n   20  type JosSendPointsResponse struct {\n   21: \tErrorResp *ErrorResponnse    `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   22  \tData      *JosSendPointsData `json:\"jingdong_points_jos_sendPoints_responce,omitempty\" codec:\"jingdong_points_jos_sendPoints_responce,omitempty\"`\n   23  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/sku/findSkuById.go:\n   18  \n   19  type FindSkuByIdResponse struct {\n   20: \tErrorResp *ErrorResponnse  `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   21  \tData      *FindSkuByIdData `json:\"jingdong_sku_read_findSkuById_responce,omitempty\" codec:\"jingdong_sku_read_findSkuById_responce,omitempty\"`\n   22  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/user/getUserBaseInfoByEncryPin.go:\n   17  \n   18  type GetUserBaseInfoByEncryPinResponse struct {\n   19: \tErrorResp *ErrorResponnse                       `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   20  \tData      *GetUserBaseInfoByEncryPinSubResponse `json:\"jingdong_jos_get_user_base_info_responce,omitempty\" codec:\"jingdong_jos_get_user_base_info_responce,omitempty\"`\n   21  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware/baseProductGet.go:\n   18  \n   19  type WareBaseProductGetResponse struct {\n   20: \tErrorResp *ErrorResponnse         `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   21  \tData      *WareBaseProductGetData `json:\"jingdong_new_ware_baseproduct_get_responce,omitempty\" codec:\"jingdong_new_ware_baseproduct_get_responce,omitempty\"`\n   22  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware/findWareById.go:\n   17  \n   18  type FindWareByIdResponse struct {\n   19: \tErrorResp *ErrorResponnse   `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   20  \tData      *FindWareByIdData `json:\"jingdong_ware_read_findWareById_responce,omitempty\" codec:\"jingdong_ware_read_findWareById_responce,omitempty\"`\n   21  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware/mobileBigFieldGet.go:\n   16  \n   17  type MobileBigFieldResponse struct {\n   18: \tErrorResp *ErrorResponnse     `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *MobileBigFieldData `json:\"jingdong_new_ware_mobilebigfield_get_responce,omitempty\" codec:\"jingdong_new_ware_mobilebigfield_get_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware/venderSkusQuery.go:\n   15  \n   16  type VenderSkusQueryResponse struct {\n   17: \tErrorResp *ErrorResponnse      `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   18  \tData      *VenderSkusQueryData `json:\"jingdong_new_ware_vender_skus_query_responce,omitempty\" codec:\"jingdong_new_ware_vender_skus_query_responce,omitempty\"`\n   19  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/wxsq/mjqj/link/getOpenLink.go:\n   16  \n   17  type GetOpenLinkResponse struct {\n   18: \tErrorResp *ErrorResponnse  `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   19  \tData      *GetOpenLinkData `json:\"jingdong_new_ware_mobilebigfield_get_responce,omitempty\" codec:\"jingdong_new_ware_mobilebigfield_get_responce,omitempty\"`\n   20  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/jos_test:\n    <binary>\n\n106 matches across 96 files\n\n\nSearching 213 files for \"Paginator\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkcunit/adgroupList.go:\n   34  \n   35  type AdkcunitAdgroupListValue struct {\n   36: \tPaginator *Paginator      `json:\"paginator,omitempty\" codec:\"paginator,omitempty\"` // 分页组件\n   37  \tDatas     []*ADGroupQuery `json:\"datas,omitempty\" codec:\"datas,omitempty\"`\n   38  }\n   ..\n   85  \t}\n   86  \n   87: \treturn response.Data.Result.Value.Datas, response.Data.Result.Value.Paginator.Items, nil\n   88  \n   89  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/ad/queryAdListByParam.go:\n   33  \n   34  type AdQueryAdListByParamValues struct {\n   35: \tPaginator *Paginator    `json:\"paginator,omitempty\" codec:\"paginator,omitempty\"`\n   36  \tDatas     []*DspADQuery `json:\"datas,omitempty\" codec:\"datas,omitempty\"`\n   37  }\n   ..\n   80  \t}\n   81  \n   82: \treturn response.Data.Result.Value.Datas, response.Data.Result.Value.Paginator.Items, nil\n   83  \n   84  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/list.go:\n   31  }\n   32  \n   33: type Paginator struct {\n   34  \tPageNum  int `json:\"pageNum,omitempty\" codec:\"pageNum,omitempty\"`\n   35  \tItems    int `json:\"items,omitempty\" codec:\"items,omitempty\"`\n   ..\n   39  type ListValue struct {\n   40  \tDatas     []*Query   `json:\"datas,omitempty\" codec:\"datas,omitempty\"`\n   41: \tPaginator *Paginator `json:\"paginator,omitempty\" codec:\"paginator,omitempty\"`\n   42  }\n   43  \n   ..\n   84  \t}\n   85  \n   86: \treturn response.Data.Result.Value.Datas, response.Data.Result.Value.Paginator.Items, nil\n   87  \n   88  }\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/report/queryAccountReport.go:\n   45  \tDatas []*AccountReport `json:\"datas\" codec:\"datas\"`\n   46  \t// Ext          *DspAccountReport    `json:\"ext\" codec:\"ext\"`\n   47: \t// Paginator    string               `json:\"paginator\" codec:\"paginator\"`\n   48  }\n   49  \n\n11 matches across 4 files\n\n\nSearching 214 files for \"PointsRule\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/shop.interface.go:\n   97  }\n   98  \n   99: type PointsRule struct {\n  100  \tRuleId   string  `json:\"ruleId\"`\n  101  \tVenderId int64   `json:\"venderId\"`\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/points/getPointsRule.go:\n   10  )\n   11  \n   12: type GetPointsRuleRequest struct {\n   13  \tapi.BaseRequest\n   14  }\n   15  \n   16: type GetPointsRuleResponse struct {\n   17  \tErrorResp *api.ErrorResponnse    `json:\"error_response,omitempty\" codec:\"error_response,omitempty\"`\n   18: \tData      *GetPointsRuleData `json:\"jingdong_points_jos_getPointsRule_responce,omitempty\" codec:\"jingdong_points_jos_getPointsRule_responce,omitempty\"`\n   19  }\n   20  \n   21: type GetPointsRuleData struct {\n   22  \tCode string `json:\"code,omitempty\" codec:\"code,omitempty\"`\n   23  \tJsfResult *JsfResult `json:\"jsfResult,omitempty\" codec:\"jsfResult,omitempty\"`\n   ..\n   25  \n   26  type JsfResult struct {\n   27: \tResult []*PointsRule `json:\"jsfResult,omitempty\" codec:\"jsfResult,omitempty\"`\n   28  \tCode   string        `json:\"code,omitempty\" codec:\"code,omitempty\"`\n   29  \tDesc   string        `json:\"desc,omitempty\" codec:\"desc,omitempty\"`\n   30  }\n   31  \n   32: func GetPointsRule(req *GetPointsRuleRequest) ([]*PointsRule, error) {\n   33  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   34  \tclient.Debug = req.Debug\n   35: \tr := points.NewGetPointsRuleRequest()\n   36  \tresult, err := client.Execute(r.Request, req.Session)\n   37  \tif err != nil {\n   ..\n   42  \t}\n   43  \n   44: \tvar response GetPointsRuleResponse\n   45  \terr = ljson.Unmarshal(result, &response)\n   46  \tif err != nil {\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/points/getPointsRule.go:\n    3  import \"github.com/XiBao/jos/sdk\"\n    4  \n    5: type GetPointsRuleRequest struct {\n    6  \tRequest *sdk.Request\n    7  }\n    8  \n    9  // create new request\n   10: func NewGetPointsRuleRequest() (req *GetUserBaseInfoByPinRequest) {\n   11: \trequest := sdk.Request{MethodName: \"jingdong.points.jos.getPointsRule\", Params: nil}\n   12  \treq = &GetUserBaseInfoByPinRequest{\n   13  \t\tRequest: &request,\n\n16 matches across 3 files\n\n\nSearching 215 files for \"VenderInfo\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/GetShopVenderInfo.go:\n    5  )\n    6  \n    7: type GetShopVenderInfoRequest struct {\n    8  \tBaseRequest\n    9  }\n   10  \n   11: func GetShopVenderInfo(req *GetShopVenderInfoRequest) (*ShopInfo, error) {\n   12  \tshop, err := VenderShopQuery(&VenderShopQueryRequest{\n   13  \t\tBaseRequest: BaseRequest{\n   ..\n   21  \t\treturn nil, err\n   22  \t}\n   23: \tvender, err := SellerVenderInfoGet(&SellerVenderInfoGetRequest{\n   24  \t\tBaseRequest: BaseRequest{\n   25  \t\t\tSession:  req.Session,\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/shop.interface.go:\n   89  }\n   90  \n   91: type VenderInfo struct {\n   92  \tVenderId uint64 `json:\"vender_id,omitempty\" codec:\"vender_id,omitempty\"`         // 商家编号\n   93  \tShopId   uint64 `json:\"shop_id,omitempty\" codec:\"shop_id,omitempty\"`             // 商家类型: 0：SOP 1：FBP 2：LBP 5：SOPL\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/seller/vender/infoGet.go:\n   21  \tCode       string      `json:\"code,omitempty\" codec:\"code,omitempty\"`\n   22  \tErrorDesc  string      `json:\"error_description,omitempty\" codec:\"error_description,omitempty\"`\n   23: \tVenderInfo *VenderInfo `json:\"vender_info_result,omitempty\" codec:\"vender_info_result,omitempty\"`\n   24  }\n   25  \n   26  // 店铺信息查询\n   27: func InfoGet(req *InfoGetRequest) (*VenderInfo, error) {\n   28  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   29  \tclient.Debug = req.Debug\n   30: \tr := vender.NewSellerVenderInfoGetRequest()\n   31  \tresult, err := client.Execute(r.Request, req.Session)\n   32  \tif err != nil {\n   ..\n   50  \t}\n   51  \n   52: \treturn response.Data.VenderInfo, nil\n   53  }\n   54  \n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/jos_test:\n    <binary>\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go:\n   18  \n   19  const (\n   20: \tGET_SHOP_VENDER_INFO = \"GetShopVenderInfo\"\n   21  \tPOP_ORDER_EN_SEARCH  = \"PopOrderEnSearch\"\n   22  \tPOP_ORDER_EN_GET     = \"PopOrderEnGet\"\n   ..\n  415  \n  416  func get_shop_vender_info(session string) (*api.ShopInfo, error) {\n  417: \treq := &api.GetShopVenderInfoRequest{\n  418  \t\tBaseRequest: api.BaseRequest{\n  419  \t\t\tSession:  session,\n  ...\n  422  \t\t},\n  423  \t}\n  424: \treturn api.GetShopVenderInfo(req)\n  425  }\n  426  \n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/seller/vender/infoGet.go:\n    5  )\n    6  \n    7: type SellerVenderInfoGetRequest struct {\n    8  \tRequest *sdk.Request\n    9  }\n   10  \n   11  // create new request\n   12: func NewSellerVenderInfoGetRequest() (req *SellerVenderInfoGetRequest) {\n   13  \trequest := sdk.Request{MethodName: \"jingdong.seller.vender.info.get\", Params: nil}\n   14: \treq = &SellerVenderInfoGetRequest{\n   15  \t\tRequest: &request,\n   16  \t}\n\n49 matches across 6 files\n\n\nSearching 216 files for \"PromotionList\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/shop.interface.go:\n   27  }\n   28  \n   29: type PromotionList struct {\n   30  \tAccountId             uint64 `json:\"vender_id\" codec:\"vender_id\"`\n   31  \tPromoId               uint64 `json:\"promo_id\" codec:\"promo_id\"`\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/seller/promotion/list.go:\n   27  \tCode          string           `json:\"code,omitempty\" codec:\"code,omitempty\"`\n   28  \tErrorDesc     string           `json:\"error_description,omitempty\" codec:\"error_description,omitempty\"`\n   29: \tPromotionList []*PromotionList `json:\"promotion_list,omitempty\" codec:\"promotion_list,omitempty\"`\n   30  }\n   31  \n   32  // 店铺促销查询\n   33: func List(req *ListRequest) ([]*PromotionList, error) {\n   34  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   35  \tclient.Debug = req.Debug\n   36: \tr := promotion.NewSellerPromotionListRequest()\n   37  \tif req.PageSize > 0 {\n   38  \t\tr.SetPageSize(req.PageSize)\n   ..\n   69  \t}\n   70  \n   71: \tvar response SellerPromotionListResponse\n   72  \terr = ljson.Unmarshal(result, &response)\n   73  \tif err != nil {\n   ..\n   82  \t}\n   83  \n   84: \treturn response.Data.PromotionList, nil\n   85  }\n   86  \n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/seller/promotion/list.go:\n    5  )\n    6  \n    7: type SellerPromotionListRequest struct {\n    8  \tRequest *sdk.Request\n    9  }\n   10  \n   11  // create new request\n   12: func NewSellerPromotionListRequest() (req *SellerPromotionListRequest) {\n   13  \trequest := sdk.Request{MethodName: \"jingdong.seller.promotion.v2.list\", Params: make(map[string]interface{}, 14)}\n   14: \treq = &SellerPromotionListRequest{\n   15  \t\tRequest: &request,\n   16  \t}\n   ..\n   18  }\n   19  \n   20: func (req *SellerPromotionListRequest) SetIp(ip string) {\n   21  \treq.Request.Params[\"ip\"] = ip\n   22  }\n   23  \n   24: func (req *SellerPromotionListRequest) GetIp() string {\n   25  \tip, found := req.Request.Params[\"ip\"]\n   26  \tif found {\n   ..\n   30  }\n   31  \n   32: func (req *SellerPromotionListRequest) SetPort(port string) {\n   33  \treq.Request.Params[\"port\"] = port\n   34  }\n   35  \n   36: func (req *SellerPromotionListRequest) GetPort() string {\n   37  \tport, found := req.Request.Params[\"port\"]\n   38  \tif found {\n   ..\n   42  }\n   43  \n   44: func (req *SellerPromotionListRequest) SetPromoId(promoId uint64) {\n   45  \treq.Request.Params[\"promo_id\"] = promoId\n   46  }\n   47  \n   48: func (req *SellerPromotionListRequest) GetPromoId() uint64 {\n   49  \tpromoId, found := req.Request.Params[\"promo_id\"]\n   50  \tif found {\n   ..\n   54  }\n   55  \n   56: func (req *SellerPromotionListRequest) SetName(name string) {\n   57  \treq.Request.Params[\"name\"] = name\n   58  }\n   59  \n   60: func (req *SellerPromotionListRequest) GetName() string {\n   61  \tname, found := req.Request.Params[\"name\"]\n   62  \tif found {\n   ..\n   66  }\n   67  \n   68: func (req *SellerPromotionListRequest) SetType(pType int) {\n   69  \treq.Request.Params[\"type\"] = pType\n   70  }\n   71  \n   72: func (req *SellerPromotionListRequest) GetType() int {\n   73  \tpType, found := req.Request.Params[\"type\"]\n   74  \tif found {\n   ..\n   78  }\n   79  \n   80: func (req *SellerPromotionListRequest) SetFavorMode(favorMode int) {\n   81  \treq.Request.Params[\"favor_mode\"] = favorMode\n   82  }\n   83  \n   84: func (req *SellerPromotionListRequest) GetFavorMode() int {\n   85  \tfavorMode, found := req.Request.Params[\"favor_mode\"]\n   86  \tif found {\n   ..\n   90  }\n   91  \n   92: func (req *SellerPromotionListRequest) SetBeginTime(beginTime string) {\n   93  \treq.Request.Params[\"begin_time\"] = beginTime\n   94  }\n   95  \n   96: func (req *SellerPromotionListRequest) GetBeginTime() string {\n   97  \tbeginTime, found := req.Request.Params[\"begin_time\"]\n   98  \tif found {\n   ..\n  102  }\n  103  \n  104: func (req *SellerPromotionListRequest) SetEndTime(endTime string) {\n  105  \treq.Request.Params[\"end_time\"] = endTime\n  106  }\n  107  \n  108: func (req *SellerPromotionListRequest) GetEndTime() string {\n  109  \tendTime, found := req.Request.Params[\"end_time\"]\n  110  \tif found {\n  ...\n  114  }\n  115  \n  116: func (req *SellerPromotionListRequest) SetPromoStatus(promoStatus int) {\n  117  \treq.Request.Params[\"promo_status\"] = promoStatus\n  118  }\n  119  \n  120: func (req *SellerPromotionListRequest) GetPromoStatus() int {\n  121  \tpromoStatus, found := req.Request.Params[\"promo_status\"]\n  122  \tif found {\n  ...\n  126  }\n  127  \n  128: func (req *SellerPromotionListRequest) SetWareId(wareId uint64) {\n  129  \treq.Request.Params[\"ware_id\"] = wareId\n  130  }\n  131  \n  132: func (req *SellerPromotionListRequest) GetWareId() uint64 {\n  133  \twareId, found := req.Request.Params[\"ware_id\"]\n  134  \tif found {\n  ...\n  138  }\n  139  \n  140: func (req *SellerPromotionListRequest) SetSkuId(skuId uint64) {\n  141  \treq.Request.Params[\"sku_id\"] = skuId\n  142  }\n  143  \n  144: func (req *SellerPromotionListRequest) GetSkuId() uint64 {\n  145  \tskuId, found := req.Request.Params[\"sku_id\"]\n  146  \tif found {\n  ...\n  150  }\n  151  \n  152: func (req *SellerPromotionListRequest) SetSrcType(srcType int) {\n  153  \treq.Request.Params[\"src_type\"] = srcType\n  154  }\n  155  \n  156: func (req *SellerPromotionListRequest) GetSrcType() int {\n  157  \tsrcType, found := req.Request.Params[\"src_type\"]\n  158  \tif found {\n  ...\n  162  }\n  163  \n  164: func (req *SellerPromotionListRequest) SetPage(page int) {\n  165  \treq.Request.Params[\"page\"] = page\n  166  }\n  167  \n  168: func (req *SellerPromotionListRequest) GetPage() int {\n  169  \tpage, found := req.Request.Params[\"page\"]\n  170  \tif found {\n  ...\n  174  }\n  175  \n  176: func (req *SellerPromotionListRequest) SetPageSize(pageSize int) {\n  177  \treq.Request.Params[\"pageS_size\"] = pageSize\n  178  }\n  179  \n  180: func (req *SellerPromotionListRequest) GetPageSize() int {\n  181  \tpageSize, found := req.Request.Params[\"pageS_size\"]\n  182  \tif found {\n\n39 matches across 3 files\n\n\nSearching 217 files for \"Sku2\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware/skusGet.go:\n   25  \tCode      string  `json:\"code,omitempty\" codec:\"code,omitempty\"`\n   26  \tErrorDesc string  `json:\"error_description,omitempty\" codec:\"error_description,omitempty\"`\n   27: \tSkus      []*Sku2 `json:\"skus,omitempty\" codec:\"skus,omitempty\"`\n   28  }\n   29  \n   30  // 根据条件检索订单信息 （仅适用于SOP、LBP，SOPL类型，FBP类型请调取FBP订单检索 ）\n   31: func SkusGet(req *SkusGetRequest) ([]*Sku2, error) {\n   32  \tclient := sdk.NewClient(req.AnApiKey.Key, req.AnApiKey.Secret)\n   33  \tclient.Debug = req.Debug\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware/ware.interface.go:\n   99  }\n  100  \n  101: type Sku2 struct {\n  102  \tSkuId       uint64 `json:\"sku_id,omitempty\" codec:\"sku_id,omitempty\"`             // sku的id\n  103  \tWareId      uint64 `json:\"ware_id,omitempty\" codec:\"ware_id,omitempty\"`           // sku所属商品id\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go:\n  502  }\n  503  \n  504: func ware_skus_get(session string, token string) ([]*api.Sku2, error) {\n  505  \treq := &api.WareSkusGetRequest{\n  506  \t\tBaseRequest: api.BaseRequest{\n\n4 matches across 3 files\n\n\nSearching 216 files for \"RegistrationItem\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/registration.item.interface.go:\n    1  package api\n    2  \n    3: type RegistrationItem struct {\n    4  \tInformationChannel      string `json:\"informationChannel,omitempty\" codec:\"informationChannel,omitempty\"`\n    5  \tBirthday                string `json:\"birthday,omitempty\" codec:\"birthday,omitempty\"`\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/acty/enqueryRegistrationDataCount.go:\n   31  \tResultCode        uint                `json:\"resultCode\" codec:\"resultCode,omitempty\"`\n   32  \tCount             uint                `json:\"count\" codec:\"count\"`\n   33: \tRegistrationItems []*RegistrationItem `json:\"registrationItems,omitempty\" codec:\"registrationItems,omitempty\"`\n   34  }\n   35  \n\n3 matches across 2 files\n\n\nSearching 216 files for \"Json(\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/util/util.go:\n    6  )\n    7  \n    8: func Json(obj interface{}) string {\n    9  \tvar buf bytes.Buffer\n   10  \tenc := json.NewEncoder(&buf)\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go:\n    ERROR: Unable to open file\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/client.go:\n  112      debug.DebugPrintPostJSONRequest(gwURL, sysParams)\n  113  \tif c.Debug {\n  114: \t\tlogger.Infof(\"params: %v\", Json(sysParams))\n  115  \t}\n  116  \tvalues := url.Values{}\n\n/Users/syd/Documents/GitHub/XiBao/jos/sdk/util.go:\n    6  )\n    7  \n    8: func Json(obj interface{}) string {\n    9  \tvar buf bytes.Buffer\n   10  \tenc := json.NewEncoder(&buf)\n\n3 matches across 3 files\n\n\nSearching 216 files for \"github.com/XiBao/jos/api/brand\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go:\n    ERROR: Unable to open file\n\n0 matches\n\nSearching 216 files for \"github.com/XiBao/jos/api/brand/category\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go:\n    ERROR: Unable to open file\n\n0 matches\n\nSearching 216 files for \"Feature\" (case sensitive)\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/category/category.interface.go:\n    7  \tName     string     `json:\"name,omitempty\" codec:\"name,omitempty\"`         // 类目名称\n    8  \tOrder    int        `json:\"order,omitempty\" codec:\"order,omitempty\"`       // 排序\n    9: \tFeatures []*Feature `json:\"features,omitempty\" codec:\"features,omitempty\"` // 类目特殊属性列表\n   10  }\n   11  \n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware/searchWare4Valid.go:\n   22  \tPromiseId            uint64   `json:\"promiseId,omitempty\" codec:\"promiseId,omitempty\"`                       // 时效模板ID\n   23  \tBrandId              uint64   `json:\"brandId,omitempty\" codec:\"brandId,omitempty\"`                           // 品牌ID\n   24: \tFeatureKey           []string `json:\"featureKey,omitempty\" codec:\"featureKey,omitempty\"`                     // 商品的特殊属性key\n   25: \tFeatureValue         []string `json:\"featureValue,omitempty\" codec:\"featureValue,omitempty\"`                 // 商品的特殊属性value\n   26  \tWareStatusValue      []int    `json:\"wareStatusValue,omitempty\" codec:\"wareStatusValue,omitempty\"`           // 商品状态,多个值属于[或]操作 1:从未上架 2:自主下架 4:系统下架 8:上架 513:从未上架待审 514:自主下架待审 516:系统下架待审 520:上架待审核 1028:系统下架审核失败\n   27  \tItemNum              string   `json:\"itemNum,omitempty\" codec:\"itemNum,omitempty\"`                           // 商品货号\n\n/Users/syd/Documents/GitHub/XiBao/jos/api/ware/ware.interface.go:\n   27  \tLength               float64     `json:\"length,omitempty\" codec:\"length,omitempty\"`                             // 长\n   28  \tProps                []*SaleAttr `json:\"props,omitempty\" codec:\"props,omitempty\"`                               // 商品属性\n   29: \tFeatures             []*Feature  `json:\"features,omitempty\" codec:\"features,omitempty\"`                         // 特殊属性集合\n   30  \tImages               []*Image    `json:\"images,omitempty\" codec:\"images,omitempty\"`                             // 商品图片\n   31  \tShopCategorys        []int       `json:\"shopCategorys,omitempty\" codec:\"shopCategorys,omitempty\"`               // 店内分类\n   ..\n   73  \tStatus               uint8       `json:\"status,omitempty\" codec:\"status,omitempty\"`       // 状态,只读属性. 1:上架 2:下架 4:删除\n   74  \tSaleAttrs            []*SaleAttr `json:\"saleAttrs,omitempty\" codec:\"saleAttrs,omitempty\"` // 销售属性集合\n   75: \tFeatures             []*Feature  `json:\"features,omitempty\" codec:\"features,omitempty\"`   // 特殊属性集合\n   76  \tJdPrice              float64     `json:\"jdPrice,omitempty\" codec:\"jdPrice,omitempty\"`     // 京东价\n   77  \tPromoPrice           float64     `json:\"promoPrice,omitempty\", codec:\"promoPrice,omitempty\"`\n   ..\n  126  }\n  127  \n  128: type Feature struct {\n  129: \tFeatureCn    string `json:\"featureCn,omitempty\" codec:\"featureCn,omitempty\"`       // 特殊属性中文含义\n  130: \tFeatureKey   string `json:\"featureKey,omitempty\" codec:\"featureKey,omitempty\"`     // 特殊属性key\n  131: \tFeatureValue string `json:\"featureValue,omitempty\" codec:\"featureValue,omitempty\"` // 特殊属性value\n  132  }\n  133  \n\n/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go:\n    ERROR: Unable to open file\n\n12 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 174221,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"gosublime: fm",
				"GoSublime: Fmt the current file (without saving it)"
			],
			[
				"pa",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 182.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/syd/Documents/GitHub/XiBao/jos/api",
		"/Users/syd/Documents/GitHub/XiBao/jos/bin",
		"/Users/syd/Documents/GitHub/XiBao/jos/bin/test",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk"
	],
	"file_history":
	[
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/internal/debug/release.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/wxsq/mjgj/link/getOpenLink.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/unionservice/queryOrderList.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/token/toPin.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/points/sendPoints.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/seller/promotion/appendPromoUsers.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/seller/promotion/skuList.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/seller/promotion/userList.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/seller/promotion/fullCreate.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/points/getPointsRule.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/jm/getJmUserBaseInfoByEncryPin.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/jm/getJmUserBaseInfoByEncryPin.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/fw/orderListwithpage.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/follow/queryForCountByVid.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/daybudgetUpdate.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/balanceGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/internal/debug/debug.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/util.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/crm/getMemeberDiscount.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/dsp/balanceGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/crm/getGrades.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/crm/getGrade.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/category/category.interface.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/ware/skusGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/ware/baseProductGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/client.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/category/findCateByPid.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/bean/sendBean.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/acty/enqueryRegistrationDataCount.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/acty/enqueryRegistrationDataCount.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/account/getAccountInfo.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/helper/GetShopVenderInfo.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/vender/getVenderStatus.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/vender/commonQuery.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/bin/test/main.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/registration.item.interface.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/GetAccessToken.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/GetAccessTokenNew.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/GetShopVenderInfo.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/vender/syncBind.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/vender/shopQuery.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/vender/getVenderStatus.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/vender/getVenderLevelRule.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/vender/getMemberLevel.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/vender/shop.interface.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/ware/WarePriceGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/ware/priceGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/ware/skusGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/shop.interface.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/vender/getCustomerBasicInfo.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/vender/syncBind.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/vender/shopQuery.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/vender/getVenderLevelRule.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/vender/getMemberLevel.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/vender/getCustomerBasicInfo.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/vender/commonQuery.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/seller/promotion/removePromoUsers.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/UnionQueryOrderList.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/TokenToPin.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/seller/promotion/promotion.interface.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/SendBean.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/seller/promotion/count.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/seller/promotion/create.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/seller/promotion/list.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/seller/vender/infoGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/seller/vender/vender.interface.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/seller/promotion/list.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/seller/promotion/userList.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/seller/promotion/skuList.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/seller/promotion/removePromoUsers.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/seller/promotion/fullCreate.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/seller/promotion/create.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/seller/promotion/count.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/seller/promotion/appendPromoUsers.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/seller/vender/infoGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/ware/searchWare4Valid.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/ware/searchWare4Valid.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/sku/searchSkuList.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/sku/searchSkuList.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/interface.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/sdk/request/follow/queryForCountByVid.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/wxsq/mjqj/link/getOpenLink.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/ware/venderSkusQuery.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/ware/mobileBigFieldGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/ware/findWareById.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/user/getUserBaseInfoByEncryPin.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/sku/findSkuById.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/points/queryGiftSkuByExchangeGiftId.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/points/getPointsRule.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/points/points.interface.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/points/getPointsExchangeGiftList.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/points/getCouponInfo.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/points/batchInsertOrUpdateRule.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/plan/addBeanPlan.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/order/popOrderEnSearch.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/order/order.interface.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/order/popOrderEnGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/jzone/addCartItemByPin.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/jm/getUserBaseInfoByPin.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/jm/getEncryptPinNew.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/isv/uploadOrderLog.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/isv/uploadLoginLog.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/isv/uploadDBOperationLog.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/interact/center/writeCollectCoupon.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/interact/center/findCollectInfo.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/interact/center/createGiftActivity.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/follow/IsFollowByPinAndVid.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/follow/followProductComplexWriteFollow.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/follow/followByPinAndVid.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/report/queryGroupDailySum.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/report/queryCampDailySum.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/report/queryAccountReport.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/report/adgroupkeywordQuery.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/statusUpdate.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/get.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/delete.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/add.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/ad/updatestatus.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/ad/queryAdListByParam.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkcunit/statusUpdate.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkcunit/adgroupList.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/kc/campaign/list.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/updateKeyWords.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/recommendkeywordGet.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/newkeywordInsert.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/keywordpricesuggestQuery.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/keywordDelete.go",
		"/Users/syd/Documents/GitHub/XiBao/jos/api/dsp/adkckeyword/categorypricesuggestQuery.go"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 115.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"fmt",
			"Feature",
			"github.com/XiBao/jos/api/brand/category",
			"github.com/XiBao/jos/api/brand",
			"Json(",
			"Json",
			"RegistrationItem",
			"Sku2",
			"PromotionList",
			"VenderInfo",
			"PointsRule",
			"Paginator",
			"fmt",
			"errors",
			"ErrorResponnse",
			"ApiResult",
			"OrderInfo",
			"ProductsBase",
			"NewGetOpenLinkRequest",
			"NewOrderListwithpageRequest",
			"SaleAttr",
			"AdWords",
			"type Sku struct",
			"strings",
			"NewEnqueryRegistrationDataCount",
			"log",
			"JosKeyword",
			"strconv",
			"fmt",
			"DspCampaignQuery",
			"Json",
			"RemoveJsonSpace",
			"NewDspBalanceRequest",
			"log",
			"fmt",
			"NewQueryBrandsIdByVenderIdRequest",
			"Category",
			"NewServiceAndRefundViewRequest",
			"BeanAccountInfo",
			"fmt",
			"log",
			"NewAddBeanPlanRequest",
			"Crm",
			"CrmMember",
			"CustomerInfoEs",
			"fmt",
			"log",
			"fmt",
			"log",
			"fmt",
			"log",
			"NewDeleteCustomerOpenInfoRequest",
			"NewCrmSetShopLevelRule",
			"SetShopLevelRule",
			"SetShopLevelRuleData",
			"SetShopLevelRuleResponse",
			"SetShopLevelRuleRequest",
			"fmt",
			"log"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 174221,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										201,
										204
									],
									[
										330,
										330
									],
									[
										532,
										535
									],
									[
										673,
										676
									],
									[
										899,
										902
									],
									[
										1038,
										1041
									],
									[
										1254,
										1257
									],
									[
										1395,
										1398
									],
									[
										1610,
										1613
									],
									[
										1749,
										1752
									],
									[
										1974,
										1977
									],
									[
										2138,
										2141
									],
									[
										2363,
										2366
									],
									[
										2506,
										2509
									],
									[
										2724,
										2727
									],
									[
										2867,
										2870
									],
									[
										3087,
										3090
									],
									[
										3230,
										3233
									],
									[
										3482,
										3485
									],
									[
										3600,
										3603
									],
									[
										3847,
										3850
									],
									[
										4026,
										4029
									],
									[
										4109,
										4112
									],
									[
										4369,
										4372
									],
									[
										4487,
										4490
									],
									[
										4737,
										4740
									],
									[
										4901,
										4904
									],
									[
										5156,
										5159
									],
									[
										5318,
										5321
									],
									[
										5565,
										5568
									],
									[
										5729,
										5732
									],
									[
										5973,
										5976
									],
									[
										6138,
										6141
									],
									[
										6327,
										6330
									],
									[
										6491,
										6494
									],
									[
										6709,
										6712
									],
									[
										6820,
										6823
									],
									[
										6978,
										6981
									],
									[
										7214,
										7217
									],
									[
										7379,
										7382
									],
									[
										7621,
										7624
									],
									[
										7785,
										7788
									],
									[
										8035,
										8038
									],
									[
										8199,
										8202
									],
									[
										8439,
										8442
									],
									[
										8603,
										8606
									],
									[
										8840,
										8843
									],
									[
										9002,
										9005
									],
									[
										9238,
										9241
									],
									[
										9403,
										9406
									],
									[
										9651,
										9654
									],
									[
										9815,
										9818
									],
									[
										10056,
										10059
									],
									[
										10220,
										10223
									],
									[
										10470,
										10473
									],
									[
										10588,
										10591
									],
									[
										10822,
										10825
									],
									[
										10933,
										10936
									],
									[
										11108,
										11111
									],
									[
										11344,
										11347
									],
									[
										11506,
										11509
									],
									[
										11695,
										11698
									],
									[
										11860,
										11863
									],
									[
										12096,
										12099
									],
									[
										12237,
										12240
									],
									[
										12445,
										12448
									],
									[
										12586,
										12589
									],
									[
										12795,
										12798
									],
									[
										12936,
										12939
									],
									[
										13023,
										13026
									],
									[
										13276,
										13279
									],
									[
										13417,
										13420
									],
									[
										13625,
										13628
									],
									[
										13766,
										13769
									],
									[
										13979,
										13982
									],
									[
										14122,
										14125
									],
									[
										14351,
										14354
									],
									[
										14494,
										14497
									],
									[
										14712,
										14715
									],
									[
										14853,
										14856
									],
									[
										15084,
										15087
									],
									[
										15213,
										15216
									],
									[
										15362,
										15365
									],
									[
										15571,
										15574
									],
									[
										15700,
										15703
									],
									[
										15849,
										15852
									],
									[
										16063,
										16066
									],
									[
										16204,
										16207
									],
									[
										16412,
										16415
									],
									[
										16553,
										16556
									],
									[
										16766,
										16769
									],
									[
										16905,
										16908
									],
									[
										17115,
										17118
									],
									[
										17255,
										17258
									],
									[
										17477,
										17480
									],
									[
										17610,
										17613
									],
									[
										17751,
										17754
									],
									[
										17964,
										17967
									],
									[
										18105,
										18108
									],
									[
										18298,
										18301
									],
									[
										18359,
										18362
									],
									[
										18499,
										18502
									],
									[
										18709,
										18712
									],
									[
										18850,
										18853
									],
									[
										19059,
										19062
									],
									[
										19200,
										19203
									],
									[
										19362,
										19365
									],
									[
										19465,
										19468
									],
									[
										19686,
										19689
									],
									[
										19819,
										19822
									],
									[
										19960,
										19963
									],
									[
										20176,
										20179
									],
									[
										20309,
										20312
									],
									[
										20450,
										20453
									],
									[
										20667,
										20670
									],
									[
										20737,
										20740
									],
									[
										20899,
										20902
									],
									[
										21119,
										21122
									],
									[
										21180,
										21183
									],
									[
										21321,
										21324
									],
									[
										21535,
										21538
									],
									[
										21596,
										21599
									],
									[
										21739,
										21742
									],
									[
										21962,
										21965
									],
									[
										22105,
										22108
									],
									[
										22313,
										22316
									],
									[
										22374,
										22377
									],
									[
										22514,
										22517
									],
									[
										22713,
										22716
									],
									[
										22774,
										22777
									],
									[
										22914,
										22917
									],
									[
										23113,
										23116
									],
									[
										23174,
										23177
									],
									[
										23314,
										23317
									],
									[
										23536,
										23539
									],
									[
										23679,
										23682
									],
									[
										23894,
										23897
									],
									[
										24035,
										24038
									],
									[
										24260,
										24263
									],
									[
										24401,
										24404
									],
									[
										24629,
										24632
									],
									[
										24770,
										24773
									],
									[
										24980,
										24983
									],
									[
										25123,
										25126
									],
									[
										25343,
										25346
									],
									[
										25486,
										25489
									],
									[
										25654,
										25657
									],
									[
										25681,
										25684
									],
									[
										25727,
										25730
									],
									[
										25735,
										25738
									],
									[
										25834,
										25837
									],
									[
										25842,
										25845
									],
									[
										25867,
										25870
									],
									[
										25877,
										25880
									],
									[
										25906,
										25909
									],
									[
										25959,
										25962
									],
									[
										25976,
										25979
									],
									[
										26244,
										26247
									],
									[
										26254,
										26257
									],
									[
										26273,
										26276
									],
									[
										26315,
										26318
									],
									[
										26339,
										26342
									],
									[
										26364,
										26367
									],
									[
										26458,
										26461
									],
									[
										26485,
										26488
									],
									[
										26494,
										26497
									],
									[
										26502,
										26505
									],
									[
										26508,
										26511
									],
									[
										26553,
										26556
									],
									[
										26574,
										26577
									],
									[
										26585,
										26588
									],
									[
										26596,
										26599
									],
									[
										26608,
										26611
									],
									[
										26620,
										26623
									],
									[
										26649,
										26652
									],
									[
										26826,
										26829
									],
									[
										26967,
										26970
									],
									[
										27178,
										27181
									],
									[
										27319,
										27322
									],
									[
										27529,
										27532
									],
									[
										27669,
										27672
									],
									[
										27885,
										27888
									],
									[
										28026,
										28029
									],
									[
										28113,
										28116
									],
									[
										28372,
										28375
									],
									[
										28516,
										28519
									],
									[
										29104,
										29107
									],
									[
										29134,
										29137
									],
									[
										29673,
										29676
									],
									[
										29814,
										29817
									],
									[
										30026,
										30029
									],
									[
										30170,
										30173
									],
									[
										30376,
										30379
									],
									[
										30446,
										30449
									],
									[
										30601,
										30604
									],
									[
										30761,
										30764
									],
									[
										30977,
										30980
									],
									[
										31118,
										31121
									],
									[
										31330,
										31333
									],
									[
										31471,
										31474
									],
									[
										31684,
										31687
									],
									[
										31745,
										31748
									],
									[
										31878,
										31881
									],
									[
										32019,
										32022
									],
									[
										32235,
										32238
									],
									[
										32366,
										32369
									],
									[
										32505,
										32508
									],
									[
										32834,
										32837
									],
									[
										32872,
										32875
									],
									[
										32897,
										32900
									],
									[
										33238,
										33241
									],
									[
										33272,
										33275
									],
									[
										33283,
										33286
									],
									[
										33427,
										33430
									],
									[
										33488,
										33491
									],
									[
										33619,
										33622
									],
									[
										33758,
										33761
									],
									[
										34099,
										34102
									],
									[
										34135,
										34138
									],
									[
										34395,
										34398
									],
									[
										34423,
										34426
									],
									[
										34434,
										34437
									],
									[
										34543,
										34546
									],
									[
										34604,
										34607
									],
									[
										34735,
										34738
									],
									[
										34874,
										34877
									],
									[
										35087,
										35090
									],
									[
										35220,
										35223
									],
									[
										35361,
										35364
									],
									[
										35574,
										35577
									],
									[
										35635,
										35638
									],
									[
										35768,
										35771
									],
									[
										35909,
										35912
									],
									[
										36115,
										36118
									],
									[
										36176,
										36179
									],
									[
										36309,
										36312
									],
									[
										36450,
										36453
									],
									[
										36669,
										36672
									],
									[
										36802,
										36805
									],
									[
										36943,
										36946
									],
									[
										37158,
										37161
									],
									[
										37291,
										37294
									],
									[
										37432,
										37435
									],
									[
										37636,
										37639
									],
									[
										37777,
										37780
									],
									[
										37983,
										37986
									],
									[
										38122,
										38125
									],
									[
										38533,
										38536
									],
									[
										38569,
										38572
									],
									[
										38594,
										38597
									],
									[
										39109,
										39112
									],
									[
										39136,
										39139
									],
									[
										39488,
										39491
									],
									[
										39628,
										39631
									],
									[
										39842,
										39845
									],
									[
										39983,
										39986
									],
									[
										40188,
										40191
									],
									[
										40249,
										40252
									],
									[
										40398,
										40401
									],
									[
										40565,
										40568
									],
									[
										40800,
										40803
									],
									[
										40962,
										40965
									],
									[
										41188,
										41191
									],
									[
										41329,
										41332
									],
									[
										41550,
										41553
									],
									[
										41691,
										41694
									],
									[
										41909,
										41912
									],
									[
										42048,
										42051
									],
									[
										42257,
										42260
									],
									[
										42390,
										42393
									],
									[
										42531,
										42534
									],
									[
										42753,
										42756
									],
									[
										42912,
										42915
									],
									[
										43076,
										43079
									],
									[
										43533,
										43536
									],
									[
										43556,
										43559
									],
									[
										44180,
										44183
									],
									[
										44203,
										44206
									],
									[
										44662,
										44665
									],
									[
										44685,
										44688
									],
									[
										44886,
										44889
									],
									[
										45027,
										45030
									],
									[
										45212,
										45215
									],
									[
										45403,
										45406
									],
									[
										45610,
										45613
									],
									[
										45751,
										45754
									],
									[
										45964,
										45967
									],
									[
										46107,
										46110
									],
									[
										46321,
										46324
									],
									[
										46348,
										46351
									],
									[
										46431,
										46434
									],
									[
										46460,
										46463
									],
									[
										46475,
										46478
									],
									[
										46714,
										46717
									],
									[
										46722,
										46725
									],
									[
										46815,
										46818
									],
									[
										46841,
										46844
									],
									[
										46931,
										46934
									],
									[
										47061,
										47064
									],
									[
										47189,
										47192
									],
									[
										47293,
										47296
									],
									[
										47310,
										47313
									],
									[
										47578,
										47581
									],
									[
										47588,
										47591
									],
									[
										47607,
										47610
									],
									[
										47649,
										47652
									],
									[
										47673,
										47676
									],
									[
										47698,
										47701
									],
									[
										47792,
										47795
									],
									[
										47819,
										47822
									],
									[
										47828,
										47831
									],
									[
										47836,
										47839
									],
									[
										47842,
										47845
									],
									[
										47887,
										47890
									],
									[
										47908,
										47911
									],
									[
										47919,
										47922
									],
									[
										47930,
										47933
									],
									[
										47942,
										47945
									],
									[
										47954,
										47957
									],
									[
										47983,
										47986
									],
									[
										48102,
										48105
									],
									[
										48160,
										48163
									],
									[
										48329,
										48332
									],
									[
										48387,
										48390
									],
									[
										48574,
										48577
									],
									[
										48632,
										48635
									],
									[
										48811,
										48814
									],
									[
										48869,
										48872
									],
									[
										49026,
										49029
									],
									[
										49084,
										49087
									],
									[
										49262,
										49265
									],
									[
										49320,
										49323
									],
									[
										49488,
										49491
									],
									[
										49546,
										49549
									],
									[
										49728,
										49731
									],
									[
										49786,
										49789
									],
									[
										49945,
										49948
									],
									[
										50003,
										50006
									],
									[
										50170,
										50173
									],
									[
										50228,
										50231
									],
									[
										50403,
										50406
									],
									[
										50461,
										50464
									],
									[
										50634,
										50637
									],
									[
										50692,
										50695
									],
									[
										50871,
										50874
									],
									[
										50929,
										50932
									],
									[
										51120,
										51123
									],
									[
										51178,
										51181
									],
									[
										51339,
										51342
									],
									[
										51397,
										51400
									],
									[
										51574,
										51577
									],
									[
										51632,
										51635
									],
									[
										51803,
										51806
									],
									[
										51861,
										51864
									],
									[
										52027,
										52030
									],
									[
										52085,
										52088
									],
									[
										52248,
										52251
									],
									[
										52306,
										52309
									],
									[
										52457,
										52460
									],
									[
										52515,
										52518
									],
									[
										52672,
										52675
									],
									[
										52730,
										52733
									],
									[
										52898,
										52901
									],
									[
										52956,
										52959
									],
									[
										53107,
										53110
									],
									[
										53165,
										53168
									],
									[
										53328,
										53331
									],
									[
										53386,
										53389
									],
									[
										53567,
										53570
									],
									[
										53625,
										53628
									],
									[
										53804,
										53807
									],
									[
										53862,
										53865
									],
									[
										54029,
										54032
									],
									[
										54087,
										54090
									],
									[
										54278,
										54281
									],
									[
										54336,
										54339
									],
									[
										54521,
										54524
									],
									[
										54609,
										54612
									],
									[
										54683,
										54686
									],
									[
										55350,
										55353
									],
									[
										56149,
										56152
									],
									[
										56501,
										56504
									],
									[
										57073,
										57076
									],
									[
										57853,
										57856
									],
									[
										58362,
										58365
									],
									[
										58532,
										58535
									],
									[
										58598,
										58601
									],
									[
										58737,
										58740
									],
									[
										58850,
										58853
									],
									[
										59104,
										59107
									],
									[
										59337,
										59340
									],
									[
										59479,
										59482
									],
									[
										59573,
										59576
									],
									[
										59768,
										59771
									],
									[
										59904,
										59907
									],
									[
										60046,
										60049
									],
									[
										60137,
										60140
									],
									[
										60299,
										60302
									],
									[
										60487,
										60490
									],
									[
										60651,
										60654
									],
									[
										60845,
										60848
									],
									[
										60990,
										60993
									],
									[
										61235,
										61238
									],
									[
										61361,
										61364
									],
									[
										61388,
										61391
									],
									[
										61434,
										61437
									],
									[
										61442,
										61445
									],
									[
										61541,
										61544
									],
									[
										61549,
										61552
									],
									[
										61574,
										61577
									],
									[
										61584,
										61587
									],
									[
										61636,
										61639
									],
									[
										61653,
										61656
									],
									[
										61921,
										61924
									],
									[
										61931,
										61934
									],
									[
										61950,
										61953
									],
									[
										61992,
										61995
									],
									[
										62016,
										62019
									],
									[
										62041,
										62044
									],
									[
										62135,
										62138
									],
									[
										62162,
										62165
									],
									[
										62171,
										62174
									],
									[
										62179,
										62182
									],
									[
										62185,
										62188
									],
									[
										62230,
										62233
									],
									[
										62251,
										62254
									],
									[
										62262,
										62265
									],
									[
										62273,
										62276
									],
									[
										62285,
										62288
									],
									[
										62297,
										62300
									],
									[
										62326,
										62329
									],
									[
										62496,
										62499
									],
									[
										62503,
										62506
									],
									[
										62548,
										62551
									],
									[
										62559,
										62562
									],
									[
										62634,
										62637
									],
									[
										62660,
										62663
									],
									[
										62697,
										62700
									],
									[
										62741,
										62744
									],
									[
										62937,
										62940
									],
									[
										62944,
										62947
									],
									[
										62989,
										62992
									],
									[
										63000,
										63003
									],
									[
										63079,
										63082
									],
									[
										63105,
										63108
									],
									[
										63142,
										63145
									],
									[
										63186,
										63189
									],
									[
										63532,
										63564
									],
									[
										63768,
										63800
									],
									[
										64199,
										64213
									],
									[
										64588,
										64602
									],
									[
										64604,
										64618
									],
									[
										64766,
										64780
									],
									[
										64955,
										64969
									],
									[
										65172,
										65181
									],
									[
										65669,
										65678
									],
									[
										65684,
										65693
									],
									[
										66068,
										66077
									],
									[
										66083,
										66092
									],
									[
										66448,
										66469
									],
									[
										66691,
										66712
									],
									[
										67084,
										67099
									],
									[
										67394,
										67409
									],
									[
										67492,
										67507
									],
									[
										67648,
										67663
									],
									[
										67827,
										67842
									],
									[
										68050,
										68065
									],
									[
										68159,
										68174
									],
									[
										68183,
										68198
									],
									[
										68209,
										68224
									],
									[
										68366,
										68381
									],
									[
										68560,
										68575
									],
									[
										68763,
										68778
									],
									[
										68888,
										68903
									],
									[
										68922,
										68937
									],
									[
										69086,
										69101
									],
									[
										69192,
										69207
									],
									[
										69346,
										69361
									],
									[
										69525,
										69540
									],
									[
										69680,
										69695
									],
									[
										70117,
										70147
									],
									[
										70321,
										70351
									],
									[
										70742,
										70750
									],
									[
										71063,
										71071
									],
									[
										71263,
										71271
									],
									[
										71447,
										71455
									],
									[
										71665,
										71673
									],
									[
										71722,
										71730
									],
									[
										71868,
										71876
									],
									[
										72261,
										72269
									],
									[
										72362,
										72370
									],
									[
										72639,
										72647
									],
									[
										72670,
										72678
									],
									[
										72706,
										72714
									],
									[
										72884,
										72892
									],
									[
										73090,
										73098
									],
									[
										73563,
										73571
									],
									[
										74073,
										74081
									],
									[
										74119,
										74127
									],
									[
										74143,
										74151
									],
									[
										74484,
										74492
									],
									[
										74518,
										74526
									],
									[
										74864,
										74872
									],
									[
										74910,
										74918
									],
									[
										74934,
										74942
									],
									[
										75362,
										75370
									],
									[
										76006,
										76014
									],
									[
										76387,
										76395
									],
									[
										76433,
										76441
									],
									[
										76457,
										76465
									],
									[
										76666,
										76674
									],
									[
										76715,
										76723
									],
									[
										77233,
										77241
									],
									[
										77918,
										77926
									],
									[
										78473,
										78481
									],
									[
										78519,
										78527
									],
									[
										78543,
										78551
									],
									[
										78755,
										78763
									],
									[
										78804,
										78812
									],
									[
										79081,
										79089
									],
									[
										79091,
										79099
									],
									[
										79243,
										79251
									],
									[
										79419,
										79427
									],
									[
										79650,
										79658
									],
									[
										79810,
										79818
									],
									[
										80236,
										80244
									],
									[
										80355,
										80363
									],
									[
										80387,
										80395
									],
									[
										80419,
										80427
									],
									[
										81043,
										81051
									],
									[
										81174,
										81182
									],
									[
										81211,
										81219
									],
									[
										81250,
										81258
									],
									[
										81303,
										81311
									],
									[
										81340,
										81348
									],
									[
										81379,
										81387
									],
									[
										81943,
										81951
									],
									[
										81980,
										81988
									],
									[
										82014,
										82022
									],
									[
										82563,
										82571
									],
									[
										82660,
										82668
									],
									[
										83189,
										83197
									],
									[
										83844,
										83852
									],
									[
										83884,
										83892
									],
									[
										83916,
										83924
									],
									[
										84490,
										84498
									],
									[
										84895,
										84903
									],
									[
										84935,
										84943
									],
									[
										84969,
										84977
									],
									[
										85542,
										85550
									],
									[
										86374,
										86382
									],
									[
										86561,
										86569
									],
									[
										87154,
										87162
									],
									[
										87341,
										87349
									],
									[
										87777,
										87785
									],
									[
										87897,
										87905
									],
									[
										87938,
										87946
									],
									[
										88131,
										88139
									],
									[
										88252,
										88260
									],
									[
										88385,
										88393
									],
									[
										88551,
										88559
									],
									[
										88711,
										88719
									],
									[
										89020,
										89028
									],
									[
										89040,
										89048
									],
									[
										89098,
										89106
									],
									[
										89122,
										89130
									],
									[
										89208,
										89216
									],
									[
										89247,
										89255
									],
									[
										89297,
										89305
									],
									[
										89363,
										89371
									],
									[
										89581,
										89589
									],
									[
										89601,
										89609
									],
									[
										89658,
										89666
									],
									[
										89682,
										89690
									],
									[
										89776,
										89784
									],
									[
										89814,
										89822
									],
									[
										89864,
										89872
									],
									[
										89921,
										89929
									],
									[
										90124,
										90132
									],
									[
										90144,
										90152
									],
									[
										90202,
										90210
									],
									[
										90226,
										90234
									],
									[
										90310,
										90318
									],
									[
										90349,
										90357
									],
									[
										90399,
										90407
									],
									[
										90465,
										90473
									],
									[
										90674,
										90682
									],
									[
										90694,
										90702
									],
									[
										90749,
										90757
									],
									[
										90773,
										90781
									],
									[
										90858,
										90866
									],
									[
										90894,
										90902
									],
									[
										90944,
										90952
									],
									[
										91001,
										91009
									],
									[
										91431,
										91464
									],
									[
										91672,
										91705
									],
									[
										92209,
										92229
									],
									[
										92422,
										92442
									],
									[
										92815,
										92830
									],
									[
										93032,
										93047
									],
									[
										93247,
										93262
									],
									[
										93461,
										93476
									],
									[
										93657,
										93672
									],
									[
										93844,
										93859
									],
									[
										93995,
										94010
									],
									[
										94286,
										94301
									],
									[
										94476,
										94491
									],
									[
										94684,
										94699
									],
									[
										94872,
										94887
									],
									[
										95141,
										95145
									],
									[
										95330,
										95334
									],
									[
										95547,
										95551
									],
									[
										95762,
										95766
									],
									[
										95976,
										95980
									],
									[
										96172,
										96176
									],
									[
										96367,
										96371
									],
									[
										96550,
										96554
									],
									[
										97021,
										97025
									],
									[
										97429,
										97433
									],
									[
										97817,
										97821
									],
									[
										97848,
										97852
									],
									[
										97877,
										97881
									],
									[
										98016,
										98020
									],
									[
										98048,
										98052
									],
									[
										98063,
										98067
									],
									[
										98215,
										98219
									],
									[
										98423,
										98427
									],
									[
										98611,
										98615
									],
									[
										98764,
										98768
									],
									[
										98902,
										98906
									],
									[
										99216,
										99220
									],
									[
										99384,
										99388
									],
									[
										99509,
										99513
									],
									[
										99633,
										99637
									],
									[
										99753,
										99757
									],
									[
										99871,
										99875
									],
									[
										99995,
										99999
									],
									[
										100114,
										100118
									],
									[
										100235,
										100239
									],
									[
										100356,
										100360
									],
									[
										100481,
										100485
									],
									[
										100610,
										100614
									],
									[
										100738,
										100742
									],
									[
										100869,
										100873
									],
									[
										101006,
										101010
									],
									[
										101128,
										101132
									],
									[
										101258,
										101262
									],
									[
										101385,
										101389
									],
									[
										101509,
										101513
									],
									[
										101632,
										101636
									],
									[
										101749,
										101753
									],
									[
										101869,
										101873
									],
									[
										101994,
										101998
									],
									[
										102111,
										102115
									],
									[
										102234,
										102238
									],
									[
										102366,
										102370
									],
									[
										102497,
										102501
									],
									[
										102622,
										102626
									],
									[
										102759,
										102763
									],
									[
										102910,
										102914
									],
									[
										103156,
										103160
									],
									[
										103298,
										103302
									],
									[
										103474,
										103478
									],
									[
										103613,
										103617
									],
									[
										103860,
										103864
									],
									[
										103871,
										103875
									],
									[
										103920,
										103924
									],
									[
										103935,
										103939
									],
									[
										104013,
										104017
									],
									[
										104043,
										104047
									],
									[
										104084,
										104088
									],
									[
										104132,
										104136
									],
									[
										104398,
										104414
									],
									[
										104591,
										104607
									],
									[
										104948,
										104964
									],
									[
										105291,
										105301
									],
									[
										105383,
										105393
									],
									[
										105617,
										105627
									],
									[
										105856,
										105866
									],
									[
										105873,
										105883
									],
									[
										105887,
										105897
									],
									[
										105915,
										105925
									],
									[
										106095,
										106105
									],
									[
										106266,
										106276
									],
									[
										106375,
										106385
									],
									[
										106707,
										106738
									],
									[
										106938,
										106969
									],
									[
										107369,
										107384
									],
									[
										107885,
										107912
									],
									[
										108081,
										108108
									],
									[
										108582,
										108603
									],
									[
										108778,
										108799
									],
									[
										109173,
										109185
									],
									[
										109631,
										109643
									],
									[
										109829,
										109841
									],
									[
										110122,
										110134
									],
									[
										110349,
										110361
									],
									[
										110581,
										110590
									],
									[
										111143,
										111152
									],
									[
										111202,
										111211
									],
									[
										111373,
										111382
									],
									[
										111384,
										111393
									],
									[
										111639,
										111648
									],
									[
										111832,
										111841
									],
									[
										112023,
										112032
									],
									[
										112040,
										112049
									],
									[
										112168,
										112177
									],
									[
										112195,
										112204
									],
									[
										112212,
										112221
									],
									[
										112609,
										112618
									],
									[
										112829,
										112838
									],
									[
										112903,
										112912
									],
									[
										112976,
										112985
									],
									[
										112986,
										112995
									],
									[
										113021,
										113030
									],
									[
										113266,
										113275
									],
									[
										113461,
										113470
									],
									[
										113804,
										113813
									],
									[
										114098,
										114107
									],
									[
										114335,
										114344
									],
									[
										114725,
										114734
									],
									[
										114736,
										114745
									],
									[
										114918,
										114927
									],
									[
										114989,
										114998
									],
									[
										115289,
										115298
									],
									[
										115304,
										115313
									],
									[
										115491,
										115500
									],
									[
										115565,
										115574
									],
									[
										115837,
										115851
									],
									[
										116043,
										116057
									],
									[
										116317,
										116331
									],
									[
										116741,
										116755
									],
									[
										117142,
										117156
									],
									[
										117587,
										117601
									],
									[
										118048,
										118062
									],
									[
										118505,
										118519
									],
									[
										118946,
										118960
									],
									[
										119382,
										119396
									],
									[
										119827,
										119841
									],
									[
										120293,
										120307
									],
									[
										120736,
										120750
									],
									[
										121236,
										121250
									],
									[
										121633,
										121647
									],
									[
										121990,
										122004
									],
									[
										122379,
										122393
									],
									[
										122778,
										122792
									],
									[
										123207,
										123221
									],
									[
										123632,
										123646
									],
									[
										124038,
										124052
									],
									[
										124457,
										124471
									],
									[
										124854,
										124868
									],
									[
										125248,
										125262
									],
									[
										125626,
										125640
									],
									[
										125985,
										125999
									],
									[
										126350,
										126364
									],
									[
										126759,
										126773
									],
									[
										127193,
										127207
									],
									[
										127637,
										127651
									],
									[
										128025,
										128039
									],
									[
										128430,
										128444
									],
									[
										128849,
										128863
									],
									[
										129242,
										129256
									],
									[
										129611,
										129625
									],
									[
										130022,
										130036
									],
									[
										130429,
										130443
									],
									[
										130826,
										130840
									],
									[
										131221,
										131235
									],
									[
										131606,
										131620
									],
									[
										131977,
										131991
									],
									[
										132358,
										132372
									],
									[
										132733,
										132747
									],
									[
										133126,
										133140
									],
									[
										133529,
										133543
									],
									[
										133914,
										133928
									],
									[
										134315,
										134329
									],
									[
										134776,
										134790
									],
									[
										135223,
										135237
									],
									[
										135683,
										135697
									],
									[
										136126,
										136140
									],
									[
										136565,
										136579
									],
									[
										136981,
										136995
									],
									[
										137399,
										137413
									],
									[
										137824,
										137838
									],
									[
										138241,
										138255
									],
									[
										138620,
										138634
									],
									[
										139015,
										139029
									],
									[
										139420,
										139434
									],
									[
										139789,
										139803
									],
									[
										140154,
										140168
									],
									[
										140537,
										140551
									],
									[
										140954,
										140968
									],
									[
										141389,
										141403
									],
									[
										141816,
										141830
									],
									[
										142241,
										142255
									],
									[
										142661,
										142675
									],
									[
										143105,
										143119
									],
									[
										143531,
										143545
									],
									[
										143967,
										143981
									],
									[
										144388,
										144402
									],
									[
										144859,
										144873
									],
									[
										145322,
										145336
									],
									[
										145781,
										145795
									],
									[
										146196,
										146210
									],
									[
										146581,
										146595
									],
									[
										146977,
										146991
									],
									[
										147423,
										147437
									],
									[
										147873,
										147887
									],
									[
										148284,
										148298
									],
									[
										148677,
										148691
									],
									[
										149056,
										149070
									],
									[
										149436,
										149450
									],
									[
										149836,
										149850
									],
									[
										150268,
										150282
									],
									[
										150684,
										150698
									],
									[
										151124,
										151138
									],
									[
										151546,
										151560
									],
									[
										151995,
										152009
									],
									[
										152374,
										152388
									],
									[
										152776,
										152790
									],
									[
										153206,
										153220
									],
									[
										153604,
										153618
									],
									[
										153993,
										154007
									],
									[
										154395,
										154409
									],
									[
										154799,
										154813
									],
									[
										155344,
										155353
									],
									[
										155355,
										155364
									],
									[
										155627,
										155636
									],
									[
										155805,
										155814
									],
									[
										155816,
										155825
									],
									[
										156076,
										156085
									],
									[
										156211,
										156220
									],
									[
										156497,
										156506
									],
									[
										156508,
										156517
									],
									[
										156692,
										156701
									],
									[
										156951,
										156960
									],
									[
										157213,
										157223
									],
									[
										157417,
										157427
									],
									[
										157500,
										157510
									],
									[
										157658,
										157668
									],
									[
										157703,
										157713
									],
									[
										157764,
										157774
									],
									[
										157828,
										157838
									],
									[
										158068,
										158078
									],
									[
										158320,
										158330
									],
									[
										158339,
										158349
									],
									[
										158362,
										158372
									],
									[
										158513,
										158523
									],
									[
										158667,
										158677
									],
									[
										158899,
										158909
									],
									[
										159019,
										159029
									],
									[
										159143,
										159153
									],
									[
										159425,
										159435
									],
									[
										159508,
										159518
									],
									[
										159531,
										159541
									],
									[
										159738,
										159748
									],
									[
										159759,
										159769
									],
									[
										159940,
										159950
									],
									[
										160439,
										160449
									],
									[
										160451,
										160461
									],
									[
										160614,
										160624
									],
									[
										160768,
										160778
									],
									[
										160930,
										160940
									],
									[
										161153,
										161163
									],
									[
										161377,
										161387
									],
									[
										161518,
										161528
									],
									[
										161663,
										161673
									],
									[
										161789,
										161799
									],
									[
										161824,
										161834
									],
									[
										161960,
										161970
									],
									[
										162197,
										162210
									],
									[
										162641,
										162654
									],
									[
										162658,
										162671
									],
									[
										162812,
										162825
									],
									[
										162972,
										162985
									],
									[
										163113,
										163126
									],
									[
										163261,
										163274
									],
									[
										163409,
										163422
									],
									[
										163535,
										163548
									],
									[
										163570,
										163583
									],
									[
										163737,
										163750
									],
									[
										163844,
										163857
									],
									[
										163964,
										163977
									],
									[
										164115,
										164128
									],
									[
										164243,
										164256
									],
									[
										164400,
										164413
									],
									[
										164541,
										164554
									],
									[
										164708,
										164721
									],
									[
										164836,
										164849
									],
									[
										164993,
										165006
									],
									[
										165120,
										165133
									],
									[
										165275,
										165288
									],
									[
										165421,
										165434
									],
									[
										165591,
										165604
									],
									[
										165740,
										165753
									],
									[
										165913,
										165926
									],
									[
										166054,
										166067
									],
									[
										166221,
										166234
									],
									[
										166375,
										166388
									],
									[
										166551,
										166564
									],
									[
										166688,
										166701
									],
									[
										166852,
										166865
									],
									[
										166985,
										166998
									],
									[
										167146,
										167159
									],
									[
										167284,
										167297
									],
									[
										167448,
										167461
									],
									[
										167573,
										167586
									],
									[
										167727,
										167740
									],
									[
										167870,
										167883
									],
									[
										168321,
										168325
									],
									[
										168494,
										168498
									],
									[
										168709,
										168713
									],
									[
										169064,
										169068
									],
									[
										169360,
										169376
									],
									[
										169853,
										169869
									],
									[
										169874,
										169890
									],
									[
										170144,
										170149
									],
									[
										170501,
										170506
									],
									[
										170640,
										170645
									],
									[
										171436,
										171443
									],
									[
										171448,
										171455
									],
									[
										171869,
										171876
									],
									[
										172000,
										172007
									],
									[
										172797,
										172804
									],
									[
										172821,
										172828
									],
									[
										173422,
										173429
									],
									[
										173446,
										173453
									],
									[
										173763,
										173770
									],
									[
										173788,
										173795
									],
									[
										173891,
										173898
									],
									[
										173993,
										174000
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								171122,
								171122
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 32,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 106576.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.9o:///Users/syd/Library/Caches/Transmit/A0F82EF0-0C6A-40B4-BF55-BEA02502C86A/ec2-54-238-177-45.ap-northeast-1.compute.amazonaws.com/opt/go/src/github.com/tokenme/tmm/handler/redeem":
	{
		"height": 146.0
	},
	"output.9o:///Users/syd/Library/Caches/Transmit/A124D518-70B2-46C8-B598-4CC9C5591D32/ec2-54-238-177-45.ap-northeast-1.compute.amazonaws.com/opt/go/src/github.com/tokenme/tmm/common":
	{
		"height": 146.0
	},
	"output.9o:///Users/syd/Library/Caches/Transmit/A8A80217-A894-4053-852D-01C25E709EC2/ec2-54-238-177-45.ap-northeast-1.compute.amazonaws.com/opt/go/src/github.com/tokenme/tmm/tools/tokenprofile":
	{
		"height": 146.0
	},
	"output.9o:///Users/syd/Library/Caches/Transmit/CCA73E93-2DBE-4DFF-9929-3D348ABB2130/ec2-54-238-177-45.ap-northeast-1.compute.amazonaws.com/opt/go/src/github.com/tokenme/tmm/handler/task":
	{
		"height": 146.0
	},
	"output.GoSublime-main-output":
	{
		"height": 146.0
	},
	"output.GoSublime-output":
	{
		"height": 146.0
	},
	"output.MarGo-output":
	{
		"height": 146.0
	},
	"output.exec":
	{
		"height": 152.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "jos.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 223.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
